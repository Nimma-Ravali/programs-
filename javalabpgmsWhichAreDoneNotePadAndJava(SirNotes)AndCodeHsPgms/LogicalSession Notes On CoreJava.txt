
Logical session
-------------
package com.logical_session;

import java.util.Scanner;

public class Admin1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the Student Name");
		String studentName=sc.nextLine();
		System.out.println("Enter the English marks:");
		int english=sc.nextInt();
		System.out.println("Enter the Math Marks:");
		int mathematics=sc.nextInt();
		int totalMarks=ReportCard1.getTotalMarks(english,mathematics);
		System.out.println(totalMarks);
		double percentage=ReportCard1.getPercentege(totalMarks);
		System.out.println(percentage);
		ReportCard1.getGrade(percentage);
		
	}

}
==================================
package com.logical_session;

public class ReportCard1 {
public static int getTotalMarks(int s1,int s2) {
	int TotMarks=s1+s2;
	return TotMarks;
}
public static double getPercentege(int total){
	double percentage=total/2;
	return percentage;
}
public static void getGrade(double percentage) {
	String s;
	if(percentage>=90||percentage<=100) {
		s="A+";
	}else if(percentage>=80||percentage<=89) {
		s= "A";
	}else if(percentage<=70||percentage<=79) {
		s= "B+";
	}else if(percentage>=60||percentage<=69) {
		s= "B";
	}else if(percentage>=50||percentage<=59) {
		s= "C+";
		
	}else if(percentage>=40||percentage<=49) {
		s= "c";
	}else {
		s= "Fail";
	}
	System.out.println(s);
}
}
==========================
A recently placed candidate from NareshIt spends half of his salary on food,1 part of salary divided in 15 parts on PG,1 part of salary divided in 10 parts on activities such as outings, partying, shopping. Calculate and display amount of money spend and the money saved in the end of the month.

To calculate the amount of money spent and saved in a month, we need to know the monthly salary of the candidate. Assuming the monthly salary is Rs. 100, here is the calculation:

Half of the salary is spent on food: Rs. 50
One part of the salary divided into 15 parts is spent on PG: Rs. 100 / 15 = Rs. 6.67
One part of the salary divided into 10 parts is spent on activities such as outings, partying, shopping: Rs. 100 / 10 = Rs. 10
Therefore, the total amount of money spent in a month is Rs. 50 + Rs. 6.67 + Rs. 10 = Rs. 66.67.

To calculate the amount of money saved in a month, we need to subtract the amount spent from the monthly salary:

Monthly salary: Rs. 100
Amount spent: Rs. 66.67
Amount saved: Rs. 100 - Rs. 66.67 = Rs. 33.33
Therefore, the amount of money saved in a month is Rs. 33.33.
--------

package com.logical_session;

import java.util.Scanner;

public class Savings2 {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the monthly salary:");
	int salary=sc.nextInt();
	double food=calculateMoneySpentOnFood(salary);
	double pg=calculateMoneySpentOnPG(salary);
	double otherAct=calculateMoneySpentOnOtherActivities(salary);
	calculateMonthlySavings(salary,food,pg,otherAct);
}
public static double calculateMoneySpentOnFood(int sal) {
	return sal/2.0;
}
public static double calculateMoneySpentOnPG(int sal) {
	return sal/15.0;
}
public static double calculateMoneySpentOnOtherActivities(int sal) {
	return sal/10.0;
}
public static void calculateMonthlySavings(int sal,double f,double pg,double oa) {
	double savings=sal-(f+pg+oa);
	System.out.println(savings);
}
}
==========================================

package com.logical_session;

import java.util.Scanner;

public class VotingResult3 {
	 
public static void main(String[] args) {
	String name1="Mr.Revanth Reddy";
	String name2="Mr.KCR";
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the population in telangana");
	int population=sc.nextInt();
	double totVotes=getNoOfVotes(population);
	double aPartyVotes=getNoOfVotesForAparty(totVotes);
	double bPartyVotes=getNoOfVotesForBparty(totVotes,aPartyVotes);
	getTheNameOfTheWinner(aPartyVotes,bPartyVotes,name1,name2);
}
public static double getNoOfVotes(int p) {
	double totalVotes=p*(80.0/100.0);
	return totalVotes;
}
public static double getNoOfVotesForAparty(double tVotes) {
	double avotes=tVotes*(60.0/100.0);
	return avotes;
}
public static double getNoOfVotesForBparty(double tVotes,double aVotes) {
	double bVotes=tVotes-aVotes;
	return bVotes;
}
public static void getTheNameOfTheWinner(double aVotes,double bVotes,String n1,String n2) {
	if(aVotes>bVotes) 
		System.out.println("the winner is:"+n1);
	else
		System.out.println("the winner is:"+n2);
}
}
================================================================================

 Q3. On Flipkart Festive Sales, we get heavy discount on electronic products especially on mobile phones. You can even exchange your old phone and use the discount on new phone from the exchange rate. The more old is the phone the more its resale value is depreciated. Hence for the exchange rates Flipkart has got the following tariff:



Device Age                                                               Depreciation


within 1 year                                                                 20% on current market price

more than a year but less than 2 years                                         35% on current market price

more than 2 years but less than 3 years                                        50% on current market price

Above 3 years Suppose the old phone is Samsung Galaxy, used for 2.8 years.     60% on current market price

Calculate and display the original price of new phone, depreciated value of old phone, price of new phone, price to be paid after discount based on depreciated value of old phone

package com.Arrays;

import java.util.Scanner;

public class ReverseOfTheArray2 {

	public static void main(String[] args) {
		int arr[]=new int[2];
		int arr1[]=new int[2];
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the elements:");
        for(int i=0;i<arr.length;i++) {  
        	arr[i]=sc.nextInt();
	}

int i,j = 0;
if(arr.length==arr1.length) {
	System.out.println("Reverse of the array:");
for( i=arr.length-1;i>=0;i--) {
	if(j<=1) {
		arr1[j]=arr[i];
		System.out.println(arr1[j]);
	}
	}
	
}
	}
	}


package com.Arrays;

import java.util.Scanner;

public class ReverseOfTheArray2 {

	public static void main(String[] args) {
		int arr[]=new int[4];
		int arr1[]=new int[4];
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the elements:");
        for(int i=0;i<arr.length;i++) {  
        	arr[i]=sc.nextInt();
	}

int i,j;
if(arr.length==arr1.length) {
	System.out.println("Reverse of the array:");
	int len=arr.length;
for( i=len-1;i>=0;i--) {
		arr1[len-1]=arr[i];
		System.out.println(arr1[len]);
		len=len-1;	
		
	}
	
	}
	
}
	}
	


=======================================================================



WAP to display the number  and seperated with comma(,)at last comma remove put (.)
package logicalsession;

public class p1 {

	public static void main(String[] args) {
		int arr[]= {10,20,30,40,50};
		int len=arr.length;
		for(int index=0;index<len;index++) {
			System.out.print(arr[index]+"");
			if(index==len-1) {
				System.out.print(".");
				//System.out.print(arr[index]+".");
			}
			else {
				System.out.print(",");
				//System.out.print(arr[index]+",");
			}
		}

	}

}
-----------------------------------
WAP TO sum of the array elements

public class P2 {

	public static void main(String[] args) {
		int arr[]= {10,20,30,40,50};
		int len=arr.length;
		int sum=0;
		for(int index=0;index<len;index++) {
			
			sum+=arr[index];
			}
		System.out.println(sum);
		}

}
----------------------------------------
WAP to display even numbers,odd  numbers and number divided by 2 and 3 and number divided by 5.

package logicalsession;

public class P3 {
	public static void displayElements(int arr[]) {
		System.out.println("elements in the given array:");
		for(int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
        System.out.println("\n");
		
	}
	public static void getEvenNumbers(int arr[]) {
		System.out.println("even numbers:");
		for(int i=0;i<arr.length;i++) {
			if(arr[i]%2==0) {
			System.out.print(arr[i]+" ");
			}
		}
		System.out.println("\n");
	}
	public static void getOddNumbers(int arr[]) {
		System.out.println("odd numbers:");
		for(int i=0;i<arr.length;i++) {
			if(arr[i]%2==0&& arr[i]%2!=0) {
			System.out.print(arr[i]+" ");
			}
		}
	}
	public static void getOddNumbersDivi2and3(int arr[]) {
		System.out.println("divisible by 2 and 3:");
		for(int i=0;i<arr.length;i++) {
			if(arr[i]%2==0&& arr[i]%3==0) {
			System.out.print(arr[i]+" ");
			}
		}
		System.out.println("\n");
	}
	public static void getdivisibleby5(int arr[]) {
		System.out.println("divisible by 5");
		for(int i=0;i<arr.length;i++) {
			if(arr[i]%2==0&& arr[i]%5==0) {
			System.out.print(arr[i]+" ");
			}
		}
		System.out.println("\n");
	}
	
 public static void main(String[] args) {
	int arr[]= {10,34,56,77,88,45,34,23,40,20};
	displayElements(arr);
	getEvenNumbers(arr);
	getOddNumbers(arr);
	getOddNumbersDivi2and3(arr);
	getdivisibleby5(arr);
}
}
----------------------------------
enter subject 6 subject marks and print sum

package logicalsession;

import java.util.Scanner;

/*WAP to store marks of student in 6 different subjects and display*/
public class P4 {

	public static void main(String[] args) {
		//int subject[]=new int[6];
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the length of array:");
		int len=sc.nextInt();
		int subject[]=new int[len];
		System.out.println("enter marks of subjexts:");
	    for(int i=0;i<subject.length;i++) {
	    	System.out.print("enter value for "+i+":");
	    	subject[i]=sc.nextInt();
	    }
	
	    findTotal(subject);
	    
	}
	    public static void findTotal(int s[]) {
	    	int sum=0;
	    	for(int i=0;i<s.length;i++) {
		    	sum+=s[i];
		    }
		 System.out.println("total marks is:"+sum);
	    }
	}

-------------------------------------
package logicalsession;

import java.util.Scanner;

/*WAP to store 10 numbers,enter a number to be searched in the array. 
  if the number is available in the array then display "element is present"otherwise
   display "element is not found*/
//Linear Search Algorithm
public class P5 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the size of the array:");
		int size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter element for"+i+":");
			arr[i]=sc.nextInt();
		}
         System.out.print("enter the element to search:");
         int key=sc.nextInt();
         boolean flag=false;
         for(int i=0;i<arr.length;i++) {
 			if(key==arr[i])
 			flag=true;
 			break;
 		}
         if(flag==true) {
        	 System.out.println("element is present");
         }
         else {
        	 System.out.println("element is not found");
         }
	}

}
-----------------------------------
package logicalsession;

import java.util.Scanner;

/* WAP to store 10 numbers,enter a number to be searched in the array. 
  if the number is available in the array then display "element is present"otherwise
   display "element is not found".
 * if element is present then display the position of element
 *if element present in multiple locations then also the position  must be display
     */
public class P6 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the size of the array:");
		int size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter element for"+i+":");
			arr[i]=sc.nextInt();
		}
         System.out.print("enter the element to search:");
         int key=sc.nextInt();
         boolean flag=false;
         int index=0;
         for(int i=0;i<arr.length;i++) {
 			if(key==arr[i]) {
 			flag=true;
 			index=i;
 			break;
 			}
 		}
         if(flag==true) {
        	 System.out.println("element is present");
        	 System.out.println("index is:"+(index+1));
         }
         else {
        	 System.out.println("element is not found");

	}

}
}
--------------------------------------
package logicalsession;

import java.util.Scanner;

public class P7
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the size of the array:");
		int size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter element for"+i+":");
			arr[i]=sc.nextInt();
		}
         System.out.print("enter the element to search:");
         int key=sc.nextInt();
         boolean flag=false;
        String  index="";
         for(int i=0;i<arr.length;i++) {
        	 if(key==arr[i]) { 
        		 flag=true;
        		 index=index+i+" ";
        	 }
         }
         if(flag) {
        	 System.out.println("element is found at the location of:"+index);
         }
         else {
        	 System.out.println("not found");
         }
	}
}
-------------------------------------
WAP print the array elements and print the reverse of elements

int arr[]={10,20,30,40};
 int rev=new int[arr.length];
 for(int i=0,j=arr.length-1;i++){
 rev[i]=arr[j];
 j--;
 for(int i=0;i<rev.length;i++)
{
syso(rev[i]); 
 }
 */
----------------------------------------
WAP to display array elemnts in ascending order

package logicalsession;

import java.util.Scanner;

public class AscendingOrder
{
	/*
	#include<stdio.h>
int main() {
    int a[100],n,i,j,t;
    printf("enter the size of the array:");scanf("%d",&n);
    printf("enter the %d elements",n);
    for(i=0;i<n;i++){
        scanf("%3d",&a[i]);
        printf("\n%d",a[i]);
    }
    for(i=0;i<=n-2;i++){
    for(j=i+1;j<=n-1;j++){
     if(a[i]>a[j]){
         t=a[i];
        a[i]=a[j];
        a[j]=t;
     }
    }
    }
    printf("sorted elements:");
    for(i=0;i<n;i++)printf("%3d",a[i]);
    return 0;
}
	 */
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter  size of the array:");
		int  size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter value for "+i+":");
			arr[i]=sc.nextInt();	
		}
		int t;
		 for(int i=0;i<=arr.length-2;i++){
			    for(int j=i+1;j<=arr.length-1;j++){
			     if(arr[i]>arr[j]){
			         t=arr[i];
			        arr[i]=arr[j];
			        arr[j]=t;
	              }
                 }
		      }
		 System.out.println("after sorting descending order");
		 for(int i=0;i<arr.length;i++) {
			 System.out.print(arr[i]+" ");
		 }
	}
}

----------------------------------
WAP to display array elemnts in Descending order

package logicalsession;

import java.util.Scanner;

public class DescendingOrder {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter  size of the array:");
		int  size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter value for "+i+":");
			arr[i]=sc.nextInt();	
		}
		int t;
		 for(int i=0;i<=arr.length-2;i++){
			    for(int j=i+1;j<=arr.length-1;j++){
			     if(arr[i]<arr[j]){
			         t=arr[i];
			        arr[i]=arr[j];
			        arr[j]=t;
	              }
                 }
		      }
		 System.out.println("after sorting");
		 for(int i=0;i<arr.length;i++) {
			 System.out.print(arr[i]+" ");
		 }
	}
}
-------------------------------------------------------------------------

package logicalsession;

import java.util.Scanner;

public class AscendingOrder
{
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter  size of the array:");
		int  size=sc.nextInt();
		int arr[]=new int[size];
		for(int i=0;i<arr.length;i++) {
			System.out.print("enter value for "+i+":");
			arr[i]=sc.nextInt();	
		}
		int t;
		 for(int i=0;i<=arr.length-2;i++){
			    for(int j=i+1;j<=arr.length-1;j++){
			     if(arr[i]>arr[j]){
			         t=arr[i];
			        arr[i]=arr[j];
			        arr[j]=t;
	              }
                 }
		      }
		 System.out.println("after sorting descending order");
		 for(int i=0;i<arr.length;i++) {
			 System.out.print(arr[i]+" ");
		 }
	}
}

---------------------------------------------------------------------
Number to word
------------------------------------
-------------------------------------
WAP to display number and display rev
package logicalsession;

import java.util.Scanner;

/*WAP to input and display its reverse*/
public class ReverseNumber {
public static void main(String[] args) 
{
	Scanner sc=new Scanner(System.in);
	System.out.print("enter a number:");
	int num=sc.nextInt();
	int temp=num;
	
	System.out.print("reverse of number is:");
	while(num!=0) {
		int rev=num%10;
		System.out.print(rev);
		num/=10;
	}
	
}
}
--------------------------------------------------------------
package logicalsession;
import java.util.Scanner;

/*WAP to  print the given number is palindrome or not*/
public class PalindromeNum {
public static void main(String[] args) 
{
	Scanner sc=new Scanner(System.in);
	System.out.print("enter a number:");
	int num=sc.nextInt();
	int temp=num;
	int rev=0;
	do {
		 rev=(rev*10)+num%10;
		num/=10;
	}while(num!=0);
	System.out.println("original:"+temp);
	System.out.println("reverse:"+rev);
	//int diff=temp-rev;
	//if(diff==0)
	if(temp==rev) {
		
		System.out.println("the  given number is "+temp+" palindrome");
	}
	else {
		System.out.println("the  given number is "+temp+"  not a palindrome");
	}
	
}
}

---------------------------------------------------------------------
package logicalsession;

import java.util.Scanner;

/*WAP to store elements into array and generate an array in which eacxh and every element is stored in its reverse order*/


	
	public class ReverseElements {
	public static void main(String[] args) 
	{

		int arr[]= {123,167,34};
		System.out.print("original array elements are:");
		for(int i=0;i<arr.length;i++) {
			System.out.print(arr[i]+" ");
		}
		System.out.println();
		System.out.print("reverse array elements are:");
		for(int i=0;i<arr.length;i++) {
			int rev=0;
		do {
			 rev=(rev*10)+arr[i]%10;
			arr[i]/=10;
		}while(arr[i]!=0);
		System.out.print(rev+" ");
		}	
	}
	}
---------------------------------------------------------------------
PATTERNS
-------
1.*
  *
  *
  * * * *
package p;

public class LPatteren {

	public static void main(String[] args) {
		int num=5;
		for(int i=1;i<=5;i++) {
			for(int j=1;j<5;j++) {
				if(j==1||i==5) {
					System.out.print("*"+"  ");
				}

			}
			System.out.println("\n");
		}

	}

}
------------------------
2.
   *
     *
        *
            *
   package logicalsession;

public class Pattern2 {

	public static void main(String[] args) {
		int num=5;
		for(int i=1;i<=5;i++) {
			for(int j=1;j<=5;j++) {
				if(i==j) {
					System.out.print("*"+"  ");
				}
				else {
					System.out.print("  ");
				}

			}
			System.out.println("\n");
		}

	}

}
------------------------------------------------------------------
3.
    a a a a
    a a a a
    a a a a

package logicalsession;

public class Patteren3 {

	public static void main(String[] args) {
		int num=5;
		for(int i=1;i<=5;i++) {
			for(int j=1;j<5;j++) {
				
					System.out.print("a"+" ");
				

			}
			System.out.println("\n");
		}

	}

}
-----------------------------------
4.a a a a
  b  b b b
  c  c c c 
  d   d d d

--------------------------------------------
package logicalsession;

public class Pattreen4 {

	public static void main(String[] args) {
		int num=5;
		
		for(int i=1,p='a';i<5;i++,p++) {
			
			for(int j=1;j<5;j++) {
				
				System.out.print((char)p+" ");
				
				
				}
			System.out.println("\n");
			}
			
		}

	}

-------------------------------------------------------
4. a b c d
    a b c d
    a  b c d
    a   b c d
package logicalsession;

public class Pattreen4 {

	public static void main(String[] args) {
		int num=5;
		
		for(int i=1,p='a';i<5;i++) {
			int k=p;
			for(int j=1;j<5;j++) {
				
				System.out.print((char)k+" ");
				k++;
				
				}
			System.out.println("\n");
			}
			
		}

	}
-----------------------------------------------------------------------------------
5.a
  b  b
  c   c  c
  d   d   d  d
package logicalsession;

public class Pattreen4 {

	public static void main(String[] args) {
		int num=5;
		
		for(int i=1,p='a';i<5;i++,p++) {
			 int k=p;
			for(int j=1;j<=i;j++) {
				
				System.out.print((char)k+" ");
				
				
				}
			k++;
			System.out.println("\n");
			}
			
		}

	}
---------------------------------------------------------------
6.
a
ab
abc
abcd
abcde
public class AlphaPattren {

	public static void main(String[] args) {
		for(int i=97;i<=101;i++) {
			for(int j=97;j<=i;j++) {
				System.out.print((char)j);
				
			}
			System.out.println();
		}

	}

}
--------------------------------------------------------------------
ababa
ababa
ababa
ababa
package logicalsession;

public class BasicAlpha {

	public static void main(String[] args) {
		for(int i=97;i<=101;i++) {
			for(int j=97;j<=101;j++) {
				if(j%2==0)
				System.out.print("b");
				else
					System.out.print("a");
			}
			
			System.out.println();
		}

	}

}
-------------------------------------------------

String
=============
*What do you mean by String ?

-> String can be consider as  a Predefined class As well as group of charaecter enclosed with in Double Quotes (" ") .

->String is  a preedefined public final class .

->It is available in default package of java named as java.lang.

->As String is Available java.lang package, there is no need imporing string manually by the programer .

->String extends Object which means the functionalities of object class are shared with String .

->We cannot create subclass of String because String is Defined as final Class .

->WE are not allowed to Override methods available in String class because to Override the methods inheritance is compulsory .

->In java Wrapper class Objects can be Represented as String object .

->In java String can be created by using 3 ways :-
	1) By using String Literal 
 	String x = "Ravi";

	2) By using new keyword 
 	String y = new String("Hyderabad");

	3) By using character array
 	char z[] = {'H','E','L','L','O'};

->String class implements Serialisable , Comparable , CharSequence.

->The String literal consider as object of String class .

->String class has multiple number of predefined methods and Constructors .

->Predefined methods of String to be used in General
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 1) length method     
       => this method returns number of char in provided String .
       => return type is int
       
 2) isEmpty method
	=> this method return true if the provided String is Empty otherwise it returns False.
	=> return type is boolean
        => String str ="" ;
	   S.o.p(str.isEmpty()); =====> true
	
 3) charAt(int index) method 
	=> this method takes an input of integer and returns the charecter present at the provided index of thr given String literal
	=> return type is char 
	=> String str = "java Ecosystem";
	   s.o.p(str.charAt(7)); ========> o

 4) equals(object anotherObj) 
	=> this method return true if the content of Object are Identical otherwise it return false . 
	=> return type is boolean 
	=> String s1 = "java" ;  String s2 = "Java" ;
	   s.o.p(s1.equals(s2)); =========> false

 5) equalsIgnoreCase(String str)
	=> this method will return true even by ignoring the Cases of object
	=> return type is boolean
	=> String s1 = "java" ;  String s2 = "Java" ;
	   s.o.p(s1.equals(s2)); =========> true
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

*WAP TO FIND NUMBER OF CHARECTER IN STRING. IF THE COUNT IS MORE THAN FIVE THEN DISPLAY THE COMPLETE STRING IN UPPER CASE ELS EDISPLAY IN LOWER CASE.

package com.akshu.javaLogical;

import java.util.Scanner;

class C1
{
	public static int countCharectes(String str)
	{
		return str.length();
	}
}

public class String1
{
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter a String : ");
		String str = sc.nextLine();
		int n = C1.countCharectes(str);
		
		if(n > 5)
		{
			System.out.println("Number of charaecter in String Are : "+str.length());
			System.out.println(str.toUpperCase());
		}
		else
		{
			System.out.println(str.toLowerCase());
		}
	}
}

======================================================================================================================================================================

*HOW DO YOU GENERATRE EMPTY STRING IN JAVA 
 
	=> String str = "" ;
	=> String str = new String() ;
	=> String str = new String("");
	

======================================================================================================================================================================

* WAP  TO STORE A sTRING AND DISPLAY THE STRING IN PATTERNS
Enter a String : java
j 
j a 
j a v 
j a v a 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String2 
{
	public static void main(String[] args) 
	{
       Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter a String : ");
		String str = sc.nextLine();	
		
		for(int i = 0 ; i < str.length() ; i++)
		{
			for(int j = 0 ; j <= i ; j++)
			{
				System.out.print(str.charAt(j)+" ");
			}
			System.out.println();
		}
	}
}
======================================================================================================================================================================

 6) compairToString(String str)
	=> this method return the difference between the Ascii value beteen the two 
	   charecter 
	=> this method return the int valye i.e ascii value difference

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=================================================================================================================================

*WAP TO STORE AND DIAPLAY THE STRING INTO ALPHABETICAL ORDER

package com.akshu.javaLogical;

import java.util.Scanner;

public class String3 {

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter number of String : ");
		int size = sc.nextInt();
		
		String[] str = new String[size];
		
		for(int i = 0 ; i < size ; i++)
		{
			str[i] = sc.next();
			
		}
		
		for(int i = 0 ; i < str.length ;i++)
		{
			String temp ;
			for(int j = i+1; j < str.length;j++)
			{
				if(str[i].compareToIgnoreCase(str[j]) < 0 )
				{
					temp = str[i];
					str[i] = str[j];
					str[j] = temp;
				}
				
			}
		}
		
		for(String s : str)
		{
			System.out.println(s);
		}
		

	}

}
==================================================================================================================================================================================



 8) compairToIgnoreCaseString(String str)

-----------------------------------------------------------------------------------

 9) strartsWIth(String prefix)
	=> this method check the given string start with the given String 2.
---------------------------------------------------------------------------------------------------------------------------------------------------------
===================================================================================================================================================


*WAP TO check wether the given String STARTS WITH WITH entered String by IGNORING CASE 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String4
{
	public static boolean checkStartWithIgnorecase(String str1, String str2)
	{
		if((str1.toLowerCase()).startsWith(str2.toLowerCase()))
		{
			return true ;
		}
		else 
		{
			return false;
		}
	}
	
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter a String : ");
		String str = sc.nextLine();
		
		System.out.print("Enter a Check String : ");
		String target = sc.nextLine();
		
		System.out.println("Is String Start with : "+checkStartWithIgnorecase(str, target));
	}

}
=============================================================================================

10) endsWith(String suffix)
-----------------------------------------------------
11) hashCode() 


12) indexOf(int ch)


13) indexOf(int ch , index ch1)


14) lastIndexOf(int ch)

15) subString(int beginIndex)
----------------------------------------------------------------------------------------------------------------------------------------------------------
16) suString(int beginIndex , int endIndex)

* WAP  TO STORE A sTRING AND DISPLAY THE STRING IN PATTERNS by using SubString method
String : java
j 
j a 
j a v 
j a v a 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String5 
{

	public static void main(String[] args)
	{
        Scanner sc = new Scanner(System.in);
		
		System.out.print("Enter a String : ");
		String str = sc.nextLine();
		
		for(int i = 0 ; i < str.length(); i++)
		{
			System.out.println(str.substring(0, i+1));
		}
		
	}

}
====================================================================================================================================================================================


17) concat(String str)

18) replace(char oldChar , char newChar)

19) contains( CharSequence s)

20) split( String regEx )

21) toLowercase()

22) toUpperCase()

23) trim()

24) toString()

25) toChaeArray()

===========================================================================================

===========================================================================================

*WAP TO FIND LENGTH OF sTRING

* WAP TO FIND CHARAECTER FROM GIVEN INDEX OF sTRING

*WAP TO FIND FRIST OCCURANCE OF A CHAR 

*WAP TO SEARCH FOR THE AVAIALABILITY OF CHAR IN STRING STARIG FROM GIVEN INDEX

*WAP TO FIND INDEX OF LAST OCCURANCE OF THE CHARRECTER IN STRING

*WAP TO TO EXTRACT A SET OF CHAR SIMLULTANIOUSLY FROM A STRING UPTO THE END OF STRING INCLUDING THE CHARECETER

*WAP to extract a set of chr sequence simultaniously from a given string upto end of string from given index

package com.akshu.javaLogical;

import java.util.Scanner;

public class String6 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void findLengthOfString() 
	{
		System.out.print("\nEnter a String to finf length of String: ");
		String str = sc.nextLine();
		
		int length = str.length();
		System.out.println("Length of String is : "+length);
		
	}
	
	public static void charAtIndex()
	{
		System.out.print("\nEnter a String to find charecter at given Index: ");
		String str = sc.nextLine();
		
		System.out.println("Enter the index to fetch the char :");
		int index = sc.nextInt();
		
		char ch = str.charAt(index);
		
		System.out.println("charecter present at "+index+" is "+ch);
	}
	
	public static void findFristOccurance()
	{
		System.out.print("\nEnter a String to find Frist occurance of charecter in String: ");
		String str = sc.nextLine();
				str = sc.nextLine();
		        
		System.out.println("Enter the char to get the position :");
		char ch =  sc.next().charAt(0);
		
		int position = str.indexOf(ch)+1;
		
		if(position > 0) 
		{
			System.out.println(ch+" is frist time available at : "+ position+" Position");
		}
		else
		{
			System.out.println("Charaecter is not present in the String.");
		}
	}
	
	public static void searchAvailabiltyFromIndex()
	{
		System.out.print("\nEnter a String to search Availabilty of charecter grom givemn index : ");
		String str = sc.nextLine();
			str = sc.nextLine();
		
		System.out.println("Enter the char to get the position :");
		char ch =  sc.next().charAt(0);
			
	    System.out.println("Enter the index from which you want to search :");
		int index = sc.nextInt();
		
		int available = str.indexOf(ch, index);
	
		if(available < 0)
		{
			System.out.println("Charecter is not present from given index");
		}
		else
		{
			System.out.println(ch+" is present at "+(available+1)+" Position");
		}			
	}
	
	public static void subStringFromIndex()
	{
		System.out.print("\nEnter a String to finf length of String: ");
		String str = sc.nextLine();
		str = sc.nextLine();
		
		
		System.out.println("Enter the index from which you want to get sub string :");
		int index = sc.nextInt();
		
		String sub = str.substring(index);
		
		System.out.println(sub);
	}
	
	public static void findLastOccurance()
	{
		System.out.print("\nEnter a String to convert into char Array : ");
		String str = sc.nextLine();
			str = sc.nextLine();
			
		System.out.println("Enter the char to get the position :");
		char ch =  sc.next().charAt(0);	
		
		int position = str.lastIndexOf(ch);
		
		if(position < 0)
		{
			System.out.println("Charecter is not present from given index");
		}
		else
		{
			System.out.println(ch+" is last time occure at "+(position+1)+" Position");
		}
		
			
			
	}
	
	public static void convertToCharArray()
	{
		System.out.print("\nEnter a String to convert into char Array : ");
		String str = sc.nextLine();
			str = sc.nextLine();
			
		char ch[]=str.toCharArray();
		
		System.out.println("Charrecter sequence is :");
		for(char c : ch)
		{
			System.out.print(c+" , ");
		}
		
	}

	public static void main(String[] args) 
	{	
		findLengthOfString();

		charAtIndex();
		
		findFristOccurance();
		
		searchAvailabiltyFromIndex();
		
		findLastOccurance();
		
		convertToCharArray();
		
		subStringFromIndex();
		
	}

}
======================================================================================================

==============================================================================================================================================

*WAP TO GET THE SET OF CHARECTER SIMULTANIOUSLY FROM STARING INDEX upto the last index except excluding the last index

* WAP TO CONVERT STRING INTO LOWERCASE

* WAP TO CONVERT STRING INTO UPPERCASE


package com.akshu.javaLogical;

import java.util.Scanner;

public class String7 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void subStringExcludingLastIndex()
	{
		System.out.print("\nEnter a String to find sub String: ");
		String str = sc.nextLine();
		
		System.out.println("Enter the index from which you want to get sub string :");
		int index = sc.nextInt();
		
		String subStr = str.substring(index, str.length()-1);
		
		System.out.println(subStr);		
	}
	
	public static void converTOUpper()
	{
			System.out.print("\nEnter a String to convert into upper case : ");
			String str = sc.nextLine();
			str = sc.nextLine();
			String subStr = str.toUpperCase();
			System.out.println(subStr);	
			
	}
	
	public static void converTOLower()
	{
			System.out.print("\nEnter a String to to convert into Lower case : ");
			String str = sc.nextLine();
			str = sc.nextLine();
			String subStr = str.toLowerCase();
			System.out.println(subStr);	
	}

	public static void main(String[] args) 
	{
		subStringExcludingLastIndex();
		
		converTOLower();
		
		converTOUpper();
	}

}
============================================================================================================================================
* WAP TO CONVERT STRING INTO LOWERCASE without using predifines Method 

* WAP TO CONVERT STRING INTO UPPERCASE without using predifines Method 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String8 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void converTOUpper()
	{
			System.out.print("\nEnter a String to convert into upper case : ");
			String str = sc.nextLine();
			
			char chArray[] = new char[str.length()];
			
			for(int i = 0 ; i < str.length(); i++)
			{
				if(str.charAt(i)  >= 'a' && str.charAt(i) <= 'z')
				{
					chArray[i] = (char)(str.charAt(i) - 32) ;
				}
				else
				{
					chArray[i] = str.charAt(i);
				}
			}
			
			System.out.println(chArray);
	}
	
	public static void converTOLower()
	{
			System.out.print("\nEnter a String to convert into Lower case : ");
			String str = sc.nextLine();
			
			char chArray[] = new char[str.length()];
			
			for(int i = 0 ; i < str.length(); i++)
			{
				if(str.charAt(i)  >= 'A' && str.charAt(i) <= 'Z')
				{
					chArray[i] = (char)(str.charAt(i) + 32) ;
				}
				else
				{
					chArray[i] = str.charAt(i);
				}
			}
			
			System.out.println(chArray);		
	}		

	public static void main(String[] args) 
	{
		converTOUpper();
		
		converTOLower();
	}

}
================================================================================================================================

* WAP TO REPLACE A SEQUENCE OF CHARECTER WITH OTHER SEQUENCE OF CHARECTER AT ALL ITS OCCURANCE IN ATHE STRING

*WAP  TO JION TWO STRING TO GATHER

*WAP TO COMPAIR TWO STRING TOGATHER TO CHECK WETHER THER ARE IDENTICAL OR NOT 

*WAP TO COMPAIR TWO STRING TOGATHER TO CHECK WETHER THER ARE IDENTICAL OR NOT AFTER IGNORING THE CASE 

* WAP TO REMOVE LEADING AND TRAILING BLANKS SPACE FROM STRING

*WAP TO CHECK WETHER GIVEN STRING HAS SPECIFIC SUFFIX 


package com.akshu.javaLogical;

import java.util.Scanner;

public class String9 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void replaceSubString()
	{
			System.out.print("\nEnter Frist String : ");
			String str1 = sc.nextLine();
			System.out.print("\nEnter String to replace :");
			String str2 = sc.nextLine();
			System.out.print("\nEnter String to replace by :");
			String str3 = sc.nextLine();
			
			String supStr = str1.replaceAll(str2, str3);
			
			System.out.println(supStr);
	}
	
	public static void combineTwoString()
	{
			System.out.print("\nEnter Frist String to concat : ");
			String str1 = sc.nextLine();
			System.out.print("\nEnter Second String to Combine ");
			String str2 = sc.nextLine();
			
			String supStr = str1.concat(str2);
			
			System.out.println(supStr);
	}
	
	public static void compairString()
	{
			System.out.print("\nEnter Frist String to Compair ");
			String str1 = sc.nextLine();
			System.out.print("\nEnter Second String to Compair ");
			String str2 = sc.nextLine();
			
			boolean isSame = str1.equals(str2);
			if(isSame) 
			{
				System.out.println("Both the String are Identical");
			}
			else
			{
				System.out.println("Is Both the String are Not Identical");
			}
	}
	
	public static void compairStringIgnoreCase()
	{
			System.out.print("\nEnter Frist String to Compair ");
			String str1 = sc.nextLine();
			System.out.print("\nEnter Second String to Compair ");
			String str2 = sc.nextLine();
			
			boolean isSame = str1.equalsIgnoreCase(str2);
			if(isSame) 
			{
				System.out.println("Both the String are Identical");
			}
			else
			{
				System.out.println("Is Both the String are Not Identical");
			}
	}
	
	public static void removeSpaceFromString()
	{
			System.out.print("\nEnter Frist String to Compair ");
			String str1 = sc.nextLine();
			
			String supStr = str1.trim();
			
			System.out.println(supStr);
	}
	
	public static void checkSuffixInString()
	{
			System.out.print("\nEnter Frist String to Compair ");
			String str1 = sc.nextLine();
			System.out.print("\nEnter Suffix to check: ");
			String str2 = sc.nextLine();
			
			boolean checker = str1.endsWith(str2);
			if(checker)
			{
				System.out.println("Given String Start with "+str2);
			}
			else
			{
				System.out.println("Given String do not Start with "+str2);	
			}
	}

	public static void main(String[] args) 
	{
		replaceSubString();
		
		combineTwoString();
		
		compairString();
		
		compairStringIgnoreCase();
		
		removeSpaceFromString();
		
		checkSuffixInString();
		
	}
}
====================================================================================================================================================

*WAP TO STORE A STRING CONVERT THE LETTERS PRESENT AT EVEN INDESES INTO THERE OPPOSITE CASE 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String10 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void converToOppositeCase()
	{
			System.out.print("\nEnter a String to convert into upper case : ");
			String str = sc.nextLine();
			
			String chAray ="";
			
			for(int i = 0 ; i < str.length(); i++)
			{
				if(i%2 == 0)
				{
					if(str.charAt(i)  >= 'a' && str.charAt(i) <= 'z')
					{
						char ch = (char)(str.charAt(i) - 32) ;
						chAray += ch;
					}
					else if(str.charAt(i)  >= 'A' && str.charAt(i) <= 'Z')
					{
						char ch = (char)(str.charAt(i) + 32) ;
						chAray += ch;
					}
					else
					{
						chAray += str.charAt(i);
					}
				}
				else
				{
					chAray += str.charAt(i);
				}
			}
			
			System.out.println(chAray);
	}

	public static void main(String[] args) 
	{
		converToOppositeCase();

	}

}
===========================================================================================

*WAP FOR THE BELOW REQUIREMENT
ENTER TWO NUMBER IN THE FORM OF STRING . CALCULATE AND DISPLAY THE SUM OF NUMBERS 

package com.akshu.javaLogical;

import java.util.Scanner;

public class String11 
{
	public static int sumOfTwoNumberInString(String s1, String s2)
	{
		int n1 = Integer.parseInt(s1);
		
		int n2 = Integer.parseInt(s2);
		
		int sum = n1 + n2;
		
		return sum;
	}

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter Frist number:");
		String n1 = sc.next();
		
		System.out.println("Enter Second number:");
		String n2 = sc.next();
		
		int sum = sumOfTwoNumberInString(n1, n2);

		System.out.println("Sum of Number is : "+sum);
	}
}
==========================================================================================================================

Implicite conversion is Narowring 
( videning and Unviding)
----------------------------------- 
 
31 to 35

==========================================================================================================================

31. 32.

*WAP TO STORES NAME OF 10 STUDENTS AND TREIR CONTACT NUMBER IN TWO DIFFERENT STRING ARRAY .
ENTER NAME AND SEARCH WHERE IT IS PRESENT IN THE LIST OR NOT . IF ITS IS PRESENT THERE THEN DISPLAY ITS NUMBER AND NAME  ELSE SHOW NOT FOUND.

* WAP TO STORE 10 DIFFERENT NAMES AND DISPLAY  THEM IN ASENDING ORDER

package com.akshu.javaLogical;

import java.util.Scanner;

public class String12 
{
	 String []names = new String[10] ;
	String []numbers = new String[10] ;
	
	static Scanner sc = new Scanner(System.in);
	
	
	public static void searchStudent(String []names, String numbers[], String name)
	{
		int count=0;
		boolean flag = false;
		for(int i =0 ; i< names.length ;i++)
		{
			if(names[i].equalsIgnoreCase(name))
			{
				flag = true;
				String presence = names[i]+" : "+numbers[i] ;
				System.out.println("Searching Student .....\n"+presence);
			}
		}
		
		if(flag == false)
		{
			System.out.println("Searching Student .....\nStudent not Found ");	
		}
	}

	
	public static void displayNames(String names[])
	{
		
		for(int i = 0 ; i < names.length ;i++)
		{
			String temp ;
			
			for(int j = i+1; j < names.length;j++)
			{
				if(names[i].compareToIgnoreCase(names[j]) < 0 )
				{
					temp = names[i];
					names[i] = names[j];
					names[j] = temp;
				}
			}
		}
		
		System.out.println("Student Enrolled  Are: ");
		
		for(String name : names)
		{
			System.out.println(name);
		}
	}

	
	public static void main(String[] args) 
	{
		
		System.out.println("How many students you want to store: ");
		int n = sc.nextInt();
		
		String []names = new String[n] ;
		String []numbers = new String[n] ;
		
		for(int i = 0 ; i < n ; i++)
		{
			System.out.println("Enter Name of "+(i+1)+" Student");
			names[i] = sc.nextLine();
			names[i] = sc.nextLine();
			
			System.out.println("Enter Number of "+(i+1)+" Student");
			numbers[i]= sc.next();
		}

	 System.out.println("Enter a Name to Search: ");
	 String target = sc.nextLine();
	 target = sc.nextLine();
	 
	 searchStudent(names,numbers,target);

	 displayNames(names);
				
	}
}

================================================================================================================
33.  34. 35.

*WAP TO ENTER THE SATES AND ITS CAPITALS OF INDIA CORRESPONDINGLY .
 ENTER THE NAME OF sTATE aND IF ITS A STATE THEN DISPLAY ITS CAPITAL .

*WAP TO INPUT A STRING AND DIPLAY A NEW STRING BY REMOVING ALL THE VOWELS IN THE STRING.

*WAP TO INPUT A NAME AND DISPLAY ONLY ITS INITIALTS

*WAP STORE A STRING NAMW AND DISPLAY IN NAMEPLATE FORMAT.


package com.akshu.javaLogical;

import java.util.Scanner;

public class String13
{
	static Scanner sc = new Scanner(System.in);
	
	public static void namePlate()
	{
		System.out.println("Enter a String: ");
		String str = sc.nextLine();
		str = sc.nextLine();
		
		String subStr = str.toUpperCase();
		
		String word[] = subStr.split(" ");
		
		int i = 0 ;
		for(i = 0 ; i < word.length-1 ; i++ )
		{
			char ch = word[i].charAt(0);
			System.out.print(ch + ". ");
		}
		
		System.out.println(word[i]);	
	}	


	public static void displayInitials()
	{
		System.out.println("Enter a String: ");
		String str = sc.nextLine();
		str = sc.nextLine();
		
		char ch[] = str.toCharArray();
		int i=0;
		for(i = 0; i < ch.length ; i++)
		{
			boolean p = ch[i] != ' ';
			int call = i;
			while(p && i < ch.length - 1)
			{
				if(call == i)
				{
					System.out.print(ch[i]+ ". ");
				}
				i++;
				if(ch[i] == ' ')
				{
					i--;
					break;
				}
			}
		}	
			
	}
	
	public static void removeVowel()
	{
		System.out.println("Enter a String: ");
		String str = sc.nextLine();
		str = sc.nextLine();
		
		String subStr ="";
		
		for(int i = 0 ; i < str.length(); i++ )
		{
			char ch = str.toLowerCase().charAt(i);
			
			if(ch == 'a'|| ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' )
			{
				
			}
			else
			{
				subStr += ch;
			}
		}
		System.out.println("String after removing Vowels is : \n"+subStr);
		
	}
	
	public static void searchState(String []names, String numbers[], String name)
	{
		int count=0;
		boolean flag = false;
		for(int i =0 ; i< names.length ;i++)
		{
			if(names[i].equalsIgnoreCase(name))
			{
				flag = true;
				String presence = names[i]+" : "+numbers[i] ;
				System.out.println("Searching State .....\n"+presence);
			}
		}
		
		if(flag == false)
		{
			System.out.println("Searching State .....\nState not Found ");	
		}
	}
	public static void main(String[] args)
	{
		
		
		System.out.println("How many State you want to store: ");
		int n = sc.nextInt();
		
		String []states = new String[n] ;
		String []capitals = new String[n] ;
		
		for(int i = 0 ; i < n ; i++)
		{
			System.out.println("Enter Name of "+(i+1)+" State");
			states[i] = sc.next();
		
			System.out.println("Enter Number of "+(i+1)+" State");
			capitals[i]= sc.next();
		}
		
		System.out.println("Enter a Name to Search: ");
		String target = sc.next();
		 
		searchState(states, capitals, target);
		
		removeVowel();
		
		displayInitials();

		namePlate() ;
			
	}

}

===============================================================================================================

==============================================================================================================
36.
*WAP TO A STRING AND DISPLAY LARGEST WORD IN THE sTRING

37.
*WAP TO ACCEPT A STRING AND DISPLAY ONLY PALLINDROM WORDS IN THE STRING.


package com.akshu.javaLogical;

import java.util.Scanner;

public class String14 
{
	static Scanner sc = new Scanner(System.in);
	
	public static void maxLenthWord(String str)
	{
		String []sub = str.split(" ");
		int count = 0;
		int max = count;
		int []ch = new int[sub.length];
		
		int i =0;
		for(String word : sub)
		{
			count = word.toCharArray().length;
			ch[i] = count;
			i++;
			if(count >= max)
			{
				max = count;
			}
		}
		System.out.println("Largest Word : ");
		for(i =0 ; i < ch.length ; i++)
		{
			if(ch[i] == max)
			{
				System.out.println(sub[i]);
			}
		}
	}
	
	
	public static void pallindromWord(String str)
	{
		String[] subStr = str.split(" ");
		
		System.out.println("Pallaindrom Strings Are : ");
		for(String ele : subStr)
		{
			if(ele != " ")
			{
				int n = ele.length();
				
				int start =0, end = ele.length()-1;
				boolean flag = false;
				
				for(start =0 ; start <= n/2 ;start++ , end --)
				{
					if(ele.charAt(end) == ele.charAt(start))
					{
						flag = true;
					}
					else
					{
						flag = false;
					}
					if(flag == false)
					{
						break;
					}
				}
			
				if(flag == true)
				{
					System.out.println(ele);
				}
			}	
		}
	}
	
	public static void main(String[] args) 
	{
		System.out.println("Enter a String to find lardest Word : ");
		String str = sc.nextLine();
		
		maxLenthWord(str);
		
		System.out.println("Enter a String to find pallindrom Word : ");
		 str = sc.nextLine();
		
		pallindromWord(str);
	}
}





=========================================================================================== 

38.
*WAP TO TO ENTER A SENTANCE AND DISPLAY ONLY THE WHICH CONTAINS MAXIMUM NUMBER OF VOWELS IN IT.

package com.akshu.javaLogical;

import java.util.Scanner;

public class String15 
{
	public static void findMaxVowelWords(String str)
	{
		String []sub = str.split(" ");
		int count = 0;
		int max = count;
		int []ch = new int[sub.length];
		
		int i =0;
		for(String word : sub)
		{
			count = 0 ;
			
			String ele = word.toLowerCase();
			
			for(int j = 0 ; j < ele.length(); j++ )
			{
				char ch1 = ele.charAt(j);
				if(ch1 == 'a' || ch1 == 'e' || ch1 == 'i' || ch1 == 'o' || ch1 == 'u')
				{
					count++;
				}
			}
			ch[i] = count;
			i++;
			
			if(count >= max)
			{
				max = count;
			}
		}
		
		System.out.println("Word Contains maximum vowels : ");
		for(i = 0 ; i < ch.length ; i++)
		{
			if(ch[i] == max)
			{
				System.out.println(sub[i]);
			}
		}
	}
	
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter a String to find lardest Word : ");
		String str = sc.nextLine();
		
		findMaxVowelWords(str);	
	}
}


===================================================================================================================================================

39. 
*WAP TO ENTER A SENTANCE AND DISPLAY THE FREQUENCY OF EACH LATTER OF THE  
 SENTENCE.

package com.akshu.javaLogical;

import java.util.Scanner;

public class String18 
{
	public static void displayFrequencyOfChar(String str)
	{
		char[] ch = str.toCharArray();
		int[] frequency = new int[ch.length];
		
		for(int i =0 ; i < ch.length ; i++)
		{
			int count = 1;
			for(int j = 0; j < ch.length ; j++)
			{
				if(ch[i] == ch[j] && i != j)
				{
					count++;
					ch[j] = '`';
					frequency[j] = '`';
				}
			}
			frequency[i] = count;
		}
		
		for(int i = 0 ; i < ch.length ; i++)
		{
			if(ch[i] != '`' && frequency[i] != '`' )
			{
				System.out.println(ch[i] +" : "+ frequency[i]);
			}
		}
	}

	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter a Name to find Name Plate : ");
		String str = sc.nextLine();
		
		displayFrequencyOfChar(str);
	}

}

====================================================================================================================================================
40.
*WAP TO STORE NAMES OF 10 PEOPLE. ARRANGE THE NAMES IN ALPHABETICAL ORDER 
 USER ENTERS A CHARACETER DISPLAY ALL THE NAMES STARING WITH THE CHARECTER PROVIDED BY USER .

package com.akshu.javaLogical;

import java.util.Scanner;

public class String16
{
	public static void searchNames(String []str , char ch)
	{
		System.out.println("Names Found Are:");
		for(String name : str)
		{
			String ele = name.toLowerCase();
			
			if(ch == ele.charAt(0))
			{
				System.out.println(name);
			}
		}
	}
	
	
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		String []names = new String[10];
		System.out.println("Enter 10 manes: ");
		for(int i = 0 ; i < 10; i++)
		{
			names[i] = sc.nextLine();
		}
	
		System.out.println("Enter the charecter to search name: ");
		char ch = sc.next().toLowerCase().charAt(0);
		
		searchNames(names, ch);
	}
}
==================================================================================================================================================

*WAP TO ACCEPT A STRING AND DISPLAY new String WHERE EACH LETTER IN STRING WILL BE SHOWN AS LOWERCASE LETTER FOLLOWED BY UPPER CASE AND SPECIAL CHAR ATA LAST OF THE STRING

package com.akshu.practice;

import java.util.Scanner;

public class String18 
{
	public static void displaySepreateCase(String str)
	{
		String[] subStr = str.split(" ");
		
		String lower = "";
		
		String upper = "";
		
		String special = "";
		
		for(String ele : subStr)
		{
			for(int i = 0 ; i < ele.length() ; i++ )
			{
				char ch = ele.charAt(i);
				if(ch >= 65 && ch <= 90)
				{
					upper += ch;
				}
				else if(ch >= 'a' && ch <= 'z')
				{
					lower += ch ;
				}
				else
				{
					special += ch;
				}
			}
		}
		
		String newStr = lower+" "+upper+" "+special;
		
		System.out.println(newStr);
		
	}
	
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Enter a Name to find Name Plate : ");
		String str = sc.nextLine();
		
		displaySepreateCase(str);
		
	}
}


===================================================================================================================================================================================

*WAP TO STORE AN STRING OF NUMBERS AND DISPLAY THE STRING INTO NUMBER FORMAT IN REVERSE ORDER.(DONE)
INPUT : String str = "007" ;
output : 700

package com.akshu.javaLogical;

public class String19 
{

	public static void main(String[] args)
	{
		String arr[] = {"001", "002", "003", "004", "005", "006", "007"};
		
		int a[] = new int[arr.length];
		
		int k = 0;
		
		for(String str : arr)
		{
			char[] ch = str.toCharArray();
			int n = ch.length / 2 ;
			char temp ;
			for(int i =0; n > i  ; i++)
			{
				 for(int j = ch.length-1 ;n < j ; j--)
				 {
					 temp = ch[i];
					 ch[i] = ch[j];
					 ch[j] = temp ;
				 }
			}
			String ch1 = "";
			for(char c : ch)
			{
				ch1 += c;
			}
			
			a[k] = Integer.parseInt(ch1);
			k++;
		}
		
		for (int num : a)
		{
			System.out.println(num);
		}
	}
}
=============================================================================================================================================

* wap to to accept two string Display the New String by taking each char of frist String from lef to right and of the Second String from right to left.

package Strings;(DONE)

import java.util.Scanner;

public class NewStringFromTwoStrings5 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the 1st String");
		String str1=sc.next();
		System.out.println("enter the 2nd String:");
        String str2=sc.next();
        String str3="";
        int l1=str1.length(),l2=str2.length(),p=0,q=0;
        for(int i=0;i<l1+l2;i++) {
        	if(p<l1)
        		str3+=str1.charAt(p++);
        
        if(q<l2)
    		str3+=str2.charAt(l2-1-q++);
    }
	System.out.println(str3);
	}
}



====================================================================================================================================================================
WAP TO INPUT A STRING AND ENCRYPT IT CEASERCIPHER ENCRYPTED CODE . (NOT DONE)
CEASER CIPHER MEANS ROTATE EACH CHARECTER BY 13 PLACE 

INPUT : Apple a day keeps d octor away
output :NCCyr n qnL xrrCF qBpGBE nJnL

package com.akshu.javaLogical;

import java.util.Scanner;

public class String21 
{

	public static void main(String[] args) 
    {
		Scanner sc  = new Scanner(System.in);
		System.out.println("Enter 1st String :");
		String str1 = sc.nextLine();
		
		char[] ch = str1.toCharArray();
		
		String cipher = "";
		
		for(char c : ch)
		{
			
			if((c >= 'A' && c < 'N' )|| (c < 'n' && c >= 'a'))
			{
				cipher +=  (char) (c + 13);
			}
		    else if(c > 'N' && c <= 'Z') 
			{
					int n = (int)('Z' - c );
					cipher += (char)('a' +(13 - n)); 
			}
		    else if (c >'n' && c <= 'z')
		    {
		    	int n = (int)('z' - c) ;
				cipher += (char)('A' + (12 - n));
		    }
		    else
		    {
		    	cipher += c;
		    }
		}
		
		System.out.println(cipher);
		
      }

}
============================================================================================================================================================================================

* WAP TO ACCEPT A STRING AND THE POTENTIAL VALUWE OF STRING.(DONE)
INPUT : Apple is good.
output : 50  28  41

package com.akshu.javaLogical;

import java.util.Scanner;

public class String22 
{
	public static void main(String[] args) 
	{
		Scanner sc  = new Scanner(System.in);
		System.out.println("Enter 1st String :");
		String str1 = sc.nextLine();
		
		String[] subStr = str1.split(" ");
		
		String pSum = "";
		
		for(String s : subStr)
		{
			char[] ch = s.toUpperCase().toCharArray(); 
			int sum = 0 ;
			for(int i = 0 ; i < ch.length ; i++)
			{
				if(ch[i] >= 'A' && ch[i] <= 'Z')
				{
					int num = ch[i] - 64;
					sum = sum+num;	
				}
				else if(ch[i] >= '0' && ch[i] <= '9')
				{
					int num = ch[i] - 48;
					sum = sum+num;
				}
			}
			pSum += sum +"  " ;
		}
		System.out.println(str1);
		System.out.println(pSum);
	}

}
================================================================================================================================
================================================================================================================================

You are given a sequence of N integers, which are called as pseudo(DONE)

arithmetic sequences (sequences that are in arithmetic progression).

Sequence of N integers: 2, 5, 6, 8, 9, 12

We observe that 2+12=5+9=6+8=14

The sum of the above sequence can be calculated as 14\times3=42

For sequence containing an odd number of elements the rule is to

double the middle element,

 for example 2,5,7,9,12=2+12=5+9=7+7=14. 1214\times3=42 [middle element = 7]

A class PseudoArithmetic determines whether a given sequence is a

pseudo-arithmetic sequence.

package Strings;

public class pseudoArithmeticSequence7 {

	public static void main(String[] args) {
		int a[]= {2,5,6,8,9,12};
		int b[] = new int[a.length/2];
		int sum=0;
        for(int i=0,x=a.length-1;i<a.length/2;i++,x--) {
        	if(x>=a.length/2) {
        		sum=a[i]+a[x];
        		b[i]=sum;	
        	}
        }
        for(int i=0;i<a.length/2;i++) {
        	System.out.println(b[i]);
        }
	}

}
--------------------------

package Strings;

public class PdeudoArithmeticSequenceAnotherMethod8 {

	public static void main(String[] args) {
		//int []a= {2,5,6,8,9,12};
		int []a= {2,5,7,9,12};
		  int []sum= new int[a.length];
		  int numcount=0;
		  int paircount=0;
		  int test=0;
		for(int i=0;i<a.length;i++) {
			numcount++;
		}
		//System.out.println(numcount);
		
		 int i=0;
		 for(int j=(a.length)-1;j>=a.length/2;j--) {
			if(a.length-1>=a.length/2) {

				System.out.println(a[i]+a[j]);
				sum[i]=a[i]+a[j];
				test=a[i]+a[j];
				
			i++;
				
			}
			  
			}
		 
 
//		 for(int k=0;k<=sum.length/2;k++) {
//			 System.out.println("@"+sum[k]);
//		 }
		 for(int k=0;k<=sum.length/2;k++) {
			 if(sum[k]==test) {
				 paircount++;
			 }
		 }
		 if(numcount%2==0) {
		 if(paircount==(numcount/2)) {
			 System.out.println(" even  pseudo arthematic sequence");
		 }
		 else {
			 System.out.println("even not a pseudo arthematic sequence");
		 }
	    }
		 else {
			 if(paircount==(numcount+1)/2) {
				 System.out.println("odd pseudo arthematic sequence");
			 }
			 else {
				 System.out.println("odd not a pseudo arthematic sequence");
			 }
		 }
	}

}

==============================================================================================

























