Write a program to perform addition, subtraction, multiplication and division between two numbers using 3rd variable.

 

Perform Addition, Subtraction, Multiplication and Division calculation sequentially when user provides Two numbers. Use third variable to store and print the result.

 

 

Example 1:

Input:

Define variable number 1 to : 5

Define variable number 2 to: 6

 

Output:

Addition Result: 11.0

Subtraction Result: -1.0

Multiplication Result: 30.0

Division Result: 0.8333333333333334

 

Example 2:

If you define variable number2 to zero then display “Division by zero is not allowed” for division calculation.

 

Input:

Define variable number 1 to : 6

Define variable number 2 to: 0

 

Output:

Addition Result: 6.0

Subtraction Result: 6.0

Multiplication Result: 0.0

Division by zero is not allowed.


o/p:

import java.util.Scanner;
public class Calculator {
	    public static void main(String[] args) {
	        Scanner sc = new Scanner(System.in);
	        // Define Two numbers 
	        System.out.println("Enter a value");
            int a=sc.nextInt();
             System.out.println("Enter b value");
            int b=sc.nextInt();
int c=0;
// Define Two numbers 
c=a+b;
System.out.println("addition res:"+ c);
// Perform subtraction 
c=a-b;
System.out.println("sub res:"+c);
// Perform multiplication 
c=a*b;
System.out.println("mul res:"+c);
// Perform division
if(b==0){
    System.out.println("Division by zero is not allowed");
}else{
  c=a/b;
System.out.println("div res:" + c);   
  
}
	    }
	}
--------------------------------------------------------------------------
Write a program to perform addition using command line Argument.


Write a java program in eclipse or editplus or Notepad to perform Addition using command line argument.

1.      Save the code to a file named ‘CommandLineAddition.java’.

2.      Open your command prompt or terminal and navigate to the directory where you saved the file.

3.      Compile the program using the javac command:

4.      javac CommandLineAddition.java

5.      java CommandLineAddition 5.7 3.2

Output:

Addition Result: 8.9



If length is less than 2 then display below message then exit from the program.

Usage: java CommandLineAddition <num1> <num2>


o/p:

public class CommandLineAddition {
	public static void main(String[] args) {
          if(args.length>=2){
              int a=Integer.parseInt(args[0]);
              int b=Integer.parseInt(args[1]);
              System.out.println(a+b);
          }else{
              System.out.println("size is less than 2");
          }
        
      }
}
----------------------------------------------------------------------------------
Write a program to find out the area of circle by taking the value from Command line arguments



To find the area of a circle using command-line arguments in Java, you can pass the radius of the circle as an argument and then calculate the area using the formula: Area = π * radius * radius



1.	Save the code to a file named CircleAreaCalculator.java.

2.	Open your command prompt or terminal and navigate to the directory where you saved the file.

3.	Compile the program using the javac command:

javac CircleAreaCalculator.java





Example 1: Run the program with the radius of the circle as a command-line argument:



Input:

java CircleAreaCalculator 2.0



Output:

The area of the circle with radius 2.0 is: 12.566370614359172



Example 2:

Input:

java CircleAreaCalculator



Output:

Usage: java CircleAreaCalculator <radius>



Example 3:

Input:

java CircleAreaCalculator -3



Output:

Error: Radius must be a non-negative number.




public class CircleAreaCalculator {
	
	 public static void main(String[] args) {
	     double p=3.14;
    double r=Double.parseDouble(args[0]);
if(r>0){
    double a=p*r*r;
     System.out.println("the area of the circle with radius "+ args[0]+ " is" + a);
    }else{
    System.out.println("radius must be a non-negative number");
    }
   }
}
-------------------------------------------------------------------------------------------
A shopkeeper buys a TV set for Rs. 32,500 and sells it at a profit of 27%. Apart from this a VAT of 12.7% and Service Charge is 3.87% is charged. Display total selling price, profit along with vat and service charge.


Output:

Cost Price: Rs. 32500.0

Profit: Rs. 8775.0

VAT: Rs. 5241.925

Service Charge: Rs. 1597.3425

Total Selling Price: Rs. 48114.2675

public class TVSetProfitCalculator {
    public static void main(String[] args) {
        // Define all the variables provided in question
        double c=32500;
        double s,vat,p,charge,ts;
        System.out.println("cost price:RS."+c);
        // Calculate the profit amount
        p=c*(27.0/100);
        System.out.println("profit:RS."+p);
        // Calculate the selling price before VAT and service charge
        s=c+p;
        // Calculate the VAT amount
        vat=s*(12.7/100);
        System.out.println("VAT:Rs."+vat);
        // Calculate the service charge amount
        charge=s*(3.87/100);
        System.out.println("service charge:Rs."+charge);
        // Calculate the total selling price including VAT and service charge
        ts=s+vat+charge;
        // Display the results
        System.out.println("total selling price:Rs."+ts);
    }
}

----------------------------------------------------------------
Rohan purchased an old cycle for Rs. 1200 and spend Rs. 250 on repairs, Rs. 350 in coloring and added new accessories worth Rs. 500. Rohan wants to make a profit of Rs. 1500 on selling the cycle. Find the selling price of the cycle. Write a java program to store all values and calculate and display the selling price.



Output:

Initial Cost: Rs. 1200.0

Repair Cost: Rs. 250.0

Coloring Cost: Rs. 350.0

Accessories Cost: Rs. 500.0

Total Cost: Rs. 2300.0

Desired Profit: Rs. 1500.0

Selling Price: Rs. 3800.0


public class CycleSellingPriceCalculator {
    public static void main(String[] args) {
        // Define all the variables
        double c=1200;
        double r=250;
        double cl=350;
        double na=500;
        double tc,sp;
        double dp=1500;
        // Calculate the total cost
        System.out.println("Initial cost:Rs."+c);
        System.out.println("Repair cost:Rs."+r);
        System.out.println("coloring cost:Rs."+cl);
        System.out.println("Accossories cost:Rs."+na);
        tc=c+r+cl+na;
        System.out.println("Total cost:Rs."+tc);
        // Calculate the selling price to make the desired profit
    System.out.println("Desired profit:Rs."+dp);
        // Display the results
        sp=tc+dp;
        System.out.println("selling price:Rs."+sp);
        
        }
}
-----------------------------------------------------------------------------
Write a program to find the sum and average of three numbers where numbers must be taken from command line argument.

Save the code to a file named SumAndAverageCalculator.java.

Open your command prompt or terminal and navigate to the directory where you saved the file.

Compile the program using the javac command: javac SumAndAverageCalculator.java

Run the program with three numbers as command-line arguments:



Example 1:

Input:

java SumAndAverageCalculator 3.0 2.2 4.3

Output:

Sum of the three numbers: 9.5

Average of the three numbers: 3.1666666666666665



Example 2:

Input:

java SumAndAverageCalculator 3 1

Output:

Usage: java SumAndAverageCalculator <num1> <num2> <num3>


public class SumAndAverageCalculator {
    public static void main(String[] args) {
        double sum,avg;
       // Find arguments size. If it is not equal to 3 then print "Usage: java SumAndAverageCalculator        //<num1> <num2> <num3>" error message and exit from the program.
       if(args.length==3){
        // Parse command-line arguments as doubles
        double a=Double.parseDouble(args[0]);
        double b=Double.parseDouble(args[1]);
        double c=Double.parseDouble(args[2]);
        System.out.println("java SumAndAverageCalculator"+a +b +c);
        // Calculate the sum
        sum=a+b+c;
        // Calculate the average
        avg=sum/3;
        // Display the results   
        System.out.println("sum of the three numbers:"+sum);
        System.out.println("avarage of the three numbers:"+avg);
       }else{
           System.out.println("java SumAndAverageCalculator"+a +b +c);
           System.out.println("java SumAndAverageCalculator <num1> <num2> <num3>");
       }
    }
}
---------------------------------------------------------------------
Write a program to interchange the value of two numbers without using the third variable where number must be taken from command line argument.



Write the program and Save the code to a file named SwapNumbersWithoutTempVariable.java



Open your command prompt or terminal and navigate to the directory where you saved the file.



Compile the program using the javac command: javac SwapNumbersWithoutTempVariable.java



Run the program with two numbers as command-line arguments:

Example 1:

Input:

java SwapNumbersWithoutTempVariable 6 7

Output:

Original Values: num1 = 6, num2 = 7

Swapped Values: num1 = 7, num2 = 6

Example 2:

Input:

java SwapNumbersWithoutTempVariable 3

Output:

Usage: java SwapNumbersWithoutTempVariable <num1> <num2>



Introduction to Java
–
public class SwapNumbersWithoutTempVariable {
    public static void main(String[] args) {
        double a,b;
  // write a logic to display error if arguments length is not equals to 2
if(args.length==2){
// Parse command-line arguments as integers
      a=Double.parseDouble(args[0]);
         b=Double.parseDouble(args[1]);  
        // Display the original values
       System.out.println("java SwapNumbersWithoutTempVariable "+a+" "+b);
       System.out.println("Original values num1=" +a+" num2="+b);
        // Swap the values without using a third variable
        a=a+b;
        b=a-b;
        a=a-b;
        // Display the swapped values
        System.out.println("swapped values num1=" +a+" num2="+b);
    }else{
        System.out.println("java SwapNumbersWithoutTempVariable "+a +b);
         System.out.println("java SwapNumbersWithoutTempVariable <num1> <num2>");
    }
}
}
-----------------------------------------------------------------
Write a program to calculate the tax for a taxable income of Rs. 9,90,000, if the tax rate is fixed at 4.9%.



Output:

Taxable Income: Rs. 990000.0

Tax Rate: 4.9%

Tax Amount: Rs. 48510.0


public class TaxCalculator {
    public static void main(String[] args) {
        // Define the taxable income
        double ta; 
        double ti=990000;
        // Define the tax rate (4.9% as a decimal)
       double tr=4.9;
        // Calculate the tax amount
        ta=(tr/100)*ti;
        // Display the tax amount
        System.out.println("Taxable income:" +ti);
        System.out.println("Tax rate:" +tr+"%");
        System.out.println("Tax amount:" +ta);
    }
}
--------------------------------------------------------------------------------
1) Write a program to find out the cube of a number where number must be    taken from command line argument.

public class Cube {
	public static void main(String[] args) {
double a=Double.parseDouble(args[0]);
System.out.println(a+"cube is "+(a*a*a));
	}
}
----------------------------------------------------------------------------------------------------------
2) Write a program to find out the area of Rectangle where length and       breadth of the Rectangle must be taken from user.
package oct_30;
import java.util.Scanner;
public class Rectangle {
	public static void main(String[] args) {
		int l,b,a;
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the length");
	    l=sc.nextInt();
		System.out.println("Enter b value");
	    b=sc.nextInt();
		a=l*b;
		System.out.println("Area of the rectangle:"+a);
		}
	}

o/p:Enter the length
20
Enter b value
10
Area of the rectangle:200
---------------------------------------------------------------------------------------------------------------

Write a program in Java that will generate and print the bill at Dominos for four chicken rolls (@ Rs 60 per chicken rolls) and three vegetable puffs (@ Rs 25 per vegetable puffs). There is a special Yoga Day discount of Rs 50 on the final bill amount. Calculate and print final bill as well as all item bill.

 

Output:

Itemized Bill:

Cost of Chicken Rolls: Rs 240.0

Cost of Vegitable Puffs: Rs 75.0

Total Bill Before Discount: Rs 315.0

Yoga Day Discount: Rs 50.0

Final Bill after discount: Rs 265.0


public class GenerateBill {
	public static void main(String args[]) {
		//Define variables
		int cq=4;
		double x,fb;
		double cp=60;
		int vq=3;
		double vp=25;
		double yd=50;
		//Calculate Bill of Chicken rolls and vegitable puffs
		double cc=cq*cp;
		System.out.println("cost of chicken rolls:Rs"+cc);
		double vc=vq*vp;
        System.out.println("cost of the vegitable puffs:Rs"+vc);
        double tb=cc+vc;
        System.out.println("total bill before discount:Rs"+tb);
		//Calculate Final Bill after Yoga day discount
		System.out.println("yoga day discount:Rs"+yd);
		fb=tb-yd;
		//Display Results
		System.out.println("fianal bill after discount:Rs" +fb);
	}
}

--------------------------------------------------------------------------------------------------
Write a Java program and compute the sum of a two-digit integer number

 

Output:

User provided two-digit Integer is 89

 First digit is 8

 Last digit is 9

 Sum of digits 17

import java.util.Scanner;
public class SumOfTwoDigitIntegerNumber {
	public static void main(String args[]) {
		//Define variables
		int a;
		//Calculate sum of 2 digits
		Scanner sc=new Scanner(System.in);
		System.out.println("user provided two-digit integer is");
		a=sc.nextInt();
		System.out.println("First digit is"+a%10);
		System.out.println("last digit is"+a/10);
		//Print Results
		System.out.println("sum of digits"+((a%10)+(a/10)));
	}

}
---------------------------------------------------------------------------------------------------------
Write a program in Java to display the following pattern on the screen without using loop.



@@@@@@@@
@      @
@      @
@      @
@      @
@      @
@      @
@@@@@@@@

public class PatternWithoutLoop {
    public static void main(String[] args) {
        //Print pattern using system.out.println
        System.out.println("@@@@@@@@");
        System.out.println("@      @");
        System.out.println("@      @");
        System.out.println("@      @");
        System.out.println("@      @");
        System.out.println("@      @");
        System.out.println("@      @");
        System.out.println("@@@@@@@@");
}
}

--------------------------------------------------------------------------------------------------------------------
Write a program to input the basic salary of a person. He get 15% of the basic as HRA, 15% of the basic as Conveyance allowance and 10% of the basic as Entertainment allowance. The total salary is calculated by adding Basic + HRA + Conveyance + Entertainment Allowance. Calculate and print the total salary of person.

Take the Basic Salary from Command Line Argument



Complete code according to above logic and Save the code to a file named CalculateSalary.java



Open your command prompt or terminal and navigate to the directory where you saved the file.

Compile the program using the javac command: javac CalculateSalary.java

Run the program with salary amount as command-line arguments



Example 1:



Input:

java CalculateSalary 28000



Output:

Basic Salary is: Rs 28000.0

HRA is 15% of Basic Salary which is: Rs 4200.0

Conveyence is 15% of Basic Salary which is: Rs 4200.0

Entertainment Allowance is 10% of Basic Salary which is: Rs 2800.0

Total Salary is: Rs 39200.0



Example 2:



Input:

java CalculateSalary



Output:

Please provide Salary amount in command line

For Example java CalculateSalary 50000


public class CalculateSalary {
	public static void main(String args[]) {
	    //Declare variables
	    double hrap=15;
	    double conp=15;
	    double enp=10;
		//verify length of an array. if it is not equal to one then print error
		if(args.length==1){
		 double s=Double.parseDouble(args[0]); 
		 System.out.println("java calculatesalary"+s);   
		 System.out.println("Basic salary is:Rs"+s);
		 double hra=s*(hrap/100);
		 System.out.println("HRA is"+hra+"%"+"of basic salary which is:Rs"+hra);
		 double con=s*(conp/100);
		 System.out.println("conveyence is"+conp+"%"+"of basic salary which is:Rs"+con);
		 double en=s*(enp/100);
		 System.out.println("entertainment allowance is"+enp+"%"+"of basic salary which is:Rs"+en);
		 //Calculate Total Salary
		double ts=s+hra+con+en;
		//Print results
		System.out.println("total salary is:Rs"+ts);
		}else{
		  System.out.println("please provide salary amount in command line");
		  System.out.println("for example java calculatorsalary 50000");
		}
	
	}

}
--------------------------------------------------------------------------------------------------


Write a program in java to convert from Fahrenheit to Celsius 

Formula is :- celsius=(fahrenheit-32)*5/9;



Output:

Given Temperature in Fahrenheit: 121.0

Temperature in Celsius: 49.44444444444444




import java.util.Scanner;
public class FahrenheitToCelsius {
	public static void main(String args[]) {
		//Declare Fahrenheit value
		Scanner sc=new Scanner(System.in);
		double f=sc.nextDouble();
		System.out.println("given temprature in fahrenheit:"+f);
		//Calculate Celsius value using formula
		double c=(f-32)*5/9;
		//Print results
		System.out.println("temprature in celcius:"+c);
	}

}

-------------------------------------------------------------------------------------------------------
Write a Java program to print the following lines in a specific format by using single System.out.prinln();

Sample Output : 

Twinkle, twinkle, little star,
       How I wonder what you are! 
Up above the world so high, 
       Like a diamond in the sky. 
Twinkle, twinkle, little star, 
       How I wonder what you are
public class Twinkle {
	public static void main(String[] args) {
	System.out.println("Twinkle, twinkle, little star,\r\n"
			+ "       How I wonder what you are! \r\n"
			+ "Up above the world so high, \r\n"
			+ "       Like a diamond in the sky. \r\n"
			+ "Twinkle, twinkle, little star, \r\n"
			+ "       How I wonder what you are");		
	}

}

--------------------------------------------------------------------------------

Write a java program to convert a lowercase character to uppercase take the lowercase character as a input from the user by using commandLine argument
public class Lowtoupp {
public static void main(String[] args){
	int a=args[0].charAt(0);
	System.out.println("lowercase:"+(char)a);
	a-=32;
	System.out.println("uppercase:"+(char)a);
}
}
--------------------------------------------------------------------------------------------------
Write a java program that take 5 subject as input from the user . Find out the average mark of the student and print the Student is pass or fail as per the average . If the average is greater than 60 then the Student is pass if the avg is less than 60 then the student is fail.
================================================================================================
Write a java program to find the maximum of three numbers take all the numbers as a input form user by using command line argument.

Input as :
30 10 20

Expected Output :
Maximum of three numbers: 30

===============================================================================================
Write a java program to take days, month , year from the user by using command line argument and display it in a the given format.

Input as : 
03 11 2023

Output as :
03\11\2023

System.out.println("30"+"/"+"10"+"/"+"2023");
=============================================================================


Write a java program to add two characters ASCII value and display the addition. Take two character input from the user by using command Line argument.
package oct_30;

public class Asciisum {
public static void main(String[] args) {
	int a=args[0].charAt(0);
	System.out.println("first character"+(char)a);
	int b=args[1].charAt(0);
System.out.println("second character"+(char)b);
int x=a;
int y=b;
System.out.println("Ascii value of"+(char)a+"is"+x);
System.out.println("Ascii value of"+(char)b+"is"+y);
int sum=x+y;
System.out.println("sum of the ascii values"+sum);
}
}

======================================================================
Ques - 2
--------------
Description:

You are the owner of a bakery shop and need to create a program to generate invoices for your customers. The program should prompt the user to enter the item they want to buy, the quantity they wish to purchase, and the price of the item. Based on this input, the program should calculate the total cost and display an invoice with all the details, including the item, quantity, price per item, and total cost. At the end of the invoice, don't forget to thank the user for shopping at your bakery shop. Your task is to write a C program that accomplishes this.



Instructions:

----------------
-> Display a welcome message along with a separator line to greet the customer.
-> Prompt the customer to enter the quantity they wish to purchase and store it in an integer variable
-> Get the price of the item from the customer and store it in a floating-point variable.
-> Calculate the total cost by multiplying the price with the quantity.
-> Display the invoice with all the details, including item, quantity, price per item, and total cost.
-> Make sure the total cost is displayed with two decimal places.
-> End the invoice with a thank-you message for shopping at your bakery shop.

->Take all the neccesarry input from the commandLine argument
Example Output:
------------------
Welcome to My Bakery Shop!
----------------------------
Available Item is : Chocolate
Enter the quantity you want to purchase: 2
Enter the price of Chocolate Cake: 250



------ Invoice ------

Quantity: 2
Price per item: Rs.250
Total cost: Rs.500
Thank you for shopping at My Bakery Shop! Have a nice day!

package oct_30;
import java.util.Scanner;
public class Bakery {
public static void main(String[] args) {
	System.out.println("welcome to my bakery shop!");
Scanner sc=new Scanner(System.in);
System.out.println("avialble item is:");
String item=sc.nextLine();
System.out.println("Enter the quantity you want to purchase:");
int q=sc.nextInt();
System.out.println("Enter the price of"+item+" Cake:");
int p=sc.nextInt();
System.out.println("-----------invoice---------");
System.out.println("quantity:"+q);
System.out.println("price per item:Rs"+p);
double tc=q*p;
System.out.println("Total cost: Rs"+tc);
System.out.println("Thank you for shopping at My Bakery Shop! Have a nice day!\r\n");
}
}

--------------------------------------------------------------------------------------------------------

Write a java program to add two characters ASCII value and display the addition. Take two character input from the user by using command Line argument.

public class Asciisum {
public static void main(String[] args) {
	int a=args[0].charAt(0);
	System.out.println("first character"+(char)a);
	int b=args[1].charAt(0);
System.out.println("second character"+(char)b);
int x=a;
int y=b;
System.out.println("Ascii value of"+(char)a+"is"+x);
System.out.println("Ascii value of"+(char)b+"is"+y);
int sum=x+y;
System.out.println("sum of the ascii values"+sum);
}
}
------------------------------------------------------------------------------------------------
Develop below scenario program and take all the input from the user by using command line argument.


Question:

How many cups of tea, cups of coffee, and biscuits would you like to order?
Read the number of tea, coffee and biscuits from the user by using commandline argument.

Instructions:

Each cup of tea costs ₹15, each cup of coffee costs ₹25, and each biscuit costs ₹10.
Please provide the quantity for each item you wish to order.

Example:
Customer: "I'd like to have 2 cups of tea, 1 cup of coffee, and 3 biscuits, please."

Bill Calculation:

2 cups of tea × ₹15 = ₹30
1 cup of coffee × ₹25 = ₹25
3 biscuits × ₹10 = ₹30

Total Bill:
₹30 (Tea) + ₹25 (Coffee) + ₹30 (Biscuits) = ₹85

Example 
------------
Input as :
-------------
2 1 4

Output as :
-----------------

2 cups of tea

1 cup of coffee

3 biscuits

Total Bill Amount: ₹85

Thank you for choosing Tasty Treats Cafe! Please let us know your order, and we will be more than happy to serve you.


package oct_30;

import java.util.Scanner;

public class Tea {
public static void main(String[] args) {
	int tc=15;
	int cc=25;
	int bc=10;
	Scanner sc=new Scanner(System.in);
	System.out.println("Input as:\n"
			+"-----------------");
	int tq=sc.nextInt();
	int cq=sc.nextInt();
	int bq=sc.nextInt();
	System.out.println(tq+" cups of tea");
	System.out.println(cq+" cups of coffee");
	System.out.println(bq+" cups of biscuits");
	int tb=(tc*tq)+(cq*cc)+(bq*bc);
	System.out.println("Total bill Amount:"+tb);
	System.out.println("Thank you for choosing Tasty Treats Cafe! Please let us know your order, and we will be more than happy to serve you.");
}
}
----------------------------------------------------------------------------------------------------

Write a program to enter Principal, Rate and Time. Calculate and display Simple Interest and Amount.



Ask user to provide Principal amount, Interest rate in percentage and Time in years. Then calculate and display Simple interest and total amount.



Output:

Enter the Principal Amount: 25000

Enter the Rate of Interest (in percentage): 18

Enter the Time (in years): 2

Simple Interest: Rs 9000.0

Total Amount: Rs 34000.0


import java.util.Scanner;
public class SimpleInterestCalculator {
    public static void main(String[] args) {
        // Create a Scanner object to read user input
        Scanner sc=new Scanner(System.in);
        // Prompt the user to enter principal amount
        System.out.println("enter the principle amount:");
         double p=sc.nextDouble();
        // Prompt the user to enter the rate of interest 
        System.out.println("enter the rate of interest:");
        double r=sc.nextDouble();
        // Prompt the user to enter the time in years
        System.out.println("enter the time(in years):");
        double t=sc.nextDouble();
        // Calculate Simple Interest
        double si=(p*r*t)/100;
        // Calculate the Total Amount (Principal + Simple Interest)
        double ta=p+si;
        // Display the Simple Interest and Total Amount
        System.out.println("simple interest:"+si);
        System.out.println("total amount:"+ta);
        // Close the Scanner
        
    }
}

------------------------------------------------------------------------------------------
Write a program in java to input number of days. Find and display number of years, months, and days.





Output:

Enter the number of days: 397

Years: 1

Months: 1

Days: 2


import java.util.Scanner;
public class DaysToYearsMonthsDays {
    public static void main(String[] args) {
        // Create a Scanner object to read user input
        Scanner sc=new Scanner(System.in);
        // Prompt the user to enter the number of days
        System.out.println("enter the number of days:");
        int nd=sc.nextInt();
        // Calculate the number of years
        int y=nd/365;
        // Calculate the number of months
        int m=(nd%365)/30;
        // Calculate the number of days
        int d=(nd%365)%30;
        // Display the result
        System.out.println("years:" + y + "\n" + "months:"+m+"\n"+"days:"+d);
        // Close the Scanner
        
    }
}
-------------------------------------------------------------------------------------

A whole-seller gives incentives in the form of discounts on the net bill. Write a program to input the net bill and calculate the discount as follows:



   Net Bill in Rupees			  Discount %

	<5000					5

	>=5000 and <10000			10

	>=10000					15



Display Discount %, Discount Amount and Amount Payable



Output:

Enter Net Bill 8000

Discount Percentage: 10.0

Discount Amount: 800.0

Amount Payable: 7200.0

import java.util.Scanner;
public class NetBillBasedOnDiscount {
	public static void main(String args[]) {
		double dp=0;
		// Create a Scanner object to read user input
		Scanner sc=new Scanner(System.in);
		// Prompt the user to enter the amount of Net Bill
		System.out.print("enter net bill:");
		int n=sc.nextInt();
		// Find discount percentage based on conditions
		if(n<5000)dp=5;
		else if(n>=5000&&n<10000)dp=10;
		else if(n>=10000)dp=15;
		else System.out.println("discount not mentioned:");
		//Calculate Discount amount
		double dm=n*(dp/100);
		//Calculate Amount Payable
		double pm=n-dm;
		//Display results
		System.out.println("discount percentage:"+dp);
		System.out.println("discount amount:"+dm);
		System.out.println("amount payable:"+pm);
		//close Scanner object
	}
}

========================================================================================

What is the output of the following Java Code?

int a=9;
float b = a/2;
System.out.println(b);



A.4.0


B,4.5


C.5.0


D.None of the above

Question: 2
What is the output of the below Java code snippet?
char ch = ‘A’;
int a = ch + 1;
ch = (char)a;
System.out.println(ch);



A.66


B.A


C.B


D.65

Question: 3
What is the output of the below Java code snippet?

float a = 8.2/2;
System.out.println(a);



A.4.1


B.8.1


C.4


D.Compiler Error

Question: 4
What is the output of the Java code snippet?

int a = 260;
byte b= (byte)a;
System.out.println(b);



A.0


B.4


C.255


D.260

Question: 5
What is the output of the Java code snippet?

short a = (short)65540;
System.out.println(a);



A.0


B.4


C.65536


D.65540

Question: 6
public class MyFirstJavaProgram {
public static void main(String []args) {
int a = 300;
long b = a;
System.out.println(b);
}
}



A.300


B.Compiler error


C.400


D.200

Question: 7
public class WideningExample {
public static void main(String args[]){
char ch = ‘C’;
int i = ch;
System.out.println(i);
}
}



A.B


B.C


C.65


D.67

Question: 8
public class Sample {
public static void main(String[] args)
{
System.out.print(“Y”+”O”);
System.out.print(‘L’);
System.out.print(‘O’);
}
}



A.YOLO


B.YO
  L
  O


C.Y
 O
 L
 O


Compiler error

Question: 9
public class Sample2 {
public static void main(String[] args)
{
System.out.print(“Y”+”O”);
System.out.print(‘L’ + ‘O’);
}
}



A.YO
  LO


B.YOLO


C.YO7778


D.YO155

Question: 10
class Sample3{
public static void main(String[] args)
{
int i = 100;
long l = i;
float f = l;
System.out.println(“Int value ” + i);
System.out.println(“Long value ” + l);
System.out.println(“Float value ” + f);
}
}



A.compiler error


B.Int value 100
  Long value 100
  Float value 100


C.Int value 100
  Long value 100.0
  Float value 100.0


D.Int value 100
  Long value 100
  Float value 100.0

Question: 11
class Sample5{
public static void main(String args[])
{
byte b = 42;
char c = ‘a’;
short s = 1024;
int i = 50000;
float f = 5.67f;
double d = .1234;
double result = (f * b) + (i / c) - (d * s);
System.out.println(“result = ” + result);
}
}



A.626.77


B.627


C.879.5


D.880

Question: 12
public class Sample4{
public static void main(String[] argv)
{
char ch = ‘c’;
int num = 88;
ch = num;
}
}



A.A


B.Y


C.X


D.compile error

================================================================================================

write a java program to find the ASCII value of a character



For Example:

Output should be in below format

The ASCII value of a is :97

import java.util.Scanner;
public class AsciiValue {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        //Define variable and a character whose ASCII value you want to find
        System.out.print("enter the character:");
        char ch=sc.next().charAt(0);
    int a=ch;
        // perform the logic and display ASCII value
        System.out.println("The ASCII value of " + ch  + "is :"+a);
    }
}
===============================================================================================

write a java program to covert string to double using parseDouble() and multiply

two Floating -point Numbers and display the result by taking input from the 

command line argument?

public class MultiplyDoubleNumbers {
    public static void main(String[] args) {
       //Find if args length is 2 or not. if not then display error message.
       if(args.length==2){
         // Parse the command line arguments to double or Float
         double a=Double.parseDouble(args[0]);
         double b=Double.parseDouble(args[1]);
         // Perform the multiplication
         double c=a*b;
         // Display the result
         System.out.println("mul:"+c);
       }else{
           System.out.println("error");
       }
      
    }
}

==============================================================

Write a java program to find the profit and loss by following the formula



Profit and loss Formulas – 

Profit = SP – CP

Loss = CP – SP

Profit percentage = (Profit /Cost Price) x 100

Loss percentage = (Loss / Cost price) x 100

import java.util.Scanner;
public class ProfitAndLoss {

	public static void main(String[] args) {
		//Declare variables
		Scanner sc=new Scanner(System.in);
		//Find profit and loss percentages based on cost and selling price
		System.out.println("enter the cost price:");
		double cp=sc.nextDouble();
		System.out.println("enter the selling price");
		double sp=sc.nextDouble();
		ProfitAndLoss a=new ProfitAndLoss();
		if(cp<sp){
	    double p=sp-cp;
	    System.out.println("profit:"+p);
	    a.profit(p,cp);
		}else{
		double l=cp-sp;
		System.out.println("loss:"+l);
	    a.loss(l,cp);
		}
	}
		// Display Results
	public  void profit(double p,double cp){
		    double pp=(p/cp)*100;
		System.out.println("profit percentage="+pp);
		}
	public void loss(double l,double cp){
		double lp=(l/cp)*100;
		System.out.println("loss percentage="+lp);
		}
	}

===============================================================================

                                          Quiz Test
                                         ===========
Answered: 50 / 50
Score: 48 / 50

Question: 1
Who invented Java Programming?



a) Guido van Rossum


b) James Gosling


c) Dennis Ritchie


d) Bjarne Stroustrup

Question: 2
Which statement is true about Java?



a) Java is a sequence-dependent programming language


b) Java is a code dependent programming language


c) Java is a platform-dependent programming language


d) Java is a platform-independent programming language

Question: 3
Which component is used to compile, debug and execute the java programs?



a) JRE


b) JIT


c) JDK


d) JVM

Question: 4
What is the extension of java code files?



a) .js


b) .txt


c) .class


d) .java

Question: 5
What is the extension of compiled java classes?



a) .txt


b) .js


c) .class


d) .java

Question: 6
Which of the following is a valid long literal?



a) ABH8097


b) L990023


c) 904423


d) 0xnf029L

Question: 7
JDK stands for ____.



a) Java development kit


b) Java deployment kit


c) JavaScript deployment kit


d) None of these

Question: 8
JRE stands for _.



a) Java run ecosystem


b) JDK runtime Environment


c) Java Runtime Environment


d) None of these

Question: 9
Every statement in Java language should end with a?



a) Dot or Period


b) Comma


c) Semicolon


d) Colon

Question: 10
What is the need to mention “static” before main method?



a) To call main method with creating an object of class


b) To make main method as class method common to all instances


c) Both A and B


d) None of the above

Question: 11
What is the use of Access modifier “public” in main( ) method?



a) To hide the main method from misuse


b) To call the main method outside of Class or Package by JVM


c) To protect main method


d) None of the above

Question: 12
Choose a Single Line Comment in Java Language below?



a) //Some comments


b) Some comments//


c) /Some comments/


d) /Some comments/

Question: 13
Name of a Class, Variable, Method or an Interface in Java language is called?



a) Argument


b) Value


c) Identifier


d) None of the above

Question: 14
When an expression consists of int, double, long, float, then the entire expression will get promoted into a data type that is:



a) float


b) double


c) int


d) long

Question: 15
Which of the following declarations does not compile?



a) double num1, int num2 = 0;


b) int num1, num2;


c) int num1, num2 = 0;


d) int num1 = 0, num2 = 0;

Question: 16
A compiler converts the Java program into an intermediate language representation called _



a) bytecode


b) byte


c) byteclass


d) bytejava

Question: 17
What is the return type of program’s main( ) method?



a) void main()


b) int


c) void


d) no return type

Question: 18
What is byte code in the context of Java?



a) The type of code generated by a Java compiler.


b) The type of code generated by a Java Virtual Machine.


c) It is another name for a Java source file.


d) It is the code written within the instance methods of a class.


e) It is another name for comments written within a program.

Question: 19
Identify, from among the following, the incorrect variable name(s).



a) _theButton


b) $reallyBigNumber


c) 2ndName


d) CurrentWeatherStateofplanet


e) my2ndFont.

Question: 20
Which of the following is not a primitive data type in Java?



a) int


b) float


c) boolean


d) String

Question: 21
What is the range of values that can be stored in a byte data type in Java?



a) -128 to 127


b) -32768 to 32767


c) -2147483648 to 2147483647


d) None of the above

Question: 22
Java programs are …….. independent.



a) platform


b) procedural


c) high level


d) Secure

Question: 23
_ is the ability of a Java application to perform multiple tasks at the same time.



a) Multiprogramming


b) Multithreading


c) Multiprocessing


d) Multitasking

Question: 24
Which is the first line to trigger a compiler error?
a) double d1 = 5f; // p1
b) double d2 = 5.0; // p2
c) float f1 = 5f; // p3
d) float f2 = 5.0; // p4



a) p1


b) p2


c) p3


d) p4

Question: 25
Observe the following code snippet and choose the correct option.
byte b = 10; // line 1
b = b * 10; // line 2



a) Lines 1 and 2 both execute without any error.


b) Because of line 2, the code will not compile.


c) Because of line 1, the code will not compile.


d) None of the above

Question: 26
A valid Identifier or name in Java language can start with which character?



a) a-z, A-Z


b) $, _


c) 0-9


d) A and B

Question: 27
What is the entry point of a program in Java?



a) main() method


b) The first line of code


c) Last line of code


d) main class

Question: 28
What is the entry point of a program in Java?



a) main() method


b) The first line of code


c) Last line of code


d) main class

Question: 29
Multiline comment is created using _.



a) //


b) /* */


c)


d) All of these

Question: 30
What makes the Java platform independent?



a) Advanced programming language


b) It uses bytecode for execution


c) Class compilation


d) All of these

Question: 31
Number of primitive data types in Java are?



a)5


b)6


c)7


d)8

Question: 32
What is the size of float and double in java?



a)32 and 64


b)32 and 32


c)64 and 64


d)64 and 32

Question: 33
Which one of the following is not a Java feature?



a) Object-oriented


b) Use of pointers


c) Portable


d) Dynamic and Extensible

Question: 34
What is the original name of Java Programming language?



A) J++


B) C++


C) OAK


D) TEAK

Question: 35
Which company owns Java at present?



A) IBM


B) Microsoft


C) Sun Microsystems


D) Oracle

Question: 36
What is a Compiler?



A) A Compiler converts all instructions in one go.


B) A compiler converts source code to low-level code


C) Compilers work fast


D) All the above

Question: 37
Choose a correct statement about Java source files.



A) Java files are human readable


B) Java files contain Classes with Methods and Variables


C) Import statements import library Classes into our class


D) All the above

Question: 38
Byte code is the result of?



A) Compiling a Java file


B) Compiling a Class file


C) Interpreting a Java File


D) Interpreting a Class file

Question: 39
What is JVM ?



A) JVM is the confined memory area


B) All java programs run inside JVM memory


C) JVM provides security to the computer by giving controlled access to Files and Memory on a computer


D) All the above

Question: 40
When was first Version of Java i.e Java 1.0 was released?



A) 1991


B) 1994


C) 1996


D) 1999

Question: 41
What is Portability offered by Java language?



A) Small code size easy to carry occupying less disk space


B) Generating suitable Byte Code for each machine by the Compiler


C) Ability to run the Byte on different machines producing the same behaviour and output


D) Java does not actually provide portability

Question: 42
What is JIT in Java?



A) Java In Timer


B) Java In Time Thread


C) Just In Time Compiler


D) Just In Time Runnable

Question: 43
Choose the correct statement about Java?



A) JIT Compiler produces Byte Code from Java file.


B) JIT Compiler takes chunks of Byte Code as input and produces Executable code on that particular machine.


C) JIT Compiler assists the actual JAVAC compiler to compile fast


D) None of the above

Question: 44
What happens in the absence of JIT Compiler in Java?



A) Byte code is produced slowly


B) Executable Code is produced slowly because of line by line Interpreting


C) Executable Code is produced without portability


D) None of the above

Question: 45
What is the Java command used to compile a java program from Command Line or Command Prompt or CMD?



A) >java Hello.java


B) >javac Hello.java


C) >javacomp Hello.java


D) >javacmd Hello.java

Question: 46
What is the command used to Run a Java program form Command Line or Command Prompt or CMD?



A) javac Hello


B) java Hello.class


C) java Hello


D) javac Hello.java

Question: 47
A function in C language is similar to what in Java language?



A) Method


B) Member


C) Variable


D) None of the above

Question: 48
In standalone Java applications, which method is mandatory?



A) main method


B) show method


C) display method


D) print method

Question: 49
Choose a correct version of Java Documentation Comment?



A)
/*
comments
*/


B)
/**
comments
*/


C)
/*
comments
**/


D)
/**
comments
**/

Question: 50
which among the following is not a Data Type in Java?



A) short


B) int


C) long double


D) double

======================================================================

Write a Java program that computes the volume of a sphere using its radius as a command-line argument.



Formula:- v=3/4*pi*r*r*r.

public class MyProgram
{
    public static void main(String[] args)
    {
     double r=Double.parseDouble(args[0]);
     System.out.println("radius="+r);
     double pi=3.14;
     double v=3.0/4*pi*r*r*r;
     System.out.println("volume of the circle:"+v);
    }
}

================================================================================

Develop a Java program that converts kilometers to miles, with the distance in kilometers provided as a command-line argument.



Example:- 1 Kilometer=0.621371 miles.

public class MyProgram
{
    public static void main(String[] args)
    {
     double k=Double.parseDouble(args[0]);
     System.out.println("kilometers:"+k);
     double m=(1/0.621371)*k;
     System.out.println("miles:"+m);
    }
}

=========================================================================================

Write a Java program that converts pounds to kilograms, with the weight in pounds provided as a command-line argument.

Example:- 1 pounds = 0.453592 kilograms.


public class MyProgram
{
    public static void main(String[] args)
    {
     double p=Int.parseDouble(args[0]);
     System.out.println("enter the pounds:"+p);
     double k=p/0.453592;
     System.out.println("kilograms:"+k);
    }
}
===========================================================================================================

Implement a Java program that calculates the factorial of a number passed as a command-line argument.

public class MyProgram
{
    public static void main(String[] args)
    {
    int n=Integer.parseInt(args[0]);
    int fact=1;
    while(n!=0){
       fact=fact*n;
        n--;
    }
    System.out.println("factorial of"+n+"is:"+fact);
    }
}

=======================================================================
Que-1) Write a java program to calculate the curved surface area of a 
cube?
 Formula-6*side Square.
package oct_30;

import java.util.Scanner;

public class CurvedSurfaceareaofCube {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("enter the side of the square:");
	int s=sc.nextInt();
	int csa=6*s;
	System.out.println("curved surface arae of the cube:"+csa);
}
}

===========================================================
Que-2) write a java program to calculate the total surface area of a 
cylinder? 
 Formula- 2 pi square r * 2 pi r h (take the pi as 3.14).
package oct_30;

import java.util.Scanner;

public class TotalSurfaceareaofCylinder {

	public static void main(String[] args) {
		double pi=3.14;
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the radius of the cylinder:");
		double r=sc.nextDouble();
		System.out.print("enter the height of the cylinder:");
		double h=sc.nextDouble();
		double tsa=(2*pi*r)*(2*pi*r*h);
		System.out.println("total surface area of a cylinder:"+tsa);
	}

}
=======================================================

Que-3) write a Java program to calculate compound interest for 3 years? 
 Formula-
 amount=principle*((1+rate/100)*(1+rate/100)*(1+rate/100));

package oct_30;

import java.util.Scanner;

public class CompoundInterest {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int t=3;
		System.out.print("enter the principle amount:");
		int p=sc.nextInt();
		System.out.print("enter the rate of interest:");
		double r=sc.nextDouble();
		double a=p*((1+r/100)*(1+r/100)*(1+r/100));
        System.out.println("total amount:"+a);
	}

}

===============================================================

Que-4) write Java Program Convert Fahrenheit To Celsius | Vice Versa
 Formula-
 Celsius=(Fahrenheit-32)*5/9;
 Fahrenheit=((9*Celsius)/5)+32;
 Note [ Write two seprate program for converting celsius into 
Fahrenheit
 and Fahrenheit into celsius ]

package oct_30;

import java.util.Scanner;

public class FahrenheittoCelsius {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("enter the fahrenheit value:");
	double fv=sc.nextDouble();
	double c=(fv-32)*5/9;
	System.out.println("fahrenheit to celsius:"+c);
	System.out.print("enter the celsius value:");
	double cv=sc.nextDouble();
	double f=((9*cv)/5)+32;
	System.out.println("celsius to fahrenheit:"+f);
	}

}
==========================================================

Que-5) 
--------------------------------------------------------------
public class Literals_Integers 
 {
 public static void main (String args[])
 {
 int decimal_int=1234;
 int octal_int=077;
 int hexadec_int=0x1ff2;
 int binary_int=0b1010101;
 System.out.println("This is a Decimal Literal: "+decimal_int);
 System.out.println("This is an Octal Literal: "+octal_int);
 System.out.println("This is a Hexa Decimal Literal: "+hexadec_int);
 System.out.println("This is a Binary Literal: "+binary_int);
 }
 }
[What will be the output of the above program]

o/p:

This is a Decimal Literal: 1234
This is an Octal Literal: 63
This is a Hexa Decimal Literal: 8178
This is a Binary Literal: 85

==============================================================

Que-6) 
--------------------------------------------------------------
public class Literals_Float
{
 public static void main (String args[])
 {
 float val_float=1.7732f;
 double val_double=1.7732d;
 float val_exponent=123E4f;
 System.out.println("This is a Floating Point Literal"+val_float);
 System.out.println("This is a Decimal Literal"+val_double);
 System.out.println("This is an Exponential 
Literal"+val_exponent);
 }
} 
[What will be the output of the above program]

o/p:

This is a Floating Point Literal1.7732
This is a Decimal Literal1.7732
This is an Exponential Literal1230000.0
==============================================================
Que-8)
---------------------------------------------------------------
public class ExplicitTypeCasting
{
 public static void main (String[]args)
 {
 double doubleVariable = 100.04;
 long longVariable = (long) doubleVariable;
 int intVariable = (int) longVariable;
 System.out.println ("Double Value is : " + doubleVariable);
 System.out.println ("Long Value is : " + longVariable);
 System.out.println ("Integer Value is : " + intVariable);
 }
}
[What will be the output of the above program]

o/p:
Double Value is : 100.04
Long Value is : 100
Integer Value is : 100

===================================================================

Que-9)
----------------------------------------------------------------
class Sample
{
 public static void main(String[] args) 
 {
 int a=10;
 float b=4.5f;
 double c=5.2;
 long d=(long)-8.98;
System.out.println(a);
System.out.println(b); 
System.out.println(c); 
System.out.println(d);
}
}
[What will be the output of the above program]
o/p:
10
4.5
5.2
-8
_________________________________________________________________________

Que-10)
---------------------------------------------------------------
public class Sample {
public static void main(String[] args) {
int a=10;
float b=4.5f;
double c=5.2;
long d=378293L;
 long e=(long)-8.98;
System.out.println(a);
System.out.println(b); 
System.out.println(c); 
System.out.println(d);
 System.out.println(e);
Sample.main("java");
}
}

o/p:Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	The method main(String[]) in the type Sample is not applicable for the arguments (String)

	at oct_30.Sample.main(Sample.java:16)


________________________________________________________________________

Write a java program to Check the given number is Odd Or Even

method Name :-checkDigit
AccessModifier :- public 
keyword : static
Argument :- int num
Return Type:- String

this method will check weither given number is odd or even

input:- 5
output :- odd

input 6
output:- even

method1:
----------------
package oct_30;

public class OddorEven {

	public static void main(String[] args) {
		System.out.print("enter the number:");
		boolean a=checkDigit(Integer.parseInt(args[0]));
		if(a) {
		System.out.println("even num");
		}else {
			System.out.println("odd num");
		}
	}
public static boolean checkDigit(int num) {
	//if(num%2==0)
	//return true;
	//else return false;
	return num%2==0;
}
}

method2:
----------

package oct_30;
import java.util.Scanner;
public class OddorEven {

	public static void main(String[] args) {
		System.out.print("enter the number:");
		int n;
		String a=checkDigit(n=(new Scanner(System.in)).nextInt());
		System.out.println(n+"is a"+a);
	}
public static String checkDigit(int num) {
	if(num%2==0)
	return "even";
	else return "odd";
}
}
--------------------------------------------------------

1) 

Write a java program to find the given number is palindrome or Not

Method Name:- isPalindrome
AccessModifier :-public 
keyword : static
Argument :- int num
return Type:- boolean
isPalindrome method will check the given number is Palindrome or not and it will return true or false

Input:-121
output :- true 

Input :- 122
output : false

pgm1:

package oct_30;
import java.util.Scanner;
public class Polindrome {

	public static void main(String[] args) {
		System.out.println("enter the number:");
		boolean a=isPolindrome((new Scanner(System.in)).nextInt());
		if(a) {
			System.out.println("is a polindrome");
		}else {
			System.out.println("is not a polindrome");
		}
	}
	public static boolean isPolindrome(int num) {
		int temp=num;
		int rev=0;
		while(temp!=0) {
			rev=rev*10+temp%10;
			temp/=10;
		}
		return rev==num;
		//if(rev==num)
		//return true;
		//else return false;
	}
}

====================================================================================

3)Write a java program to perform arithmetic operations +,-,/,*
there are 4 methods

  A) name of method:- AdditionOfNumber(int num,int num2)
     AccessModifier :- public 
     keyword : static
     Argument :- int num,int num2
     return type:- int

	AdditionOfNumber this method will perform the addition and it will return           	the sum of num1 and num2

  B) name of method:- SubstractionOfNumber(int num,int num2)
     AccessModifier :- public 
     keyword : static
     Argument :- int num,int num2
     return type:- int
     SubstractionOfNumber this method will perform the substraction '-' and it 	will return the value
	
   c) name of method:- MultipOfNumber(int num,int num2)
     AccessModifier :- public 
     keyword : static
     Argument :- int num,int num2
     return type:- int
     MultipOfNumber this method will perform the Multi '*' and it will return the    	value
  
    D)name of method:- DivOfNumber(int num,int num2)
     AccessModifier :- public 
     keyword : static
     Argument :- int num,int num2
     return type:- int
     DivOfNumber this method will perform the div '/' and it will return the    	value
pgm:
-----
package oct_30;

import java.util.Scanner;

public class ArithmeticOperations {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("Enter the num1:");
	int a=sc.nextInt();
	System.out.print("Enter the num2:");
	int b=sc.nextInt();
	int x=AdditionOfNumber(a,b);
	System.out.println("sum="+x);
	int y=SubstractionOfNumber(a,b);
	System.out.println("sub="+y);
	int p=MultiOfNumber(a,b);
	System.out.println("mul="+p);
	int q=DivOfNumber(a,b);
	System.out.println("div="+q);
	}
public static int AdditionOfNumber(int num1,int num2) {
	int c=num1*num2;
	return c;
}
public static int SubstractionOfNumber(int num1,int num2) {
	int c=num1-num2;
	return c;
}
public static int MultiOfNumber(int num1,int num2) {
	int c=num1*num2;
	return c;
}
public static int DivOfNumber(int num1,int num2) {
	int c=num1/num2;
	return c;
}
}
=====================================================================

4)Write a java program to check weither given Char is Vowel Or Consonant

   Name of method:- checkCharacter(char ch)
   AccessModifier :- public 
   keyword : static
   Argument :- char ch
   return type:- boolean

	checkCharacter this method will check the given char is  Vowel Or Consonantand return true or false

input :-  A
output:-Vowel

input:- x
output:- Consonant

package oct_30;
import java.util.Scanner;
public class VowelorConsonant {

	public static void main(String[] args) {
		System.out.println("Enter the character:");
		boolean y=checkCharacter(new Scanner(System.in).next().charAt(0));
		if(y) {
			System.out.println("vowel");
		}
			else {
				System.out.println("consonant");
			}
	}
public static boolean checkCharacter(char ch) 
{
	//if((ch>='a'||ch<='z')||(ch>='A'||ch<='Z')) {
	 if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u'||ch=='A'||ch=='E'||ch=='I'||ch=='O'||ch=='U') {
return true;
}
else {
	return false;
}
}
}
==========================================================================
5)Write a java program to check the given number is prime or not

Name of method:- isPrime(int num)
   AccessModifier :- public 
   keyword : static
   Argument :- int num
   return type:- boolean

this method will check weither the given number is prime or not and return boolean value 

input :- 13
output :- true;

input :-12
output :- false

package oct_30;

import java.util.Scanner;

public class primeorNot{

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("Enter the num:");
	int num=sc.nextInt();
	boolean a=isPrime(num);
	if(a) {
		System.out.println("prime");
	}else {
		System.out.println("not a prime");
	}
	}
public static boolean isPrime(int num) {
	int i,c=0;
	for(i=2;i<=num;i++) {
		if(num%i==0)
		c++;
	}
	return c==1;
}
}
==============================================================

6)
Write a java program to check the given char is Alphabet or not

Name of method:- isAlphabet(char ch)
   AccessModifier :- public 
   keyword : static
   Argument :- char ch
   return type:- boolean

isAlphabet method will check the given charactor is Alphabet or not

input :- 'A'
output :- true

input :- '*'
output:- false
package oct_30;

import java.util.Scanner;

public class AlphabetorNot {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the character:");
		char ch=sc.next().charAt(0);
		boolean a=isAlphabet(ch);
		if(a) {
			System.out.println("alphabet");
		}else {
			System.out.println("not a alphabet");
		}
	}
public static boolean isAlphabet(char ch) {
	if((ch>=65&&ch<=90)||(ch>=97&&ch<=122)){
		return true;
	}else {
		return false;
	}
			}
}


===================================================================

MCQ
Score: 12 / 12

Question: 1
Which of these is long data type literal?



a) 0x99fffL


b) ABCDEFG


c) 0x99fffa


d) 99671246

Question: 2
Which of these can be returned by the operator &?



a) Integer


b) Boolean


c) Character


d) Integer or Boolean

Question: 3
Literals in java must be appended by which of these?



a) L


b) f


c) D


d) L and I

Question: 4
Literal can be of which of these data types?



a) integer


b) float


c) boolean


d) all of the mentioned

Question: 5
Which of these cannot be used for a variable name in Java?



a) identifier


b) keyword


c) identifier & keyword


d) none of the mentioned

Question: 6
Which of these is an incorrect string literal?



a) “Hello World”


b) “Hello\nWorld”


c) “\”Hello World\””


d)”Hello
world”

Question: 7
Which of these is necessary condition for automatic type conversion in Java?



a) The destination type is smaller than source type


b) The destination type is larger than source type


c) The destination type can be larger or smaller than source type


d) None of the mentioned

Question: 8
What will be the error in the following Java code?
byte b = 50;
b = b * 50;



a) b cannot contain value 100, limited by its range


b) * operator has converted b * 50 into int, which can not be converted to byte without casting


c) b cannot contain value 50


d) No error in this code

Question: 9
If an expression contains double, int, float, long, then the whole expression will be promoted into which of these data types?



a) long


b) int


c) double


d) float

Question: 10
What will be the output of the following Java code?

class CharIncrement 
{
    public static void main(String args[]) 
    {
        char c1 = 'D';
        char c2 = 84;
        c2++;
        c1++;
        System.out.println(c1 + " "  + c2);
    } 
}


a) E U


b) U E


c) V E


d) U F

Question: 11
What will be the output of the following Java code?

class Conversion 
{
    public static void main(String args[]) 
    {
        double a = 295.04;
        int b = 300;
        byte c = (byte) a;
        byte d = (byte) b;
        System.out.println(c + " " + d);
    } 
}


a) 38 43


b) 39 44


c) 295 300


d) 295.04 300

Question: 12
What will be the output of the following Java program?

class Test 
{    
    public void main( String[] args ) 
    {  
        System.out.println( "Hello" + args[0] ); 
    } 
}


a) Hello c


b) Hello


c) Hello world


d) Runtime Error

=====================================================

Write a java which program the sum of digits of the given two digit number.

program determined by the following rules:

 

if the given value is in between 10 and 99, return sum of it's digits. 

﻿Example: if x = 34, print 7

if the given value is negative, print -3

if the given value is greater than 99, print -2

if the given value is in between 0 and 9, print -1


import java.util.Scanner;
public class SumOfDigits {
	public static void main(String[] args) {
        // Create a Scanner object to read input from user
        Scanner sc=new Scanner(System.in);
        // Prompt the user to enter a number
        System.out.print("Enter the number in between 10 and 99:");
        int n=sc.nextInt();
        // implement the logic according to conditions
        int sum=0;
        if(n>=10&&n<=99){
            while(n!=0){
                int x=n%10;
                sum+=x;
                n/=10;
            }
            System.out.println("sum is:"+sum);
            }else if(n<0){
                System.out.println("the given value is negative:-3");
            }else if(n>99){
                System.out.println("the given value is greater than 99:-2");
            }else if(n>=0&&n<=9){
                System.out.println("the given value is in between 0 and 9:-1");
            }
        // Display the result
        
        
        // Close the Scanner
        
    }
}

=============================================================================

Write a java program which print the given three-digit number is palindrome or not 

 

Program is determined by the following rules:

 

if the given number is an three digit number, Example: if x = 232, print 1. if x = 345, print 0

if 1 then print a message that the number is palindrome

if 0 then print a message that the number is not a palindrome

if the given number is negative or zero, print -1

if -1 then print a message that the given number is -ve kindly provide the +ve number only

if the given number is not an three digit number, print -2

if -2 then print the message that this program can check the operation for the 3 number only.

// import required classes and packages
import java.util.Scanner;
public class PalindromeTest {
	public static void main(String[] args) {
		// initialize Scanner object and read the number from user
		Scanner sc=new Scanner(System.in);
		//ask user to input the number
		System.out.print("Enter the number:");
		//write logic to find palindrome or not
		int n=sc.nextInt();
		int x=0,y,z,p;
		if(n>=100&&n<=999){
		int temp=n;
		int rev=0;
		while(temp!=0) {
			rev=rev*10+temp%10;
			temp/=10;
		    }
		if(n==rev){
		    System.out.println("1");
		   x=1;
		if(x==1){
		    System.out.println("polindrome");
		}else{
		    System.out.println("not a polindrome");
		}
		}else{
		    System.out.println("0");
		    p=0;
		    if(p==0){
		        System.out.println("not a polindrome");
		    }
		}
		}else if(n<=0){
		    System.out.println("-1");
		    y=-1;
		    if(y==-1){
		        System.out.println(" the given number is -ve kindly provide the +ve number only");
		    }
		}else{
		    System.out.println("-2");
		    z=-2;
		    if(z==-2){
		        System.out.println("this program can check the operation for the 3 number only.");
		    }
		}
        //display results based on conditions
        
		
		//Close scanner
		
	}
}

===================================================================================================

Write a java program which print the next multiple of 100 for the given number.

Program is determined by the following rules:

 

if the given value is negative or zero, return -1

if the given value is positive, return the next multiple of the given number. Example: if x = 123, return 200.

// import required classes or packages
import java.util.Scanner;
	public class NextMultipleOfHundred{
	    public static void main(String[] args) {
	        Scanner sc = new Scanner(System.in);
	        System.out.print("Enter a number: ");
	        int num = sc.nextInt();
	        if (num <= 0) {
	            System.out.println("Invalid input. Please enter a positive number.");
	            return;
	        }
	        //write a logic to find next multiple of hundred
	        int nextMultipleOf100 = ((num / 100) + 1) * 100;
	        //display results
	        System.out.println("The next multiple of 100 for " + num + " is " + nextMultipleOf100 + ".");
	        	//close scanner
	    }
	}
        

=================================================================================

Write a Program to find prime factors for a given number

access modifier : public
keyword :   static
Return type : String
parameter : int num

if the given  number is less than or equal to 0 return false as a String
else return prime factors as String

package oct_30;

import java.util.Scanner;

public class PrimeFactors {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter the number:");
	int n=sc.nextInt();
	String a=isPrimeFactor(n);
//	if(a=="true") {
//		System.out.println("prime factors are mentioned above");
//	}else {
//		System.out.println("the given  number is less than or equal to 0");
//	}
	System.out.println(a);
	}
public static String isPrimeFactor(int num) {
	int c=0; String result ="";
	if(num<=0) {
		return "false";
	}else {
	for(int i=2;i<=num;i++) {
		if(num%i==0) {
			c = 0;
		for(int j=2;j<=i/2;j++) {
			if(i%j==0)
			{
				c++;
				break;
			}
		}if(c==0) {
			result += i+" ";
		}
		}
			
	}
	return result;
}
}
}
====================================================================================

Write a program to print a pattern by using method?

@@@@@@@@@
@	@
@	@
@	@
@	@
@	@
@@@@@@@@@

access modifier : public
keyword :   static
Return type : void
parameter : int row,int column

and print pattern using printer(row,column);

import java.util.Scanner;

public class PatternusingMethod {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter the no of rows:");
    int r=sc.nextInt();
    System.out.println("Enter the no of columns:");
    int c=sc.nextInt();
    pattern(r,c);
	}
public static void pattern(int row,int column) {
	for (int i = 0; i <= (row-1); i++) {
        for (int j = 0; j <= (column-1); j++) {
            if (i == 0 || i == (row-1) || j == 0 || j == (column-1)) {
                System.out.print("@");
            } else {
                System.out.print(" ");
            }
        }
        System.out.println();
    }
}
}

================================================================================

Write a program to find amstrong between 1 - n numbers 

access modifier : public
keyword :   static
Return type : void
parameter : int number

method name : amstrongPrinter(number)
package oct_30;

import java.util.Scanner;

public class Amstrong {

	public static void main(String[] args) {
		    Scanner sc=new Scanner(System.in);
		    System.out.println("Enter the number:");
		    int number=sc.nextInt();
		    amstrongPrinter(number);
		}
		public static void amstrongPrinter(int n) {
			int sum=0;
			int temp=0;
		 for(int i=1;i<=n;i++){
			 i=temp;
                       while(i
			int x=i%10;
			int y=x*x*x;
			sum+=y;
			i/=10;
		 }
		 if(sum==temp) {
			 System.out.println(temp);
		}
		    
		}
	}
===============================================================

Write a program to print fibbanocci series upto n digits


access modifier : public
keyword :   static
Return type : String
parameter : int num

method name : fibbanocciFinder(num)

package oct_30;

import java.util.Scanner;

public class FibbanocciSeries {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the num:");
		int n=sc.nextInt();
		int num1=0;
		int num2=1;
		for(int i=1;i<=n;i++) {
			int num3=num1+num2;
			System.out.println(num1+" ");
			num1=num2;
			num2=num3;
		}

	}

}

===============================================================

Write a program to print below pattern 

access modifier : public
keyword :   static
Return type : String
parameter : int row,int col

method name : patternCreator(row,col)

1
1 2
1 2 3
1 2 3 4
1 2 3 4 5

return this pattern and print in main method


package oct_30;

import java.util.Scanner;

public class Pattern1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the no of rows:");
		int row=sc.nextInt();
		System.out.println("Enter the no of columns:");
		int column=sc.nextInt();
		String a=patternCreator(row,column);
		System.out.println(a);
	}
public static String patternCreator(int row,int col) {
	String s="";
	for(int i=1;i<=(row-1);i++) {
		for(int j=1;j<=i;j++) {
			s+=j+" ";
		}
		s+="\n";
	}
	return s;
}
}
==============================================================

Program-1
Define a method which returns the sum of digits of the given two digit number.
Write the method with the following specifications: 
Name of the BLC class:TwoDigitsSum
Name of method: getSumOfDigits()
Access Modifier : public, static
Arguments: one argument of type integer
Return type: an integer value
For example,
If the given value is 34, return 7

Create an ELC class Main to test the application

elcclass:
---------------
package oct_30;

import java.util.Scanner;

public class ElcClass1 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("enter the num:");
		int num = sc.nextInt();
		int res = TwoDigitsSum.getSumofDigits(num);
		System.out.println(res);
	}
}

blcclass
--------
package oct_30;

public class TwoDigitsSum {
	public static int getSumofDigits(int n){
		return ((n%10)+(n/10));	
	}
}
==================================================================
Program-2 
Define a method which returns the difference of digits of the given two digit number.
Write the method with the following specifications: 
Name of the BLC class:TwoDigitsDifference
Name of method: getDiffOfDigits()
Access Modifier : public, static
Arguments: one argument of type integer
Return type: an integer value
For example,
If the given value is 83, 8 - 3 return 5.  If x = 38, 3 - 8 return -5.

Create an ELC class Main to test the application

elcclass:
---------------
package oct_30;

import java.util.Scanner;

public class ElcClass1 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.print("enter the num:");
		int num = sc.nextInt();
		int res = TwoDigitsSum.getSumofDigits(num);
		System.out.println(res);
	}
}

blcclass
--------
package oct_30;

public class TwoDigitsSum {
	public static int getSumofDigits(int n){
		return ((n%10)-(n/10));	
	}
}

======================================================================

Program-3
Define a method which returns the next multiple of 100 for the given number.
Write the method with the following specifications: 
Name of the BLC class:NextMultipleOfHundred
Name of method: getNextMultipleOfHundred()
Access Modifier : public, static
Arguments: one argument of type integer
Return type: an integer value
For example,
If the given value is 123, return 200.

Create an ELC class Main to test the application

elcclass
----------
package oct_30;
import java.util.Scanner;
public class Elc2NextMultiple {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        System.out.println("Enter the num:");
        int num=sc.nextInt();
        int res=NextMultipleOfHundred.getNextMultipleOfHundred(num);
        System.out.println(res);
	}

}

blcclass
--------
package oct_30;

public class NextMultipleOfHundred {

	public static int getNextMultipleOfHundred(int n) {
return ((n/100)+1)*100;
}
}
=====================================================

Program-4
Define a method which returns the sum of three rounded numbers. If the right most digit of the number is less than 5, then round off its value to the previous multiple of 10 otherwise if the right most digit of the number is greater or equal to 5, and then round off to the next multiple of 10. 
Write the method with the following specifications: 
Name of the BLC class:RoundedSum
Name of method: sumOfRoundedValues() 
Access Modifier : public, static
Arguments: three argument of type integer
Return type: an integer value 
For example
If a = 23, b = 34, c = 66
   20 + 30 + 70 = 120
Note:Don't use any control statements and looping statements

Create an ELC class Main to test the application


elcclass
--------

package oct_30;

import java.util.Scanner;

public class Elc3RoundedSum {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        System.out.println("Enter three numbers:");
        int num1=sc.nextInt();
        int num2=sc.nextInt();
        int num3=sc.nextInt();
        int res=RoundedSum.sumOfRoundedValues(num1,num2,num3);
        System.out.println(res);

	}

}

blcclass
--------
package oct_30;

public class RoundedSum {
public static int sumOfRoundedValues(int a,int b,int c) {
  int x=((a/10)+(a%10)/5)*10;
  int y=((b/10)+(b%10)/5)*10;
  int z=((c/10)+(c%10)/5)*10;
  return x+y+z;
}
}

===================================================================
1)write a java program to find armstrong numbers from 1 to n

methods:public static boolean isArmstrong(int num);
	public static void printArmstrong(int num);

note:call isArmstrong method from printArmsttrong method

package oct_30;

import java.util.Scanner;

public class Elc4classAmstorng {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        System.out.println("Enter the num:");
        int num=sc.nextInt();
        Blc4AmstrongNumbers.printAmstrong(num);
	}

}
---------
package oct_30;

public class Blc4AmstrongNumbers {
public static boolean isAmstrong(int num) {
if(num>=0&&num<=9) {
	return false;
}else {
	int c=0;
	int temp=num;
	while(temp!=0) {
		c++;
		temp/=10;
	}
	int temp2=num,sum=0;
	while(temp2!=0) {
		sum+=(int)Math.pow(temp2%10, c);
		temp2/=10;
	}
	return sum==num;
}
}
public static void printAmstrong(int num) {
	for(int i=1;i<=num;i++) {
		boolean b=isAmstrong(i);
		if(b==true) {
			System.out.println(i+"is Amstrong number");
		}
	}
}
}
===============================================================

write a java program to find palindrome numbers from 1 to n

methods:public static boolean isPalindrome(int num);
	public static void palindromePrinter(int num);

note:call isPalindrome method from palindromePrinter method

elcclass
-----------

package oct_30;

import java.util.Scanner;

public class Elc5Polindrome {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
        System.out.println("Enter the num:");
        int num=sc.nextInt();
        Blc5PolindromeNumber.palindromePrinter(num);
	}
}

blcclass
--------

package oct_30;

public class Blc5PolindromeNumber {
	public static boolean isPolindrome(int num) {
		int temp=num;
		int rev=0;
		if(num<=0) {
			return false;
		}
		else {
			while(temp!=0) {
			rev=rev*10+temp%10;
			temp/=10;
			}
		}
			return rev==num;

		}
		public static void palindromePrinter(int num) {
			for(int i=1;i<=num;i++) {
				boolean b=isPolindrome(i);
				if(b==true) {
					System.out.println(i+"is polindrome number");
				}
			}
		}
}
==============================================================================

write a java program to find factors from 1 to n

methods:public static String findingFactors(int num);
	public static void printingFactors(int num);

note:call findingFactors method from printingFactors method

elcclass
--------

package oct_30;

import java.util.Scanner;

public class Elc6Factors {

	public static void main(String[] args) {
			Scanner sc=new Scanner(System.in);
	        System.out.println("Enter the num:");
	        int num=sc.nextInt();
	        Blc6Factors.printingFactors(num);
		}
	}

blcclass
---------
package oct_30;

import java.util.Scanner;

public class Blc6Factors {
	public static String findingFactors(int num) {
		String s="";
		for(int j=1;j<=num;j++) {
			if(num%j==0) {
				s+=j+" ";
			}
		}
		return s;
	}
	public static void printingFactors(int num) {
		for(int i=1;i<=num;i++) {
			String str=findingFactors(i);
			System.out.println(i+"factors are"+str);
		}
	}
}

=====================================================================

write a java program to print the given pattern
0 
0 1
0 1 1
0 1 1 2
0 1 1 2 3

methods:public static String patternCreator(int row);
	public static void patternPrinter(int row);

note:call patternCreator method from patternPrinter method

elcclass
--------
package oct_30;

import java.util.Scanner;

public class Elc7Pattern2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
        System.out.println("Enter the no of rows:");
        int num=sc.nextInt();
        Blc7pattern2.patternPrinter(num);
	}
	}

blcclass
--------

package oct_30;

public class Blc7pattern2 {
public static String patternCreator(int row) {
	String s="";
	for(int i=0;i<=row;i++) {
		int num1=0;
		int num2=1;
		for(int j=0;j<=i;j++) {
			int num3=num1+num2;
			s+=num1+"";
			num1=num2;
			num2=num3;
		}
		s+="\n";
	}
	return s;
}
public static void patternPrinter(int row) {
	int temp=row;
	String str=patternCreator(temp);
	System.out.println(str);
}
}
==========================================================
Write a program to find the area of the circle on the following criteria

Explanation:
Create a BLC(Business Logic Class) called Circle which contains a static method getArea()
Name of the Method 		:	getArea()
Parameter of the Method		:	one parameter of type double(radius)
Return type of the Method	:	String
Access modifier of the Method	:	public, static

Write the logic inside the method based on the following criteria
a) If parameter value is 0 or Negative it should return 0
b) If parameter value is positive it should print area of circle in two digits after decimal value example (12.89)

Create another class Test in the same package which is ELC class (contains main method) to test the application. Don’t create the Object in the Test class, call the static method getArea()
of Circle class  and print the output in the main method.

Note :- Both the classes must be declared with public access modifier

elcclass
--------
package oct_30;

import java.util.Scanner;

public class Elc8AreaOfCircle {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
        System.out.print("Enter the radius:");
        double num=sc.nextDouble();
        String str=Blc8Circle.getArea(num);
        System.out.println(str);
	}
}

blcclass
--------

package oct_30;

public class Blc8Circle {
public static String getArea(double r) {
	//String s="";
	if(r<=0) {
		//s+=0;
		return "0";
	}else {
		double pi=3.14;
		double area=2*pi*r*r;
		//s+=area;
		return String.format("%.2f",area);
	}
}
}


=====================================================================

Write a program to print the Student data in the given format

Explanation:
Create a BLC(Business Logic Class) class Student which contains a static method getStudentDetails()

Name of the Method 		:	getStudentDetails()
Parameter of the Method		:	3 parameters roll ,name and fees of type int , String and double respectively.
Return type of the Method	:	String
Access modifier of the Method	:	public and static

Create another class Test in the same package which is ELC class (contains main method) to test the application. Don’t create the Object in the Test class, call the static method getStudentDetails() which should print the Student data in the following format
[ Roll is :101, Name is :Ravi, Fees is :14000.9]

Note :- Both the classes must be declared with public access modifier

elcclass
--------
package oct_30;

import java.util.Scanner;

public class Elc9StudentData {

	public static void main(String[] args) {
			Scanner sc=new Scanner(System.in);
	        System.out.print("Enter the roll no,name and fees:");
	        int rollno=sc.nextInt();
	        String name=sc.nextLine();
	        sc.nextLine();
	        double fees=sc.nextDouble();
	        String str=Blc9StudentData.getStudentDetails(rollno,name,fees);
	        System.out.println(str);
	}

}

blcclass
--------
package oct_30;

public class Blc9StudentData {
public static String getStudentDetails(int roll,String name,double fees) {
	return "Roll No:"+roll+", Name is:"+name+",Fees is:"+fees;
}
}
============================================================

Write a program to check whether a number is even or odd

Explanation:
Create a BLC(Business Logic Class) class EvenOrOdd which contains a static method isEven()

Name of the Method 		: isEven()
Parameter of the Method		: one parameter of type integer
Return type of the Method	: boolean
Access modifier of the Method	: public

Write the logic inside the method isEven () to check number is even or odd

Create another class Test in the same package which is ELC class (contains main method) to test the application. Don’t create the Object in the Test class, call the static method isEven()
of EvenOrOdd class  to return number is even or odd and print the result in main method.

Note :- Both the classes must be declared with public access modifier

elcclass
---------
package oct_30;

import java.util.Scanner;

public class Elc10EvenorOdd {
	public static void main(String[] args) { 
	Scanner sc=new Scanner(System.in);
    System.out.print("Enter the number:");
    int num=sc.nextInt();
    boolean a=Blc10EvenorOdd.isEven(num);
    if(a) {
    System.out.println(num+" " +"is even");
}else {
	System.out.println(num+" "+"is odd");
}
}
}

blcclass
--------
package oct_30;

public class Blc10EvenorOdd {
public static boolean isEven(int n) {
	return n%2==0;
}
}
==============================================

Write a program to check accept a number and check whether it is a 'Spy Number' or not. (A number is spy if the sum of its digits equals the product of its digits.)
Example: Sample Input: 1124
Sum of the digits = 1 + 1 + 2 + 4 = 8
Product of the digits = 1*1*2*4 = 8
Explanation:
Create a BLC(Business Logic Class) class called Calculate which contains a static method checkSpyNum ()

Name of the Method 		: checkSpyNum ()
Parameter of the Method		: one parameter of type integer
Return type of the Method	: void
Access modifier of the Method	: public

Create another class Test in the same package which is ELC class (contains main method) to test the application. Don’t create the Object in the Test class, call the static method checkSpyNum ()
of Calculate class.

Note :- Both the classes must be declared with public access modifier


elcclass
---------
package oct_30;

import java.util.Scanner;

public class Elc11SpyNumber {
		public static void main(String[] args) { 
			Scanner sc=new Scanner(System.in);
		    System.out.print("Enter the number:");
		    int num=sc.nextInt();
		    Blc11Calculate.checkSpyNum(num);
		}
	}

blcclass
--------
package oct_30;

public class Blc11Calculate {
public static void checkSpyNum(int n) {
	int temp=n;
	int sum=0,mul=1;
	while(n!=0) {
		int res=n%10;
		 sum+=res;
		 mul*=res;
		n/=10;
	}
	if(sum==mul) {
		System.out.println(temp+"is spy number");
	}else {
		System.out.println(temp+"is not a spy number");
	}
}
}
=======================================================================


public static boolean isTwistedPrime(int n) {
		int c=0;
		int temp=n;
		int rev=0;
		for(int i=2;i<=n;i++) {
		if(n%i==0) {
			c++;
		}
		}	
		while(temp!=0) {
			rev=rev*10+temp%10;
			temp/=10;
		}
		int ct=0;
		for(int i=2;i<=n;i++) {
			if(rev%i==0) {
				ct++;
	}
	}
		return (ct==1&&c==1);
	}
	}

====================================================

import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter a number:");
		int num=sc.nextInt();
		boolean res=TwistedPrime .isTwistedPrime(num);
		if(res) {
			System.out.println("the given number "+num+"is Twisted prime");
		}
		else
		{
			System.out.println("not twisted prime");
		}
	}
}
[2:20 pm, 11/11/2023] Akshitha: public class TwistedPrime {
	public static boolean isTwistedPrime(int num) {
		int c = 0;
		int rev = 0;
		int count = 0;
		for (int i = 1; i < num; i++) {
			if (num % i == 0)
				c++;
		}
		if (c == 1) {
			while (num!= 0) {
				rev = rev * 10 + num % 10;
				num /= 10;
			}
			for (int i = 1; i < rev; i++) {
				if (rev % i == 0) {
					count++;
				}
			}
			if(count==1) {
				return true;
			}
		}
		return false;
	}
}

=======================================================================

write a java program to find Adam Number

methods:public static boolean isAdamNumber(int num); 

12 = 12^2 = 144
21 = 21^2 =441
144==(441(rev))
12 is an adam number
----------------------------------------

(ECL)
package adamnum;

import java.util.Scanner;

public class AdamMain {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter a number");
	int num=sc.nextInt();
	boolean res=AdamNum.isAdamNumber(num);
	if(res) {
		System.out.println("adam");
	}
	else {
		System.out.println(" not adam");
	}
}
}
----------------------------
(BCL)
public class AdamNum {
	public static boolean isAdamNumber(int num) {
		int rev=0;
		int revsq=0;
        int sq=(int)Math.pow(num,2);
    	 while(num!=0) {
    	rev=rev*10+num%10;
    	num/=10;
    	 }
    	 int sq1=(int)Math.pow(rev,2);
    	 while(sq1!=0) {
    		 revsq=revsq*10+sq1%10;
    		 sq1/=10;
    	 }
  
    	 if(sq==revsq) {
    		 return true;
    	 }
    	 else {
    		 return false;
    	 }
}
------------------------
write a java program to find number is an neon number

methods:public static boolean isNeonNumber(int num);

// 9 = 9*9 = 81 = (8+1) = 9 , so 9 is a neon number

------------
(ECL)
import java.util.Scanner;

public class NeonMain {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter a number:");
	int a=sc.nextInt();
	boolean res=NeonNum.isNeonNumber(a);
	if(res) {
		System.out.println("neon");
	}
	else
	{
		System.out.println(" not neon");
	}
}
}
-----------------
(BCL)
public class NeonNum {
public static boolean isNeonNumber(int num) {
		int prod=num*num;
		int sum=prod%10+prod/10;
	if(num==sum) {
		return true;
	}
	else {
		return false;
	}
}
}
========================================

write a java program to print the given pattern

E D C B A
  D C B A 
    C B A 
      B A 
	A

methods:public static String patternCreator(int row);
	public static void patternPrinter(int row);

note:call patternCreator method from patternPrinter method

o/p:
public class PatternRevAlpha {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter size");
	int size=sc.nextInt();
	for(int i=1,k='E';i<size;i++,k--) {
		int p=k;
		for(int j=1;j<=i;j++) {
			System.out.print(" ");
		}
		for(int j=i;j<=size;j++) {
			System.out.print((char)p--);
		}
		System.out.println();
	}
}
}

my own pgm:
package oct_30;

import java.util.Scanner;

public class Pattern6 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the num:");
		int n=sc.nextInt();
		patternPrinter(n);
	}
	public static void patternPrinter(int row) {
		String str=patternCreator(row);
		System.out.println(str);
		
	}
	public static String patternCreator(int r) {
		String s="";
		for(int i=1;i<=r;i++) {
			for(int k=1;k<=i;k++) {
				s+=" ";
			}
			char a=((char)(70-i));
			for(int j=i;j<=r;j++) {
				s+=a--;
			}
			s+="\n";
		}
		return s;
	}

}


===================================================================        *
===========================================================================      *
=================================================================================     *
=======================================================================================   *

MCQ
Answered: 0 / 20
Score: 0 / 0
Question: 1
What is the Output of the following program?

public class Operator
{
public static void main(String[] args)
{
int a=20, b=10;
if((a>b)&&(–b <12))
{
System.out.println(b);
}
System.out.println(a);
}
}



a.9
 20


b.20
 9


c.20
 10


d.10
  20
anw:a
--------------------------------------------

Question: 2
What is the output of the following code?
public class Operator
{
public static void main(String args[])
{
double a = 1 + 9;
double b = a / 6;
int c = 1 + 9;
int d = c / 8;
System.out.print(b + ” ” + d);

}
}



1 1


2


2.6


1.666 1(A)
------------------------------

Question: 3
What is the output of the following code?
public class Operator
{
public static void main(String args[])
{
double a = 892.457;
int b = 10;
a = a % 10;
b = b % 10;
System.out.println(a + ” ” + b);
}
}



0 2


2 0


2.457 0(A)


0 2.457
----------------------------

Question: 4
What is the output of the following code
public class Test2 {
public static void main(String[] args) {
int a = 21;
int b = a;
System.out.println(b);
b += a;
System.out.println(b);
a *= a;
System.out.println(a);
}
}



21
21
21*21


21(A)
42
441


21
21
42


21
42
21

Question: 5
What is the output of the following program?
public class Operator
{
static int operate(int a,int b)
{
return (a * b);
}
static float operate(float a,float b)
{
return (a / b);
}
public static void main(String[] args) {
int x = 11, y = 23;
float n = 9, m = 4;
System.out.print(operate(x, y)+”\t”);
System.out.println(operate(n, m));
}
}



2.25 253


2.25
253


253
2.25


253 2.25(A)
------------------------

Question: 6
What is the output of the following program?
public class Test2 {
public static void main(String[] args) {
int x = 0;
int y = 10;
do {
y–;
++x;
}
while (x < 5);
System.out.print(x + “,” + y);
}
}



5,5(A)


6,5


5,6


6,6
--------------------------------

Question: 7
What is the output of the following program?

public static void main(String args[])
{
int roll;
System.out.println(roll);
}



Runtime error


0


null


Compiler error(A)
------------------------------------------

Question: 8
Which of the following are valid variable declarations?



float = 10.5f;


boolean isOn = “true”;


char gender = ‘F’;(A)


int value = 20
--------------------------------

Question: 9
What is the output of the following program?

public class Test {
public static void main(String[] args) {
int i = 0;
i = i++ + i;
System.out.println(“I = “+i);
}
}



I = 1(A)


I = 0


I = 2


Compiler error
----------------------------

Question: 10
What is the output of the following program?

class Test {
public static void main(String[] args) {
int d, a = 2, b = 2;
d = a++ + ++b;
System.out.print(d+” “+a+” ” +b);
}
}



6 2 2


6 3 3


5 3 3(A)


5 2 2
--------------------------

Question: 11
What is the output of the following program?

class Test {
public static void main(String[] args) {
int a = 1, b = 1, c;
c = a++ + b;
System.out.println(“a=”+a+” b=”+b+” c=”+c);
}
}



a=2 b=1 c=3


a=2 b=1 c=2(A)


a=1 b=1 c=2


a=1 b=2 c=2
--------------------------
Question: 12
What is the numerical range of a char in Java?



-128 to 127


0 to 256


0 to 32767


0 to 65535(A)
-------------------------

Question: 13
Which of these coding types is used for data type characters in Java?



ASCII


ISO-LATIN-1


UNICODE(A)


None of the mentioned
-----------------------------------

Question: 14
Find the output of the following code
public class Test2 {
public static void main(String[] args) {
int Integer = 24;
char String = ‘I’;
System.out.print(Integer);
System.out.print(String);
}
}



24I(A)


Compiler error


24
I


None of the above
---------------------------------

Question: 15
Find the output of the following Program

class Test
{
public static void main(String [] args)
{
char ch = ‘\u0041’;
System.out.println(ch);
}
}



1


a


B


A(A)
-------------------------------------

Question: 16
Which of these values can a boolean variable contain?



true(A)


“false”


0


1
---------------------------------

Question: 17
Find the output of the following program.

public class Test
{
public static void main(String[] args)
{
byte x = 127;
x++;
x++;
x++;
System.out.print(x);
}
}



126


130


-128


-126(A)
-----------------------------

Question: 18
Find the output of the following program.
public class Test
{
static int i =5;
public static void main(String… args)
{
System.out.println(i++);
System.out.println(i);
System.out.println(++i);
System.out.println(++i+i++);
}
}



6
6
7
16


5(A)
6
7
16


6
6
7
17


6
6
8
16
----------------------------

Question: 19
Find the output of the following program.
public class Test
{
public static void main(String[] args)
{
int i = 7;
int j = -9;
double x = 72.3;
double y = 0.34;
System.out.println(“i is ” + i);
System.out.println(“j is ” + j);
System.out.println(“x is ” + x);
System.out.println(“y is ” + y);
}
}



i is 7
j is -9
x is 72
y is 0


Compiler error


i is 7 (A)
j is -9
x is 72.3
y is 0.34


i is 7
j is 0
x is 72.3
y is 0.34
---------------------------------

Question: 20
Find the output of the following program.

public class Test
{
public static void main(String[] argv)
{
final int x = 5;
int y = x++;
System.out.println(x+” “+y);
}
}



Compiler error(A)


5 6


6 6


5 5

=====================================

What are the types of Integer Literals in Java?



A) Decimal Literals


B) Octal and Hexadecimal Literals


C) Binary Literals


D) All the above(A)
----------------------------------

Question: 2
Choose correct examples of decimal literals in Java.



A) int a = 12345;


B) int a = 12_3__5;


C) long a = 987____654_3__21L;


D) All the above(A)
--------------------------------

Question: 3
Choose the correct example of Octal Literal in Java?



A) short = 0564;


B) int = 076__45_2;


C) int = 0______11;


D) All the above(A)
----------------------------------
Question: 4
What is the precision after decimal points offered by a float data type in Java?



A) 3 digits


B) 6 digits(A)


C) 10 digits


D) 15 digits
-----------------------------

Question: 5
What will be the output of the following Java code?

class CharIncrement 
{
    public static void main(String args[]) 
    {
        char c1 = 'D';
        char c2 = 84;
        c2--;
        c1++;
        System.out.println(c1 + " "  + c2);
    } 
}


A) E U


B) U E


C) E S(A)


D) S E

Question: 6
What is the output of this Java snippet?
int a = 0b111;
System.out.println(a);



A) 111


B) 7(A)


C) 8


D) Compiler error

Question: 7
Which literal is used to Create a Values of the integral types byte, short, int, and long ?



A.Long


B.Byte


C.Double


D.Integer(A)
---------------------------------------

Question: 8
In java programming, You can create binary literal in ____.



A.Java SE 6 and later


B.Java SE 7 and later(A)


C.Java SE 5 and later


D.Java SE 1 and later

Question: 9
What does the expression float a = 35 / 0 return?



A) 0


B) Not a Number


C) Infinity(A)


D) Error

Question: 10
Which of the following is a valid Java hexadecimal literal?



A) 10


B) 0b1010


C) 0x10(A)


D) “A”

Question: 11
Which of the following is a valid Java floating-point literal in scientific notation?



A) 3.14


B) 6.02e23(A)


C) 10L


D) “2.718”

Question: 12
public class Test {
public static void main(String[] args) {
int a = 128;
byte b= (byte)a;
System.out.println(b);
}
}



A. 128


B.-128(A)


C. 0


D. 127

Question: 13
public class Test {
public static void main(String[] args) {
int a = -200;
byte b= (byte)a;
System.out.println(b);
}
}



A. -200


B. 72(A)


C. 56


D. -72

Question: 14
public class Test {
public static void main(String[] args) {

    double d = 122.00000;
    char ch = (char)d;


    System.out.println(ch);
}
}



A. We can’t convert double to char so C.E


B. Z


C. z(A)


D. 122

Question: 15
class Sample3{
public static void main(String[] args)
{
int i = 100;
long l = i;
float f = l;

System.out.println(“Long value ” + l);
System.out.println(“Float value ” + f);
}
}



A. 100 100.0(A)


B. 100 100


C. Compile time error


D. 100

Question: 16
Automatic type conversion is java takes place when



A.Two types are compatible and size of destination is shorter that source type


B.Two types are compatible and size of destination is equal that source type


C.Two types are compatible and size of destination is larger that source type(A)


D.All of the above

Question: 17
public class Test {
public static void main(String[] args) {

System.out.println(07);
System.out.println(012);
}
}



A. 7 12


B. 7 10(A)


C. 07 012


D. 7 3

Question: 18
class ThinkWisely{
public static void main(String[] args) {
int i;
for(i=0;i++<=10;)
System.out.println(i);
}
}



A. Error


B. 1


C. 12345678910


D. 1234567891011(A)

Question: 19
Integer literal containing value “F” comes under ____ system.



A.Binary Number


B.Hexa Decimal Number(A)


C.None of these


D.Octal Number

Question: 20
What is the default character literal value assigned to a char variable in Java?



A) ‘a’


B) ‘0’


C) ‘\u0000’(A)


D) 0

Question: 21
Which of these can be return by the operator &?



A)Integer


B)Boolean


C)Character


D)Integer or Boolean(A)

Question: 22
Which of these can not be used for a varriable name in java?



A)identifier


B)keyword(A)


C)identifier & keyword


D)none of the mentioned

Question: 23
An Octal number is Java is represented with a leading ____?



A) O (Alphabet)


B) 0 (ZERO)(A)


C) 0x


D) 0X

Question: 24
Underscore symbols in literal numbers are introduced with which version of Java?



A) JDK 5(A)


B) JDK 6


C) JDK 7


D) JDK 8

Question: 25
Java uses UTF-16 Unicode format to represent characters. What is UTF?



A) Universal Transcript Format


B) Universal Transformation Format(A)


C) Universal Technology Format


D) None of the above

Question: 26
Which of the following is the correct syntax to create a variable in Java?



A. var name;


B. int name;(A)


C. var name int;


D. All of these

Question: 27
public class Main {
public static void main(String arg[]) {
int i;
for (i = 1; i <= 12; i += 2) {
if (i == 8) {
System.out.println(i);
break;
}
}
}
}



A. 1


B. No output(A)


C. 8


D. 1357911

Question: 28
public class Test {

public static void main(String[] args) {
    for(int i = 0; i < 5; i++) {
        System.out.print(i + ' ');
    }
}
}



A. 3233343536(A)


B. No Output


C. 00000


D. 43444546

Question: 29
public class Test {

public static void main(String[] args) {
    for(int i=0; 0; i++) {
        System.out.println("Hello World!");
    }
}
}



A)error


B)compilation error(A)


C)Hello World!


D)0

Question: 30
Which of the following declarations does not compile?



A. double num1, int num2 = 0;(A)


B. int num1, num2;


C. int num1, num2 = 0;


D. int num1 = 0, num2 = 0;

============================================================

 WRITE A PROGRAM TO PRINT "HELLO I AM JAVA PROGRAMMER,THIS MESSAGE IS GENERATED BY STATIC METHOD CALLS" .

ACCESSMODIFIER - PUBLIC STATIC 
RETURN TYPE - STRING

hello() -> returns "HELLO";
programmer() -> returns " I AM JAVA PROGRAMMER";
generated() -> returns ",THIS MESSAGE IS GENERATED BY STATIC METHOD CALLS";

CALL THIS METHODS ONE BY ONE AND PRINT THE RESULT...

o/p:

package oct_30;

public class MessagePrinting {

	public static void main(String[] args) {
	String a=hello();
	String b=programmer();
	String c=generated();
	System.out.println("\""+a+" "+b+" "+c+"\"");
	}
public static String hello() {
	return "HELLO";
}
public static String programmer() {
	return "I AM JAVA PROGRAMMER";
}
public static String generated() {
	return "THIS MESSAGE IS GENERATED BY STATIC METHOD CALLS";
}
}
===========================================================



2) WRITE A JAVA PROGRAM FIND NUMBER IS HAPPY NUMBER OR NOT

ACCESSMODIFIER - PUBLIC STATIC 
RETURN TYPE - BOOLEAN
METHOD NAME - isHappyNumber(int num)

EX -> 13 -> 1^2 + 3^2 -> 10 -> 1^2 + 0^2 -> 1 (FIND TILL DIGITS BECOME SINGLE)

o/p:
package oct_30;

import java.util.Scanner;

public class HappyNumber {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("Enter the num:");
    int num=sc.nextInt();
    if(isHappyNumber(num))
    	System.out.println("Happy number");
    else
    	System.out.println("Unhappy number");
}
public static boolean isHappyNumber(int n) {
	int sum=0;
	while(n!=0) {
		int sqr=(int)Math.pow(n%10, 2);
		sum+=sqr;
		n/=10;
	if(sum>9&&n==0) {
		n=sum;
		sum=0;
	}
	else if(sum!=1&&n==0){
		return false;
	}
	}
return sum==1;
}
}
=============================================================
3) WRITE A JAVA PROGRAM TO FIND PRODUCT OF TWO NUMBERS USING RUSSIAN MULTIPLICATION

ACCESSMODIFIER - PUBLIC STATIC 
RETURN TYPE - INT
METHOD NAME - multiplication(int num)

====================================================
4) WRITE A JAVA PROGRAM TO FIND PRONIC NUMBER WHICH IS THE PRODUCT OF TWO CONSECUTIVE NUMBER

ACCESSMODIFIER - PUBLIC STATIC 
RETURN TYPE - STRING
METHOD NAME - isPronic(int num) (N*(N+1))

o/p:

package oct_30;

import java.util.Scanner;

public class PronicNumber {
public static String multiplication(int num) {
for(int i=1;i<num;i++) {
	if(i*(i+1)==num) {
		return "Pronic";
	}
}
return "Not a Pronic";
}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    String str=multiplication(n);
	    	System.out.println(str);
	}

}

============================================================

5)WRITE A JAVA PROGRAM TO PRINT BELOW PATTERN

	*
       * *
      * * *
     * * * * 

ACCESSMODIFIER - PUBLIC STATIC 
RETURN TYPE - VOID
METHOD NAME - patternPrinter(int size)

o/p:

package oct_30;

import java.util.Scanner;

public class Pattern7 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the num:");
		int n=sc.nextInt();
		patternPrinter(n);
	}
	public static void patternPrinter(int r) {
		for(int i=1;i<=r;i++) {
			for(int k=i;k<r;k++) {
				System.out.print(" ");
			}
			for(int j=1;j<=i;j++) {
		System.out.print("* ");
			}
			System.out.println();
		}

	}

}

===========================================================


MCQ
Answered: 20 / 20
Score: 20 / 20
Question: 1
An expression involving byte, int literal numbers is promoted to which of these?



a. byte


b. long


c. int(A)


d. float

Question: 2
What is the range of data type short in Java?



a. -128 to 127


b. -32768 to 32767(a)


c. -2147483648 to 2147483647


d. None of the mentioned

Question: 3
Which of these operators can skip evaluating right hand operand?



a. !


b. |


c. &


d. &&(a)

Question: 4
Find the output of the following

class HelloWorld
{
public static void main(String[] args)
{
int i = 0;

    int j = i++ + i;

    System.out.printf("%d\n", j);

}
}



0


2


3


1(a)

Question: 5
What is the range of data type int in Java?



a. -128 to 127


b. -32768 to 32767


c. -2147483648 to 2147483647(a)


d. None of the mentioned

Question: 6
Find the output of the following

public class Test
{
public static void main(String[] args)
{
int a = 20, b=10;

if( (a < b) && (++b < 20) )
{
System.out.println(“Logical AND “);
}
else
{
System.out.println(“b value is : “+b);
}
}

}



b value is : 10(a)


b value is : 11


b value is : 12


b value is : 9

Question: 7
Find the output of the following
public class Test
{
public static void main(String[] args)
{
int a = 20, b=10;

    if((a<b) & (++b < 20))
{
   System.out.println("Boolean AND ");
}
else
{
    System.out.println("b value is : "+b);
}
}
}



b value is : 10


b value is : 11(a)


b value is : 12


None of the above

Question: 8
Find the output of the following

public class Test
{
public static void main(String[] args)
{
int z = 5;
if(++z > 5 || ++z > 6) //Logical OR
{
z++;
}
System.out.println(z);

}
}



5


8


7(a)


9

Question: 9
Find the output of the following

public class Test
{
public static void main(String[] args)
{
int z = 5;
if(++z > 5 | ++z > 6) //Boolean OR
{
z++;
}
System.out.println(z);

}
}



5


8(a)


7


9

Question: 10
Find the output of the following
public class Test1
{
public static void main(String args[])
{
char c;
int i;
c = ‘A’;
i = c;
c = i + 1;
c++;
System.out.println(c);
}
}



A


B


C


Compiler error(a)

Question: 11
Find the output of the following
class Test
{
public static void main(String args[])
{
int i,j,k,l=0;
k = l++;
j = ++k;
i = j++;
System.out.println(i);
}
}



2


1(a)


3


0

Question: 12
Find the output of the following
public class Test
{
public static void main(String args[])
{
int i = 0;
boolean t = true;
boolean f = false, b;
b = (t && ((i++) == 0));
b = (f && ((i+=2) > 0));
System.out.println(i);
}
}



2


3


1(a)


0

Question: 13
Find the output of the following
public class Test
{
public static void main(String args[])
{
int i = 0;
boolean t = true;
boolean f = false, b;
b = (t & ((i++) == 0));
b = (f & ((i+=2) > 0));
System.out.println(i);
}
}



2


3(a)


1


0

Question: 14
Find the output of the following
public class Test
{
public static void main(String args[])
{
int i = 0;
boolean t = true;
boolean f = false, b;
b = (t || ((i++) == 0));
b = (f || ((i+=2) > 0));
System.out.println(i);
}
}



2(2)


3


1


0

Question: 15
Find the output of the following
public class Test
{
public static void main(String args[])
{
int i = 0;
boolean t = true;
boolean f = false, b;
b = (t | ((i++) == 0));
b = (f | ((i+=2) > 0));
System.out.println(i);
}
}



2


3(a)


1


0

Question: 16
Find the output of the following
public class Test
{
public static void main(String args[])
{
int x = 3 & 5;
int y = 3 | 5;
System.out.println(x + ” ” + y);
}
}



1 7(a)


Compiler error


2 8


8 2

Question: 17
Find the output of the following
public class Test16
{
public static void main(String args[])
{
int x = 0, y = 1, z;
if(x)
z = 0;
else
z = 1;

    if(y) 
        z = 2;
    else
        z = 3;
    System.out.println(z);      
}
}



2


3


1


Compiler error(a)

Question: 18
Find the output of the following

public class Test
{
public static void main(String[] argv)
{
byte b = 1;
byte b1 = -b;
System.out.println(b1);
}
}



1


-1


Compiler error(a)


0

Question: 19
Find the output of the following
public class Test
{
public static void main(String[] argv)
{
byte b = 1;
int b1 = -b;
System.out.println(b1);
}
}



1


-1(a)


0


Compiler error

Question: 20
Find the output of the following
public class Test
{
public static void main(String[] argv)
{
byte b = 0;
b += 27;
b = b+28;
b = (byte)(b+29);
System.out.println(b);

  }
}



27


55


84


Compiler error(a)

================================================

Write a java program as per the below instruction?
 
=> Create a BLC class MathNumber which contain two method with different logic to check some different numbers.

method1
========
method name : isNivenNumber
access modifier: public static
return type : boolean
parameter:int number
method description : This method will return true/false if the given number is a Niven number.
Niven number:In mathematics Niven number/Harshad number is an integer that is divisible by the sum of its digits.
Example :
input : 204
output : Niven number

If a number is divisible by its each digits sum the that number is niven number.
2+0+4=6
204 is divided by 6 so that it is a niven number.

package oct_30;

import java.util.Scanner;

public class NivenNumber {
	public static boolean isNivenNumber(int num) {
		int temp=num;
		int sum=0;
		while(temp!=0) {
			sum+=(temp%10);
			temp/=10;
		}
		return num%sum==0;
	}

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    if(isNivenNumber(n))
	    	System.out.println("Niven number");
	    else
	    	System.out.println("Not a niven number");	
	}

}
===================================================================

method2
=======

method name : isTechNumber
access modifier: public static
return type : boolean
parameter : int num
method description : This method will return true/false if the given number is a Tech number
Tech number:A tech number can be tech number if its digits are even and the number of digits split into two number from middle then add these number if the added number’s square would be the same with the number it will called a Tech Number.
note:If the number of digit is odd then it is not a tech number.

input : 2025
output : Not a Tech number

iput : 205
output : Not a Tech number

2025 ===> 20+25=45
45^2=2025


=>   Create a ELC class Test and check the above logic?

o/p:
package oct_30;

import java.util.Scanner;

public class TechNumber {
	public static boolean isTechNumber(int num) {
		int c=0;
		int sqr=0;
		int temp=num;
		while(temp!=0) {
			c++;
			temp/=10;
		}
		if(c%2==0) {
		  int firstHalf=(int)(num/Math.pow(10,c/2));
		  int secondHalf=(int)(num%Math.pow(10,c/2));
		int sum=firstHalf+secondHalf;
		 sqr=sum*sum;
	}
	return sqr==num;
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    if(isTechNumber(n))
	    	System.out.println("tech number");
	    else
	    	System.out.println("Not a Tech number");	
		
	}

}

======================================================

Q2   Write a java program as per the below instruction?

=>  Create a BLC class Pattern inside that class create method drawPattern

method name : drawPattern
access modifier:public static
return type : String 
parameter:int rowColumnSize
method description : In this method you have to return the below pattern in string format

 x       x
  x     x
   x   x
    x x
     x
    x x
   x   x
  x     x
 x       x

=>   Create a ELC class Test and check the above logic?\

package oct_30;

import java.util.Scanner;

public class Pattern2 {
public static String drawPattern(int r) {
	String s="";
	for(int i=0;i<r;i++) {
		for(int j=0;j<r;j++){
		if(i==j||i+j==r-1) {
			s+="x";//System.out.print("x");
		}else {
			s+=" ";//System.out.print(" ");
		}
		}
		s+="\n";//System.out.println();
	}
	return s;
}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the no of rows:");
	    int r=sc.nextInt();
	    String res=drawPattern(r);
	    System.out.println(res);
	}

}
=======================================================================

Ques - 3
-------------
Write a java program as per below instruction..

Create a BLC class UniqueNumber which contains 1 method
mathod name: isUnique
access modifier:public static
return type :boolean
parameter:int num

A number is said to be unique , if the digits in it are not repeated. for example,
12345 is a unique number. 123445 is not a unique number.

Create a ELC class and call the method and test the logic.


input : 12345public
output : Unique Number

iput : 1233453
output : Not a Unique Number

o/p:
package oct_30;

import java.util.Scanner;

public class UniqueNumber {
	public static boolean isUnique(int num) {//1234
		int temp;
		while(num!=0) {
			int r1=num%10;//4
			num/=10;//123
			temp=num;//123
		while(temp!=0) {//123!=0->12!=0->1!=0
			int r2=temp%10;//3->2->1
			if(r1==r2)//4==3->4==2->4==1
				return false;
			temp/=10;//12->1->0
		}
	}
		return true;
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    if(isUnique(n))
	    	System.out.println("Unique number");
	    else
	    	System.out.println("Not Unique number");	
			
	}

}

========================================================================
Write a java program as per the below instruction?

=>  Create a BLC class Pattern inside that class create method drawPattern

method name : drawPattern
access modifier:public static
return type : String 
parameter:int rowColumnSize
method description : In this method you have to return the below pattern in string format
      1 
     212
    32123
   4321234
  543212345
=>   Create a ELC class Test and check the above logic?

o/p:
package oct_30;

import java.util.Scanner; 
public class Pattern5{
		public static void drawPattern(int row) {
			for(int i=1;i<=row;i++) {
				
				/*for(int sp=1;sp<=row-i;sp++)
				{
					System.out.print(" ");
				}*/
				for(int j=i;j<row;j++) {
					System.out.print(" ");
				}
				for(int j=i;j>1;j--)
				{
					System.out.print(j);
				}
				for(int k=1;k<=i;k++) {
					System.out.print(k);
				}
				
				System.out.println();
			}
		}
			public static void main(String[] args) {
				Scanner sc=new Scanner(System.in);
				System.out.print("enter size");
				int row=sc.nextInt();
				drawPattern(row);
			}
		}

my own method:

package oct_30;

import java.util.Scanner;

public class Pattern8 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the num:");
		int n=sc.nextInt();
		patternPrinter(n);
	}
	public static void patternPrinter(int row) {
		String str=patternCreator(row);
		System.out.println(str);
		
	}
	public static String patternCreator(int r) {
		String s="";
		for(int i=1;i<=r;i++) {
			for(int k=i;k<r;k++) {
				s+=" ";
			}
			for(int j=i;j>1;j--) {
				s+=j;
			}
			for(int n=1;n<=i;n++) {
				s+=n;
			}
			s+="\n";
		}
		return s;
	}

}

==================================================================

Q2   Write a java program as per the below instruction?
=>   Create a BLC class Conversion which is having folowing method

method name: toDecimal
accessmodifier : public static
return type : int
parameter : int binary 
method description : This method will take a parameter int binary and convert that into decimal and return that number.
note : during conversion you have to check if that given number must contain only 1 and 0 if not return -1;

Example 

Input 10101

output 21

Input 1010
 
output 10

Input 1012

output -1

o/p:
package oct_30;

import java.util.Scanner;

public class ToDecimal {
public static int toDecimal(int b) {
	int c=0;
	int sum=0;
	while(b!=0) {
		int sqr=(int)Math.pow(2,c++);
		sum+=(b%10*sqr);
		b/=10;
	}
	return sum;
}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the number in binary:");
	    int n=sc.nextInt();
        int res=toDecimal(n);
        System.out.println(res);
	}

}
===============================================
Q3  Write a java program using folowing instruction

Create a BLC class Number which is containing folowing method

method name : getGCD
accessmodifier : public static
return type : int
parameter : int num1,int num2
method description : This method will take two int parameter and return the gcd between two number.

Example 
Input 12 16
Output 4

method name : getGCD
accessmodifier : public static 
return type : int
parameter : int num1,int num2 int num3
method description : This method will take three int parameter and return the gcd between three number.

Example

Input 24 36 42
Output 6

==============================================================

Find the output of the following program

public class Test
{
public static void main(String args[])
{
boolean x = true;
int a;
if(x) a = x ? 1: 2;
else a = x ? 3: 4;
System.out.println(a);
}
}



a)1(a)


b)2


c)3


d)4

Question: 2
Find the output of the following program
public class Test
{
public static void main(String args[])
{
boolean x = false;
int a;
if(x) a = x ? 1: 2;
else a = x ? 3: 4;
System.out.println(a);
}
}



a)1


b)2


c)3


d)4(a)

Question: 3
Find the output of the following program
class Test
{
public static void main(String[] args)
{
int i = 15;
int j = 21;
System.out.println((i < j) ? i++ : j–);
}
}



a)16


b)21


c)15(a)


d)20

Question: 4
Find the output of the following program
public class Test
{
public static void main(String[] args)
{
char a = ‘A’;
int i = 1;
System.out.print(true ? a : 0);
System.out.print(false ? i : a);
}
}



a)AA


b)6565


c)65A


d)A65(a)

Question: 5
Find the output of the following program
class TestMCQ {

public static void main(String[] args) {
    if ((call(3)) || (call(7))) {
        System.out.println("Result is true");
    }
    if ((call(6)) || (call(9))) {
        System.out.println("Result is true");
    }
}

public static boolean call(int i) {
    if (i < 5) {
        System.out.println("i < 5");
        return true;
    } else {
        System.out.println("i>=5");
        return false;
    }
}
}



i < 5(a)
Result is true
i>=5
i>=5


i < 5
Result is true
i>=5
Result is true


i < 5
Result is false
i>=5
Result is false


i>=5
Result is true
i < 5
Result is true

Question: 6
Find the output of the following program
class Test
{
public static void main(String[] args)
{
boolean b=false;
if(b=true)
{
System.out.println(“Assigning not comparing..”);
}
else
{
System.out.println(“Bad”);
}
}
}



a) Bad


b) Assigning not comparing..(a)


c) Compiler error


d) None of the above

Question: 7
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
byte i=10;
byte j = 10;
byte z = i * j;
System.out.println(z);

}
}



a) 100


b) 10


c) 110


d) Compiler error(a)

Question: 8
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
String a = “a”;
int b = 1;
String c = a + b;
System.out.println(c);
}
}



a) 98


b) b


c) a1(a)


d) 97

Question: 9
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
int a = 9;
int b = 65;
int c = -12;
float d = 9.0F;
char e = ‘A’;
System.out.println(a < b);
System.out.println(d < c);
System.out.println(e <= a);
System.out.println(a > d);
System.out.println(c >= e);
}
}



true(a)
false
false
false
false


true
false
false
true
false


true
false
true
false
false


Compiler error

Question: 10
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
char a = ‘A’;
float f = 100.11F;
if (a < f)
{
System.out.println(“a < f”);
}else if(a>f){
System.out.println(“a > f”);
} else {
System.out.println(“Unable to compare”);
}
}
}



a) Unable to compare


b) a > f


c) a < f(a)


d) Compiler error

Question: 11
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
char a = ‘A’;
boolean b = true;
if (a > b)
{
System.out.println(“a > b”);
}
System.out.println(“No Result”);
}
}



a) a > bs


b) No Result


c) a < b


d) Compiler error(a)

Question: 12
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int z = 5;
if(++z > 5 || ++z > 6) z++;
System.out.println(z);
z = 5;
if(++z > 5 | ++z > 6) z++;
System.out.println(z);
}
}



8
8


7(a)
8


7
7


8
7

Question: 13
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int val = 0;
boolean test = (val == 0) || (++val == 2);
System.out.println(“test = ” + test + “\nval = ” + val);
}
}



test = true
val = 1


test = true(a)
val = 0


test = false
val = 0


test = false
val = 1

Question: 14
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
boolean x = true;
int a = 0;
int b = 1;
double c = 2D;
a = x ? b : c;
System.out.println(a);
}
}



a) 0


b) 1


c) 2


d) Compiler error(a)

Question: 15
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int x = 5;
x += 10;
x = x + 10;
System.out.println(x);
}
}



a) 25(a)


b) 15


c) 20


d) 30

Question: 16
Find the output of the following program
public class Test
{
public static void main(String[] args)
{
Integer i = 42;
String s = (i<40)?”life”:(i>50)?”universe”:”everything”;
System.out.println(s);
}
}



a) Life


b) universe


c) everything(a)


d) Compiler error

Question: 17
Find the output of the following program

public class Test
{
public static void main(String[] args)
{
Long x = 42L;
Long y = 44L;
System.out.print(” ” + 7 + 2 + ” “);
System.out.print(foo() + x + 5 + ” “);
System.out.println(x + y + foo());
}
static String foo()
{
return “foo”;
}
}



a) 11 foo47 86foo


b) 72 foo425 86foo(a)


c) 11 foo47
86f00


d) 72 foo425
86foo

Question: 18
Find the output of the following program

class Test
{
public static void main(String args[])
{
String s = new String(“Foo”);
if(s instanceof String)
{
System.out.println(“s is an instanceof a String”);
} else {
System.out.println(“s is not an instanceof a String”);
}
}
}



a) s is an instanceof a String(a)


b) s is not an instanceof a String


c) Compiler error


d) None of the above

Question: 19
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
String s = “123”;
s += “45”;
s += 67;
System.out.println(s);
int b = 2;
System.out.println(“” + b + 3);
}
}



235
5


235
240


1234567(a)
23


1234567
5

Question: 20
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
while(false)
{
System.out.println(“Not Executed!!!”);
}
}
}



a) Not Executed!!!


b) Executed!!!


c) Program terminates without any output


d) Compiler error(a)

===========================================================================

MCQ1
Answered: 30 / 30
Score: 27 / 30
Question: 1
What is the Output of the following program?
public class Test
{
public static void main(String[] args)
{
int a=35, b=29;
if((a>b) && (–b <29))
{
System.out.println(b);
}
System.out.println(a);
}
}



a) 35 28


b) 35


c) 28


d) 28 35(a)

Question: 2
What is the Output of the following program?

public class Test
{
public static void main(String args[])
{
double a = 892.457;
int b = 10;
a = a % 10;
b = b % 10;
System.out.println(a + ” ” + b);
}
}



a) 2.45 0(a)


b) 3.45 1


c) 2.56 0


d) None of these

Question: 3
What is the Output of the following program?

public class Test
{
public static double info(double number) {
if(number<9)
return 1;
else if(number/2==2)
return info(number-1);
else
return (number-5)*info(number-5);
}
public static void main(String[] args) {
System.out.println(info(16));
}
}



a) 66.0(a)


b) 11.0


c) 6.0


d) 26.0

Question: 4
What is the Output of the following program?
public class Test
{
public static void main(String[] args)
{

    int a = 21;
    int b = a;
    System.out.println(b);

    b += a;
    System.out.println(b);

    a *= a;
    System.out.println(a);
  }
}


a) 21 42 440


b) 21 41 440


c) 21 42 441(a)


d) 21 40 441

Question: 5
What is the Output of the following program?
public class Test
{
public static void main(String[] args)
{
double d = 0xFace;
System.out.println(d);
}
}



a) Compilation error


b) 2700.0


c) 64200.0


d) 64206.0(a)

Question: 6
What is the Output of the following program?
public class Test
{
public static void main(String[] args)
{
char c = 0xage;
System.out.println(c);
}
}



a) Compilation error(a)


b) 2700.0


c) 2900.0


d) None of these

Question: 7
What is the Output of the following program?

public class Test
{
public static void main(String[] args)
{
double d = 0499.90;
System.out.println(d);
}
}



a) Compilation error


b) 499.9(a)


c) 0499.90


d) None of these

Question: 8
What is the Output of the following program?

public class Test
{
public static void main(String[] args)
{
double d = 0X789.45;
System.out.println(d);
}
}



a) Compilation error(a)


b) 789.45


c) 27067.89


d) None of these

Question: 9
What is the Output of the following program?

public class Test
{
public static void main(String[] args)
{
char ch = ‘\uffff’;
System.out.println(ch);
}
}



a) Compilation error


b) ?(a)


c) Out of range error


d) None of these

Question: 10
What is the output of the following code?
public class Test
{
public static void main(String[] args)
{
String str = “NareshIT”;
boolean result;
result = str instanceof String;
System.out.println(result);
}
}



a) Compilation error


b) true(a)


c) false


d) None of these

Question: 11
What is the output of the following code?
public class Test
{
public static void main(String[] args)
{
Integer i = 23;
boolean result;
result = i instanceof Number;
System.out.println(result);
}
}



a) Compilation error


b) true(a)


c) false


d) None of these

Question: 12
Find the right answer.

An expression involving byte, int literal numbers is promoted to which of these?



a) int(a)


b) long


c) byte


d) float

Question: 13
What is the output of the following code?
public class Test
{
public static void main(String[] args)
{
int a = 20, b=10;

    if((a<b) & (++b < 20))
{
   System.out.println("Boolean AND ");
}
else
{
    System.out.println(b);
}
}
}



a) Compilation error


b) 10


c) 11(a)


d) None of these

Question: 14
Find the output of the following program

public class Test
{
public static void main(String args[])
{
boolean x = true;
int a;
if(x) a = x ? 1: 2;
else a = x ? 3: 4;
System.out.println(a);
}
}



a) 1(a)


b) 2


c) 3


d) 4

Question: 15
Find the output of the following program

public class Test
{
public static void main(String[] args)
{
char a = ‘A’;
int i = 1;
System.out.print(true ? a : 0);
System.out.print(false ? i : a);
}
}



a) A A


b) A 0


c) A 65(a)


d) 65 65

Question: 16
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
char a = ‘A’;
float f = 100.11F;
if (a < f)
{
System.out.println(“a < f”);
}
}
}



a) Compilation error


b) a < f(a)


c) Program compile without any output


d) None of these

Question: 17
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
boolean x = true;
int a = 0;
int b = 1;
double c = 2D;
a = x ? b : c;
System.out.println(a);
}
}



a) Compilation error(a)


b) 1


c) Program compile without any output


d) None of these

Question: 18
Find the output of the following program

public class Test
{
public static void main(String[] args)
{
Long x = 4L;
Long y = 5L;
System.out.print(” ” + 7 + 2 + ” “);
System.out.print(foo() + x + 5 + ” “);
System.out.println(x + y + foo());
}
static String foo()
{
return “foo”;
}
}



a) 72 foo45 9foo(a)


b) 9 foo9 9foo


c) 9 foo45 45foo


d) none of these

Question: 19
Find the output of the following program

public class Test
{
public static void main(String args[])
{
int i = 0;
boolean t = true;
boolean f = false, b;
b = (t & ((i++) == 0));
b = (f & ((i+=2) > 0));
System.out.println(i);
}
}



a) 2


b) 3(a)


c) 0


d) 1

Question: 20
Find the output of the following program

public class Test
{
public static void main(String args[])
{
int x = 5 & 7;
int y = 3 | 9;
System.out.println(x + ” ” + y);
}
}



a) 4 10


b) 4 11


c) 5 10


d) 5 11(a)

Question: 21
Find the output of the following program

public class Test
{
public static void main(String args[])
{
int x = 5 ^ 7;
System.out.println(x);
}
}



a) 2(a)


b) 4


c) 5


d) 1

Question: 22
Find the output of the following program

public class Test
{
public static void main(String args[])
{
int x = ~9;
System.out.println(x);
}
}

formulae:-(n+1)

a) -8


b) -10(a)


c) -9


d) -11

Question: 23
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
byte b = 0;
b += 7;
b = b+8;
b = (byte)(b+9);
System.out.println(b);
}
}



a) Compilation error(a)


b) 24


c) 15


d) 25

Question: 24
Find the output of the following program

class Test
{
public static void main(String[] args)
{
byte b =2;
switch(b)
{ case 23:System.out.println(“23”);
case 128:System.out.println(“128”);
case 2 :System.out.println(“2”);
default :System.out.println(“default”);
}
}
}



a) 2 default


b) Compilation error(a)


c) default


d) None of these

Question: 25
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
final int a = 1;
final int b= 2;

       int x = 1;
       switch (x) 
       {
             case a:  System.out.print("a");   
             case b:  System.out.print("b");   
       }
 }
}



a) Compilation error


b) a b(a)


c) 1 2


d) None of these

Question: 26
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
long x = 400;
switch( x ) {
case 100 : System.out.println(“One hundred”);break ;
case 200 : System.out.println(“Two hundred”);break ;
case 400 : System.out.println(“Three hundred”);break ;
}
}
}



a) Compilation error(a)


b) Three Hundred


c) One Hundred


d) None of these

Question: 27
Find the output of the following program

class Test
{
public static void main(String args[])
{
final int a=10,b=20;
while(a {
System.out.println(“Hello”);
}
System.out.println(“World”);
}
}



a) Hello


b) World


c) Hello World


d) Compilation error(a)

Question: 28
Find the output of the following program

public class Test
{
static int fun(int a=0, int b,int c)
{
return (a-b+c);
}
public static void main(String[] args)
{
System.out.println(fun(10,10));
}
}



a) 20


b) 10 10


c) -20


d) Compilation error(a)

Question: 29
Find the output of the following program

public class Test
{
public static void main(String args[]) {
int i = 15;
int j = 21;
System.out.println((i < j) ? i++ : j–);
}
}



a) 20


b) 21


c) 16


d) 15(a)

Question: 30
Find the output of the following program
class Test
{
public static void main(String[] args)
{
int b=15, c=5, d=8, e=8, a;
a = b>c ? c>d ? 12 : d>e ? 13 : 14 : 15;
System.out.println(a);
}
}



a) 13


b) 14(a)


c) 15


d) 12

o/p:14
==============================================
Ques - 1
---------
write Program to create a calculator app by using switch case and call methods from switch case and 
takes operator from input 

Example : 

first num : 10 
second num : 20
operator : +

result = 10+20 = 30;

o/p:
package oct_30;

import java.util.Scanner;

public class CalculatorOperatorUsingSwitch {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the first num:");;
		int a=sc.nextInt();
		System.out.print("enter the second num:");
		int b=sc.nextInt();
		System.out.print("enter the operator:");
		char ch=sc.next().charAt(0);
		switch(ch) {
		case '+':System.out.println("additon:"+(a+b));
		break;
		case '-':System.out.println("sub:"+(a-b));
		break;
		case '*':System.out.println("sub:"+(a*b));
		break;
		case '/':System.out.println("sub:"+(a/b));
		break;
		case '%':System.out.println("sub:"+(a%b));
		break;
		}
	}

}
=======================================================
Ques - 2
---------
Write a program to create a bank Account using createBankAccount() method and deposit money into balance varaible and withdraw money from same bankbalance and make sure that money are available while withdrawing 

create static methods of deposit and withdraw with return type void and parameter of double balance 


take one static varaible with datatype double and initialize with 30000....

Example For Taking Static Varaible in java
-------------------------------------------

public class A
{
	static double balance = 3000;// inside the class
}

NOTE : call deposit and withdraw methods from createBankAccount() and perform opertaions on balance varaible.......


package oct_30;

import java.util.Scanner;

public class CreateBankAccount {
	Scanner sc=new Scanner(System.in);
static double balance=3000;
	public static void main(String[] args) {
	System.out.println("*****Bank Account Management******");
	createAccount();
	}
	
public static void createAccount() {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter your name:");
	char name=sc.next().charAt(0);
	System.out.println("enter the account num:");
	int ano=sc.nextInt();
	System.out.println("balance:"+balance);
	System.out.println("1.Create account \n 2.deposit money \n 3.withdraw money \n");
	System.out.println("enter your chioce:");
	int ch=sc.nextInt();
	switch(ch) {
	case 1:deposit();
	case 2:withdraw();
	}
}
public static void deposit() {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the deposited money:");
	int dp=sc.nextInt();
	if(dp<=0) {
		System.out.println("invlid amount to deposit");
	}else {
		System.out.println("deposit is successful");
		balance+=dp;
		System.out.println("balane amount is:"+balance);
	}    
}
public static void withdraw() {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the withdraw money:");
	int wd=sc.nextInt();
	if(wd<=0) {
		System.out.println("invlid amount to deposit");
	}else if(wd>balance) {
		System.out.println("insuffient funds");
	}else {
		System.out.println("withdraw is successful");
		balance-=wd;
		System.out.println("balance amount is:"+balance);
	}
}
}

===================================================================

Ques - 3
--------
Write a java program to find number is a BUZZ Number or Not 

Note : a number which ends with 7 or divisible by 7

example  -> 1017 -> is a buzz 
	    49  -> is a buzz

package oct_30;

import java.util.Scanner;

public class BuzzNumber {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the num:");;
		int n=sc.nextInt();
        if(((n%10)==7)||((n%7)==0))
        	System.out.println("Buzz Number");
        else
        	System.out.println("Not a Buzz Numbeter");
	}

}
==========================================

Q1) Find the output of the following program

class Test 
{
	public static void main(String[] args) 
	{
		for(;false;)
		System.out.println("Hello World!");
	}
}

o/p:error(unreachable code)
=================================================

Q2) Find the output of the following program

public class Test
{ 
  public static void main(String [ ] args) 
   { 
     int a=1;
     switch(a) 
     { 
       default: 
       System.out.println("You choose correct option"); 
     }
   }
}

o/p:you choose correct option
============================================================

Q3) Find the output of the following program
class Test28 
{
    public static void main(String[] args) 
    {
	for(int i=0; i <= 3 ; i++)
    {
    switch(i)
    {
    case 0:
    System.out.println("i is 0");
    break;
    case 1:
    System.out.println("i is 1");
    break;
    case 2:
    System.out.println("i is 2");
    break;
    default:
    System.out.println("i is grater than 2");
    }
}

}
}
o/p:
i is 0
i is 1
i is 2
i is greater than 2
===============================================

Q4) Find the output of the following program
class Test 
{
	public static void main(String[] args) 
	{
		byte b =2;		
		switch(b)
		{	case 23:
			case 128:
		}		
	}
}
o/p:
error
===============================

Q5) Find the output of the following program
public class Test
{
      public static void main(String[] argv)
      {
           final int a = 1;
            int b=  2;
            
           int x = 0;
           switch (x) 
           {
                 case a:     
                 case b:     
           }
     }
}
o/p:no output
=================================================

Q6) Find the output of the following program
public class Test
{
       public static void main(String[] argv)
       {
             int temp = 90;
             switch(temp) 
             {
                  case 80 :  System.out.println("80");
                  case 80 :  System.out.println("80");   
                  case 90 :  System.out.println("90");
                  default :  System.out.println("default");
             }
       }
}
o/p:
error(dublicate values)
===========================================

Q7) Find the output of the following program

public class Test
{
        public static void main(String[] argv)
        {
               int x = 1;
               switch(x) 
               {
                     case 1: 
                     {
                           System.out.println("x is one"); 
                           break;
                     }
                     case 2:  
                     {
                           System.out.println("x is two"); 
                           break;
                     }
                     case 3:  
                     {
                           System.out.println("x is two");  break;
                     }
               }
               System.out.println("out of the switch");
       }
}
o/p:
x is one
out of the switch
===========================================

Q8) Find the output of the following program

public class Test
{
       public static void main(String[] argv)
       {
            int x = 2;
            switch (x) 
            {
                 case 2:
                 case 4:
                 case 6:
                 case 8:
                 case 10: {
                            System.out.println("x is an even number");  break;
                          }
            }
      }
}
o/p:
x is an even number
=========================================

Q9) Find the output of the following program
public class Test
{
       public static void main(String[] argv)
       {
             int x = 2;
             switch (x) 
             {
                   case 2:  System.out.println("2");
                   default: System.out.println("default");
                   case 3: System.out.println("3");
                   case 4: System.out.println("4");
             }
        }
}
o/p:
2
default
3
4
===============================
Q10) Find the output of the following program

public class Test
{
      public static void main(String[] argv) 
      {
           short x = 200;
           switch( x ) {
                  case 100 : System.out.println("One hundred");break ;
                  case 200 : System.out.println("Two hundred");break ;
                  case 33000 : System.out.println("Thirty thousand ");break ;
          }
      }
}
o/p:
error
=====================================

Q11) Find the output of the following program

public class Test
{
      public static void main(String[] argv) 
      {
           long  x = 400;
           switch( x ) {
                  case 100 : System.out.println("One hundred");break ;
                  case 200 : System.out.println("Two hundred");break ;
                  case 400 : System.out.println("Three hundred");break ;
          }
      }
}
o/p:
error
====================================
Q12) Find the output of the following program

public class Test 
{
      public static void main(String[] argv) 
      {
           int j = 3;
           switch (j) 
           {
                case 2:
                      System.out.println("value is two");
                case 2 + 1:
                     System.out.println("value is three");
                     break;
                default:
                     System.out.println("value is " + j);
                     break;
          }
    }
}
o/p:
value is three
======================================
Q13) Find the output of the following program

class Test 
{
        public static void main(String args[]) 
        {    
          final int a=10,b=20;
          while(a<b)
          { 
          System.out.println("Hello");
          }
          System.out.println("World"); 
        } 
}

o/p:
hello
world
======================================

Q14) Which of these selection statements test only for equality?

a) if
b) switch
c) if & switch
d) none of the mentioned
anw:
d)none of the mentioned
=============================


Q15) Find the output of the following program

public class Test
{
      public static void main(String[] argv)
      {
            String s = "xyz";
            switch (s.length()) 
            {
                 case 1:
                       System.out.println("length is one");
                       break;
                 case 2:
                       System.out.println("length is two");
                       break;
                 case 3:
                       System.out.println("length is three");
                       break;
                 default:
                       System.out.println("no match");
           }
      }
}
o/p:
length is three
========================================

Q16) WAP in java to print all even numbers from 1 - 100

package oct_30;

import java.util.Scanner;

public class EvenNumfrom1to100 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    for(int i=1;i<=n;i++) {
	    	if(i%2==0)
	    		System.out.println(i);
	    }
	}

}
========================================================

Q17) WAP in java to print the sum of first hundred natural number
package oct_30;

import java.util.Scanner;

public class EvenNumfrom1to100 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    int sum=0;
	    for(int i=1;i<=n;i++) {
	    	sum+=i;
	    }
	    System.out.println("sum:"+sum);
	    for(int i=1;i<=n;i++) {
	    	if(i%2==0)
	    		System.out.println(i);
	    }
	}

}
=================================================================

Q18) WAP in java to print table of the given number (Number must be taken from Scanner class)

package oct_30;

import java.util.Scanner;

public class EvenNumfrom1to100 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    for(int i=1;i<=10;i++) {
	    	System.out.println(n+"*"+i+"="+(n*i));
	    }
	    int sum=0;
	    for(int i=1;i<=n;i++) {
	    	sum+=i;
	    }
	    System.out.println("sum:"+sum);
	    for(int i=1;i<=n;i++) {
	    	if(i%2==0)
	    		System.out.println(i);
	    }
	}

}
============================================

 
Automatic type conversion is possible in which of the possible cases?

anw:
int to long
========================================================

1)Write a java program to add alternate digits?

methods:
==>getEvenPosSum(int num)
==>getOddPosSum(int num)

Explanation:
input==>123456

odd=2+4+6=12
even=1+3+5=9

AddEvenPos and OddPos
---------------------------
package test;

public class FindEvenSumAndOddSum {
	public static void getEvenPosSum(int n) { // 5778
		int sum = 0, temp = n, digit = 0, c = 0;
		while (temp != 0) {
			digit++;
			temp /= 10;
		}
		while (n != 0) {
			c++;
			int r = n % 10;
			if (digit % 2 == 0 && c % 2 != 0) {
				sum += r;
			}
			if (digit % 2 != 0 && c % 2 == 0) {
				sum += r;
			}
			n /= 10;
		}
		System.out.println("Eve pos sum :" + sum);
	}

	public static void getOddPosSum(int n) {
		int sum = 0, temp = n, digit = 0, c = 0;
		while (temp != 0) {
			digit++;
			temp /= 10;
		}
		while (n != 0) {
			c++;
			int r = n % 10;
			if (digit % 2 != 0 && c % 2 != 0) {
				sum += r;
			}
			if (digit % 2 == 0 && c % 2 == 0) {
				sum += r;
			}
			n /= 10;
		}
		System.out.println("Odd pos sum :" + sum);
	}

	public static void main(String[] args) {
		getEvenPosSum(45677);
		getOddPosSum(45677);
	}
}

Another method:

package oct_30;

import java.util.Scanner;

public class AddAlternateDigits {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the num:");
	    int n=sc.nextInt();
	    int rev=0;
	    while(n!=0) {
	    	rev=rev*10+n%10;
	    	n/=10;
	    }
	    int x=getEvenPosSum(rev);
	    int y=getOddPosSum(rev);
	    System.out.println("sume:"+x);
	    System.out.println("sumo:"+y);
	    
	}
	public static int getEvenPosSum(int n) {
		int sume=0;
		int c=0;
		while(n!=0) {
			int rem=n%10;
			c++;
			if(c%2==0) {
				sume+=rem;
			}
			n/=10;
		}
		return sume;
	}
	public static int getOddPosSum(int n) {
		int sumo=0;
		int c=0;
		while(n!=0) {
			int rem=n%10;
			c++;
			if((c%2)!=0) {
				sumo+=rem;
			}
			n/=10;
		}
		return sumo;
	}
}
=============================================================

2)Write a java program to print duplicates in the given Number

method:public static String getDuplicates(int num)

Explanation:
input==>152534523
output==>2 3 5

Duplicate and Unique
-----------------------
package test;

public class DuplicateDigit {
	public static void findDuplicateDigit(int n) {//12223
      while(n!=0) {  //1222
    	  int r = n%10;  //2
    	  n/=10; // 122
    	  int temp = n;//1222
    	  int c = 0;//2
    	  while(temp!=0) {//0
    		  if(r==temp%10) {
    			  c++;
    		  }
    		  temp/=10;
    	  }
    	  if(c==1) System.out.println(r);
      }
	}
	public static String getUnique(int n) {
		  String s = "";
		  int x = n;//1222
		  while(n!=0) {  //1222
	    	  int r = n%10;  //2
	    	  
	    	  int temp = x;//122
	    	  int c = 0;//1
	    	  while(temp!=0) {//122
	    		  if(r==temp%10) {//2==2
	    			  c++;//c=1
	    		  }
	    		  temp/=10;
	    	  }
	    	  if(c==1) s+=r+" ";
	    	  n/=10;
	      }
		  return s;
	}
	public static void main(String[] args) {
		findDuplicateDigit(1222334561);
		System.out.println("Uniques are :"+getUnique(12223));
	}
}
==============================================================

3)Write a java program to print unique number in the given Number

method:public static String getUniqueNumbers(int num)

Explanation:
input==>152534523
output==>1 4

=========================================================

Write a program on user input number converted into respective digit in figures

using switch case 

example:

Input: 123

 Output: ONE TWO THREE


import java.util.Scanner;
public class NumberInWords {
	public static void main(String[] args) {
	    //create Scanner object and read the number
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the num:");
		int n=sc.nextInt();
		//Reverse the number
 		int rev=0; 
 		while(n!=0){ 
 		    rev=rev*10+n%10;
 	         n/=10;
	}
	
		// get last digit from reversed number for each iteration.
	while(rev!=0){
		    //send that number to switch block;
		    switch(rev%10){
		        //write cases from 0 to 9 and print corresponding digit in word
		        case 1:System.out.print("one  ");break;
		        case 2:System.out.print("two  ");break;
		        case 3:System.out.print("three  ");break;
		        case 4:System.out.print("four  ");break;
		        case 5:System.out.print("five  ");break;
		        case 6:System.out.print("six  ");break;
		        case 7:System.out.print("seven  ");break;
		        case 8:System.out.print("eight  ");break;
		        case 9:System.out.print("nine  ");break;
		           default:System.out.print("zero  ");break;
		    }
		    rev/=10;
		}
		
	}

}

another method:

package oct_30;

import java.util.Scanner;

public class Rev {

	public static void isPrinter(int num) {
		String s = "";
		int index = 0;
		while (num != 0) {
			s += num % 10;
			num /= 10;
		}
		index = s.length() - 1;
		while (index >= 0) {
			switch (s.charAt(index--)) {
			case 48:
				System.out.print(" zero");
				break;
			case 49:
				System.out.print("one");
				break;
			case 50:
				System.out.print(" two");
				break;
			case 51:
				System.out.print(" three");
				break;
			case 52:
				System.out.print(" four");
				break;
			case 53:
				System.out.print(" five");
				break;
			case 54:
				System.out.print(" six");
				break;
			case 55:
				System.out.print(" seven");
				break;
			case 56:
				System.out.print(" eight");
				break;
			case 57:
				System.out.print(" nine");
				break;
			}
		}
	}

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		System.out.println("Enter a Number");
		isPrinter(s.nextInt());
	}
}

=============================================================
 Write a program to convert a given temperature in Celsius to Fahrenheit or vice versa based on user input in switch case.



Example1: input/output

Enter Temperature

77

Enter conversion type. C or c for Celsius and F or f for Fahrenheit 

c

77.0 degree Fahrenheit  to Celsius is 25.0



Example 2:

Enter Temperature

25

Enter conversion type. C or c for Celsius and F or f for Fahrenheit 

f

25.0 degree Celsius to Fahrenheit is 77.0


import java.util.Scanner;
public class TemperatureConversion {

	public static void main(String[] args) {

		//create a scanner object and read temperature and conversion type from user
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the num:");
		int n=sc.nextInt();
		System.out.print("enter the conversion type:");
		int ch=sc.next().charAt(0);
		//using formula implement logic in switch case
		if(ch>=65&&ch<=90)
		   ch+=32; 
		switch(ch){
		    case 'c':System.out.println((double)n+"degree Fahrenheit to Clecius is"+(((n-32)*5.0)/9));break;
		    case 'f':System.out.println((double)n+"degree Fahrenheit to Clecius is"+((9*(n/5))+32));break;
		}
		
	}

}
==================================================================================================
Write a program in java to accept username (String) from Scanner class, based on the input check the different username using switch case in java



by default take below existing user names

nareshit@naresh.com

manjeera@naresh.com

reliance@naresh.com

ncare@naresh.com

ramesh@naresh.com



Example

input/output

1) 

Please enter your user name

reliance@naresh.com

Welecome reliance



2)

Please enter your user name

ramesh21

Invalid user name

import java.util.Scanner;
public class VerifyUserName {

	public static void main(String[] args) {
	    //create scanner object and read user name from user
        Scanner sc=new Scanner(System.in);
		System.out.print("please enter your user name:");
		String str=sc.nextLine();
	//send user name in switch  and implement the logic
	switch(str){
	    case "nareshit@naresh.com":System.out.println("nareshit");break;
	     case "manjeera@naresh.com":System.out.println("manjeera");break;
	     case "reliance@naresh.com":System.out.println("reliance");break;
	      case "ncare@naresh.com":System.out.println("ncare");break;
	       case "ramesh@naresh.com":System.out.println("ramesh");break;
	     
	}	
	}

}
===============================================================

Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
byte i=10;
byte j = 10;
byte z = i * j;
System.out.println(z);

}
}



A. Compilation Error


B. 100


C. Runtime Error


D. 20

Question: 2
Find the output of the following program
public class Test
{
public static void main(String[] argv)
{
int a = 1;
while (false) {
System.out.println(a);
}
System.out.println(++a);

    }
}



A. 1 will be print infinite times


B. 1 will be print 0 time


C. 2 is the output


D. Compile time error

Question: 3
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int x = 5;
x += 10;
x = ++x + +10;
System.out.println(x);
}
}



a. 25


b. 26


c. Compile time error


d. 27

Question: 4
What will be the result of attempting to compile and run the following program?
public class KeepOnSwitching {
public static void main(String[] args) {
final int iLoc = 3;
final int iFour = 4;
int iRef = 4;
switch (iRef) {
case 1:
case iLoc:
case 2 * iLoc:
System.out.println(“I am not OK.”);
default:
System.out.println(“You are OK.”);
case iFour:
System.out.println(“It’s OK.”);
}
}
}
Select the one correct answer.



(a) The code will fail to compile because of the value of one of the case labels.


(b) The code will fail to compile because of the type of the switch expression.


(c) The code will compile correctly and will only print the following, when run:
You are OK.
It’s OK.


(d) The code will compile correctly and will only print the following, when run:
It’s OK.

Question: 5
What will be printed when the following program is run?
public class ParameterPass {
public static void main(String[] args) {
int i = 0;
addTwo(i++);
System.out.println(i);
}
static void addTwo(int i) {
i += 2;
}
}
Select the one correct answer.



(a) 0


(b) 1


(c) 2


(d) 3

Question: 6
Which of these method declarations are valid declarations of the main() method
that would be called by the JVM in order to start the execution of a Java application?

Select the three correct answers.
(a) static void main(String[] args) { /* … / }
(b) public static int main(String[] args) { / … / }
(c) public static void main(String args) { / … / }
(d) final public static void main(String[] arguments) { / … / }
(e) public int main(Strings[] args, int argc) { / … / }
(f) static public void main(String args[]) { / … / }
(g) static public void main(String… args) { / … */ }



a, d, f


d, f, g


a, f, g


e,f,g

Question: 7
Given the class
// File name: Args.java
public class Args {
public static void main(String[] args) {
System.out.println(args[0] + ” ” + args[args.length-1]);
}
}

what would be the result of executing the following command line?

java Args In politics stupidity is not a handicap

Select the one correct answer.



(a) The program will throw an ArrayIndexOutOfBoundsException.


(b) The program will print “java handicap”.


(c) The program will print “Args handicap”.


(d) The program will print “In handicap”.


(e) The program will print “In a”.

Question: 8
Given the following declaration:
char c = ‘A’;
What is the simplest way to convert the character value in c into an int?
Select the one correct answer.



(a) int i = c;


(b) int i = (int) c;


(c) int i = Character.getNumericValue(c);


(d) None of the above

Question: 9
What will be the result of compiling and running the following program?
public class Assignment {
public static void main(String[] args) {
int a, b, c;
b = 10;
a = b = c = 20;
System.out.println(a);
}
}
Select the one correct answer.



(a) The program will fail to compile since the compiler will report that the variable c in the multiple assignment statement a = b = c = 20; has not been initialized.


(b) The program will fail to compile, because the multiple assignment statement
a = b = c = 20; is illegal.


(c) The code will compile and print 10, when run.


(d) The code will compile and print 20, when run.

Question: 10
What is the value of the expression (1 / 2 + 3 / 2 + 0.1)?
Select the one correct answer.



(a) 1


(b) 1.1


(c) 1.6


(d) 2


(e) 2.1

Question: 11
What will be the result of compiling and running the following program?
public class Integers {
public static void main(String[] args) {
System.out.println(0x10 + 10 + 010);
}
}
Select the one correct answer.



(a) The program will not compile because of errors in the expression 0x10 + 10 + 010.


(b) When run, the program will print 28.


(c) When run, the program will print 30.


(d) When run, the program will print 34.


(e) When run, the program will print 36.

Question: 12
What is the value of evaluating the following expression (- -1-3 * 10 / 5-1)?
Select the one correct answer.



(a) –8


(b) –6


c) 7


(d) 8


(e) 10

Question: 13
What happens when you try to compile and run the following program?

public class Prog1 {
public static void main(String[] args) {
int k = 1;
int i = ++k + k++ + + k; // (1)
System.out.println(i);
}
}
Select the one correct answer.



a) The program will not compile, because of errors in the expression at (1).


(b) The program will compile and print the value 3, when run.


(c) The program will compile and print the value 4, when run.


(d) The program will compile and print the value 7, when run.


(e) The program will compile and print the value 8, when run

Question: 14
What is the label of the first line that will cause a compile time error in the following program?
public class MyClass {
public static void main(String[] args) {
char c;
int i;
c = ‘a’; // (1)
i = c; // (2)
i++; // (3)
c = i; // (4)
c++; // (5)
}
}
Select the one correct answer.



(a) (1)


(b) (2)


(c) (3)


(d) (4)


(e) (5)

Question: 15
Which of the following expressions evaluate to true?
Select the two correct answers.
(a) (false | true)
(b) (null != null)
(c) (4 <= 4)
(d) (!true)
(e) (true & false)



a, b


b, c


a, c


c, d


c, e

Question: 16
Which statements are true?
Select the two correct answers.
(a) The remainder operator % can only be used with integral operands.
(b) Short-circuit evaluation occurs with boolean logical operators.
(c) The arithmetic operators *, /, and % have the same level of precedence.
(d) A short value ranges from -128 to +127, inclusive.
(e) (+15) is a legal expression.



a, b


a, e


b, c


b, e


a, c

Question: 17
Which statements are true about the output from the following program?
public class Logic {
public static void main(String[] args) {
int i = 0;
int j = 0;
boolean t = true;
boolean r;
r = (t & 0 < (i+=1));
r = (t && 0 < (i+=2));
r = (t | 0 < (j+=1));
r = (t || 0 < (j+=2));
System.out.println(i + ” ” + j);
}
}
Select the two correct answers.
(a) The first digit printed is 1.
(b) The first digit printed is 2.
(c) The first digit printed is 3.
(d) The second digit printed is 1.
(e) The second digit printed is 2.
(f) The second digit printed is 3.



a, d


b, e


c, d


a, f

Question: 18
What will be the result of attempting to compile and run the following class?
public class IfTest {
public static void main(String[] args) {
if (true)
if (false)
System.out.println(“a”);
else
System.out.println(“b”);
}
}
Select the one correct answer.



(a) The code will fail to compile because the syntax of the if statement is incorrect.


(b) The code will fail to compile because the compiler will not be able to determine which if statement the else clause belongs to.


(c) The code will compile correctly and display the letter a, when run.


(d) The code will compile correctly and display the letter b, when run.


(e) The code will compile correctly, but will not display any output.

Question: 19
What, if anything, is wrong with the following code?
void test(int x) {
switch (x) {
case 1:
case 2:
case 0:
default:
case 4:
}
}
Select the one correct answer.



(a) The variable x does not have the right type for a switch expression.


(b) There is nothing wrong with the code.


(c) Each case section must end with a break statement.


(d) The default label must be the last label in the switch statement.


(e) The body of the switch statement must contain at least one statement.

Question: 20
Which of these combinations of switch expression types and case label value types are legal within a switch statement?
Select the one correct answers.



(a) switch expression of type int and case label value of type char.


(b) switch expression of type float and case label value of type int.


(c) switch expression of type byte and case label value of type float.


(d) switch expression of type char and case label value of type long.


(e) switch expression of type boolean and case label value of type boolean.

Question: 21
Given:
4. public class Frodo {
5. public static void main(String[] args) {
6. short myGold = 7;
7. System.out.println(countGold(myGold, 6));
8. }
9. }
10. class Hobbit {
11. static int countGold(int x, int y) { return x + y; }
12. }

What is the result?



A. 13


B. Compilation fails due to multiple errors


C. Compilation fails due to an error on line 6


D. Compilation fails due to an error on line 7


E. Compilation fails due to an error on line 11

Question: 22
Find the output of the following program
class Test
{
public static void main(String[] args)
{
byte b =2;
switch(b)
{ case 23:
case -128:
case 128:
}
System.out.println(b);
}
}



a. No output


b. Compile time Error


c. 2


d. None of the above

Question: 23
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
System.out.println(0X012+0B101+011);
}
}



a. Compiletime Error


b. 30


c. 32


d. 34

Question: 24
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
System.out.println(10+5+”abc”);
System.out.println(“def”+10-5);
}
}



a. 105abc
def105


b. 15abc
def5


c. 15abc
def105


d. Compiletime error

Question: 25
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int a=1,b=2,c=4,d;
d = –c+ ++a - –c+ ++b;
c = d;
d = –d + ++c;
System.out.println(d);
}
}



a. 9


b. 10


c. 11


d. 12

Question: 26
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
float f = 10.5f;
double d = (int) f;
f += (char)(d += f += d);
System.out.println(d);
System.out.println(f);
}
}



a. Compile Time Error


b. 30 40


c. 30.0 40.0


d. 30.5 40.5

Question: 27
Find the output of the following program

public class Test
{
public static void main(String[] argv)
{
int i = 6;
long l = 7l;
short s = 7;
s += i += l += s;
System.out.println(s);
byte b = (byte) (char) (int) (i + l + s);
System.out.println(b);
}
}



a. Compile Time Error


b. 27 61


C. 27 60


d. 26 63

Question: 28
Find the output of the following program

public class Abc {

public static void main(String[] argv) {

    float f = 2.5f;
    double d = 1.5;
    System.out.println(++f + d++ + ++f + ++d);
}
}



a. Compile time error


b. 13.0


c. 13


d. 15.5

Question: 29
public class Abc {

public static void main(String[] argv) {

    int $ = 7;
    int $_$ = 7;
    $+=$_$-=$*=$_$/=$;
    System.out.println($+" "+$_$);
}
}



a. Compile Time Error


b. 0 0


c. 7 0


d. 1 1


e. 7 1

Question: 30
public class Abc {

public static void main(String[] argv) {

    while (true) {
        if (false) {
            System.out.println(false);
            break;
        } else {
            System.out.println(true);
        }
        return;
    }
    System.out.println("out of the loop");
}
}



a. false
true
out of the loop


b. false
out of the loop


c. true


d. false


e. Compile time error

====================================================
Write a program to check whether given character is consonant or vowel using switch case and also display its UNICODE value.



Example 1:

Input/Output:

Enter a Character

A

The character A is a vowel

UNICODE value: 65



Example 2:

Input/Output:

Enter a Character

s

The character s is a consonant

UNICODE value: 115



Example 3:

Input/Output:

Enter a Character

6

Invalid alphabet

UNICODE value: 54

import java.util.Scanner;
public class VowelOrConsonantUsingSwitch {

	public static void main(String[] args) {
	
        //create a scanner object and read a character from the user
	Scanner sc=new Scanner(System.in);
	System.out.print("enter a character:");
	char ch=sc.next().charAt(0);
		//change the character to upper case letter and pass it to switch
		if(ch>=65&&ch<=90){
		switch(ch){
		    case 'A':case 'E':case 'I':case 'O':case 'U':System.out.println("the character is vowel \n UNICODE value:"+(int)ch);break;
		    default:System.out.println("the character is consonant \nUNICODE value:"+(int)ch);
		}}else{
		   switch(ch){
		    case 'a':case 'e':case 'i':case 'o':case 'u':System.out.println("the character is vowel \n UNICODE value:"+(int)ch);break;
		    default:System.out.println("the character is consonant \nUNICODE value:"+(int)ch); 
		}
		}
	}

}
==============================================================================================================

Write a program that converts a given number of seconds to minutes, hours, or days based on user input using a switch case statement in Java. 



Example1: 

Input/Output:

Enter number of seconds

23244

Please select below options to convert seconds to

1) days

2) hours

3) minutes

2

23244 seconds is equal to 6.456666666666667 hours.



Example2: 

Input/Output:

Enter number of seconds

323

Please select below options to convert seconds to

1) days

2) hours

3) minutes

3

323 seconds is equal to 5.383333333333334 minutes.



Example3: 

Input/Output:

Enter number of seconds

5

Please select below options to convert seconds to

1) days

2) hours

3) minutes

4

Invalid option selected. please select any one option  from 1 to 3


import java.util.Scanner;
public class SecondsConversionUsingSwitch {

	public static void main(String[] args) {
		
		//create a scanner object and read seconds and conversion options from the user
	Scanner sc=new Scanner(System.in);
	System.out.print("enter the seconds:");
	int n=sc.nextInt();
	System.out.print("please select below options to convert seconds to");
	int p=sc.nextInt();
	    //implement the logic using switch case
		switch(p){
		    
		    case 1:System.out.println(n+"seconds is equal to"+((double)n/3600)+"hours");break;
		    case 2:System.out.println(n+"seconds is equal to"+((double)n/60)+"minutes");break;
		    case 3:System.out.println(n+"seconds is equal to"+((double)n/86400)+"days");break;
		    default:System.out.println("invlid option selected please select any one option from 1 to 3");break;
		}
		
		//close scanner object
	}

}
================================================================================================
Write a program to determine the type of a triangle (equilateral, isosceles, or scalene) based on the lengths of its three sides. using a switch case statement in Java



Try using only switch case. don't use if condition.



Example 1:

Expected Input/Output:

Enter side1

1

Enter side2

2

Enter side3

1

The triangle is isosceles.



Example 2:

Expected Input/Output:

Enter side1

1

Enter side2

2

Enter side3

3

The triangle is scalene.


import java.util.Scanner;
public class VerifyTriangeTypeUsingSwitch {

	public static void main(String[] args) {

	//create scanner object and read 3 sides of a triangle
	Scanner sc=new Scanner(System.in);
	System.out.println("enter side1");
	int s1=sc.nextInt();
	System.out.println("enter the side2");
	int s2=sc.nextInt();
	System.out.println("enter the side3");
	int s3=sc.nextInt();
	System.out.println("enter the op");
	int op=sc.nextInt();
	//use nested switch and ternary operator to implement the logic
	switch(op){
	    case 1:System.out.println((s1==s2||s1==s3)?"triangle is isosceles":"");break;
	    case 2:System.out.println((s1!=s2||s1!=s3||s2!=s3||s3!=s1)?"triangle is scalene":"");break;
	    case 3:System.out.println((s1==s2&&s1==s3&&s2==s3&&s3==s1)?"triangle is equilateral":"");break;
	}	
	}

}

other method:

import java.util.Scanner;
public class VerifyTriangeTypeUsingSwitch {

	public static void main(String[] args) {

	//create scanner object and read 3 sides of a triangle
	Scanner sc=new  Scanner(System.in);
	System.out.print("Enter side1:");
	int side1=sc.nextInt();
	System.out.print("Enter side2:");
	int side2=sc.nextInt();
	System.out.print("Enter side3:");
	int side3=sc.nextInt();
	
	int ch=((side1==side2)&&(side1==side3))?1:((side1==side2)||(side1==side3)||(side2==side3))?2:3;
	switch(ch){
	    case 1:System.out.print("equilatreal");break;
	   case 2:System.out.print("isosceles");break;
	   case 3:System.out.print("scalene");break;
	}
	    
	}

}
=======================================================================================

1)write a program in java check the  given number is ugly number or not .

Example :

A number is said to be an Ugly number if positive numbers whose prime factors only include 2, 3, 5.

import java.util.Scanner;

public class UglyNumber {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("enter the number:");
		int n = sc.nextInt();
		int i;
		if (n > 0) {
			for (i = 1; i <= n; i++) {
				int c = 0;
				if (n % i == 0) {
					for (int j = 1; j <= i; j++) {
						if (i % j == 0)
							c++;
					}
				}
				if (c == 2) {
					System.out.println(i);
					if (i == 2 || i == 3 || i == 5) {
						System.out.println("ugly");
					} else {
						System.out.println("not ugly");
					}
				}
			}

		}
	}
}
=====================================================================================

2)write a program to print pattern using printInvertedPyramid() in java

123456789
 1234567
  12345
   123
    1

package oct_30;

public class Pattern4 {

	public static void main(String[] args) {
		int n=5;
		for(int i=1;i<=n;i++) {
			for(int j=1;j<i;j++) {
				System.out.print(" ");
			}
			int a=1;
			for(int k=i;k<=n;k++) {
				System.out.print(a++);
			}
			for(int m=i;m<=n-1;m++) {
				System.out.print(a++);
			}
			System.out.println();
		}
    
	}

}

======================================================

3) Write a program to check whether a person is eligible to vote or Not using switch statement

package oct_30;

import java.util.Scanner;

public class VoteEgibility {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the age:");
		int age=sc.nextInt();
		int a=1,b=0;
		int res=(age>=18)?a:b;
		switch(res) {
		case 1:System.out.println("Eligible to vote");break;
		case 0:System.out.println("Not eligible to vote");break;
		}
	}

}
==============================================================================================

4)Write a program to find the Maximum of Two Numbers using switch statement

package oct_30;

import java.util.Scanner;

public class MaximumOfTwoNumbersUsingSwitch {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the two number:");
		int a=sc.nextInt();
		int b=sc.nextInt();
		int res=a>b?1:0;
        switch(res) {
        case 1:System.out.println(a+"maximum number");
        case 0:System.out.println(b+"maximum number");
        }
	}

}
===========================================================

Note:- Do All Programs using BLC and ELC Class

Program-1
Create a class with a method to find the difference between the sum of the squares and the square of the sum of the first n natural numbers.

Method Description :-

Method Name 	 calculateDifference 

Access Modifier public,static	

Argument 	 int n 

Return Type 	 int 

Logic 	Find the difference between the sum of the squares of the first n natural numbers and the square of their sum. 

For Example if n is 10,you have to find 

(1^2+2^2+3^2+….9^2+10^2)- 

(1+2+3+4+5…+9+10)^2 

import java.util.Scanner;
public class TestBLCCode {

	public static void main(String[] args) {

		//create a scanner object and read a number from user;
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the num:");
        int n=sc.nextInt();
		//call calculateDifference() method by passing integer value and Print results
        int res=SumOfTheSquaresAndSquareOftheSums.calculateDifference(n);
        System.out.println("difference is:"+res);

        // close scanner 
	}

}

public class SumOfTheSquaresAndSquareOftheSums {
  
    public static int calculateDifference(int num){
        int sqrsum=0;
        int sum=0;
        int sumsqr;
        int d;
        for(int i=1;i<=num;i++){
            sqrsum+=(int)Math.pow(i,2);
            sum+=i;
        }
        sumsqr=sum*sum;
        d=sqrsum-sumsqr;
        return d;
    }
  //create a public static method named as calculateDifference(). which takes int as parameter and returns int
  
}

=========================================================================================

Program-2
Create a method to check if a number is a power of two or not

Method Description :-

Method Name: 	checkNumber 

Access Modifier :  public,static

Argument :	int  

Return Type :	boolean 

Logic 	Check if the input is a power of two. 

Ex: 8 is a power of 2 

import java.util.Scanner;
public class PowerOfTwoTest {
    public static void main(String[] args) {
        
        //create a scanner object and read a number from user;
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the num:");
        int n=sc.nextInt();
		//call calculateDifference() method by passing integer value and Print results
        boolean res=VerifyPowerOfTwo.checkNumber(n);
        if(res)
        System.out.println(n+"is a power of 2");
        else
        System.out.println(n+"is not a power of 2");
        //call checkNumber() method using BLC class name
		//print the results based on return value.
		//close scanner
    }
}

public class VerifyPowerOfTwo
{
  public static boolean checkNumber(int num){
        if (num == 0)
        return false;
    while (num != 1) {
        if (num % 2 != 0)
            return false;
        num = num / 2;
    }
    return true;
    } 
   //create a public static method named as checkNumber().which takes int as parameter and returns boolean value
}

===========================================================
Program-3
Create a method to find the sum of the cubes of the digits of an n digit number

Method Name 	findSum 

Method Description 	Find the sum cubes of the digits of an n digit number 

Argument 	Int 

Return Type 	Int 

Logic 	Return the sum of cubes of the digits of an n digit number 

Example 

Input : 123 

Output : 1^3+2^3+3^3= 1+8+27=36 

=import java.util.Scanner;
public class TestSumOfCubes {
    public static void main(String[] args) {
        //create a scanner object and read a number from user;
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the num:");
        int n=sc.nextInt();
		//call calculateDifference() method by passing integer value and Print results
        int res=SumOfCubesOfDigits.findSum(n);
        System.out.println("cubesum:"+res);
        //call findSum method using class name and print result
        //close scanner object;
    }
}

public class SumOfCubesOfDigits
{
    public static int findSum(int num){
        int cubesum=0;
        for(int i=1;i<=num;i++){
         cubesum+=(int)Math.pow(i,3);   
        }
        return cubesum;
    }
    //create a public static method name as findSum(). which takes int as parameter and returns int
}
======================================================================================
Program-4
We have two monkeys, a and b, and the parameters aSmile and bSmile indicate if each is smiling. We are in trouble if they are both smiling or if neither of them is smiling. Return true if we are in trouble.



Method Name:- monkeyTrouble()

Modifier:- public,static

Return type:- boolean

Arguments:-  it takes two Boolean.



 monkeyTrouble(true, true) → true

 monkeyTrouble(false, false) → true

 monkeyTrouble(true, false) → false

import java.util.Scanner;
public class TestMonkeyTrouble {
    public static void main(String[] args) {
        
        //create a scanner object and read two boolean values;
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter true if A-Monkey is smiling. else enter false");
        boolean asmile=sc.nextBoolean();
        System.out.println("Enter true if B-Monkey is smiling. else enter false");
        boolean bsmile=sc.nextBoolean();
        boolean res=MonkeyTrouble.monkeyTrouble(asmile,bsmile);
        //call monkeyTrouble() method using BLC class name
		//print the results based on return value.
		if(res)
		System.out.println("we are in trouble");
		else
		System.out.println("we are not in trouble");
		//close scanner object
    }
}

public class MonkeyTrouble
{
   public static boolean monkeyTrouble(boolean a,boolean b){
       return !a^b;
   }
   //create a public static method name as monkeyTrouble(). which takes boolean and boolean as parameters and returns boolean
}

======================================================================================================
Program-5
The parameter weekday is true if it is a weekday, and the parameter vacation is true if we are on vacation. We sleep in if it is not a weekday or we're on vacation. Return true if we sleep in.

Method Name:- sleepIn()

Modifier:- public,static

Return type:- boolean

Arguments: it takes two Boolean.



 sleepIn(false, false) → true

 sleepIn(true, false) → false

 sleepIn(false, true) → true

import java.util.Scanner;
public class TestSleepIn {
    public static void main(String[] args) {
        
        //create a scanner object and read two boolean values;
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter true if it is a week day else enter false");
        boolean weekday=sc.nextBoolean();
        System.out.println("Enter true you are on vacation else enter false");
        boolean vacation=sc.nextBoolean();
        boolean res=SleepIn.sleepIn(weekday,vacation);
        //call monkeyTrouble() method using BLC class name
		//print the results based on return value.
		if(res)
		System.out.println("sleepin");
		else
		System.out.println("not sleeping. working hard.");
		//close scanner object
        
        //call sleepIn() method using BLC class name
		//print the results based on return value.
		
		
		//close scanner object
    }
}

public class SleepIn
{
   public static boolean sleepIn(boolean a,boolean b){
       return (!a)||b;
   }
   //create a public static method name as sleepIn(). which takes boolean and boolean as parameters and returns boolean
}

===============================================================================


Given two int values, return their sum. Unless the two values are the same, then return double their sum.

Method Name:- sumDouble()

Modifier:- public,static

return type:- integer

arguments: it takes two integer's.



sumDouble(1, 2) → 3

sumDouble(3, 2) → 5

sumDouble(2, 2) → 8


import java.util.Scanner;
class ELCclass{
public static int sumDouble(int a, int b) {
  if(a==b){
      int sum=a+b;
      int dsum=(sum+sum);
      return dsum;
  }else{
      int sum=a+b;
      return sum;
  }
}
}
public class MyProgram
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.print("enter the num1:");
        int n1=sc.nextInt();
        System.out.print("enter the num2:");
        int n2=sc.nextInt();
        int res=ELCclass.sumDouble(n1,n2);
        System.out.println("sumDouble("+n1+","+n2+")"+"->"+res);
    }
}
==========================================================================

Given an int n, return the absolute difference between n and 21, except return double the absolute difference if n is over 21.

Method Name:- diff21()

Modifier:- public, static,

return type:- integer.

arguments: it take only integer.



 diff21(19) → 2

 diff21(10) → 11

 diff21(21) → 0

import java.util.Scanner;
class BLCclass{
    public static int diff21(int num) {
    return 21-num;
    }
}
public class MyProgram
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.print("enter the number:");
        int n=sc.nextInt();
        int res=BLCclass.diff21(n);
        System.out.println("diff21("+n+")->"+res);
    }
}
=========================================================================
Question: 1
What will be the output after execution ?
12. for(int a = 1, b = 10; a < b; a++, b = b - 2) {
13. System.out.println(a + b);
14. }



A. 11 10 9 8


B. 11 10 11

Correct Answer
C. 11 10 9


D. Compile Time Error

 Incorrect
Question: 2
What will be the output after execution ?

char c = ‘a’;
do {
System.out.println(c++);
}while(false);
System.out.println(c);


A. b c

Correct Answer
B. a b


C. a a

Incorrect Answer
D. Compile Time Error

 Correct
Question: 3
What will be the output after execution ?

for(int k = 1; k < 10; k++) {
System.out.print(k + “ “);
if(k % 3 == 0)
break;
}


A. 1 2 3 4 5 6 7 8 9


B. 1 2 3 4 5 6

Correct Answer
C. 1 2 3


D. 1 2

 Correct
Question: 4
What is the result of the following code?
3. for(char c = ‘m’; c < = ‘p’; c++) {
4. if(c == ‘n’) {
5. continue;
6. }
7. System.out.print(c);
8. }



A. mnop

Correct Answer
B. mop


C. nop


D. Copile time Error(Cannot take char in for loop)

 Correct
Question: 5
What is the result of the following code?
3. int x = 10, y = 3;
4. if(x % y == 2)
5. System.out.print(“two”);
6. System.out.print(x%y);
7. if(x%y == 1)
8. System.out.print(“one”);



A. two


B. two1


C. two2


D. one

Correct Answer
E. 1one

 Correct
Question: 6
What is the result of the following code?
int x = 5, y = 10;
boolean b = x < 0;
if(b = true) {
System.out.print(x);
} else {
System.out.print(y);
}


A. Compiler error on line 5.


B. Compiler error on line 6.

Correct Answer
C. 5


D. 10


E. The code compiles but there is no output.

 Correct
Question: 7
What is the output of the following program?
1. public class Question3 {
2. public static void main(String [] args) {
3. String year = “Senior”;
4. switch(year) {
5. case “Freshman” :
6. case “Sophomore” :
7. case “Junior” :
8. System.out.print(“See you next year”);
9. break;
10. case “Senior” :
11. System.out.print(“Congratulations”);
12. default :
13. System.out.print(“Invalid year”);
14. }
15. }
16. }



A. See you next year


B. Congratulations

Correct Answer
C. CongratulationsInvalid year


D. Invalid year


E. The code does not compile.

 Correct
Question: 8
What is the result of the following code?
4. final char a = ‘A’, d = ‘D’;
5. char grade = ‘B’;
6. switch(grade) {
7. case a :
8. case ‘B’ :
9. System.out.print(“great”);
10. case ‘C’ :
11. System.out.print(“passed”);
12. break;
13. case d :
14. case ‘F’ :
15. System.out.print(“not good”);
16. }



A. great

Correct Answer
B. greatpassed


C. Compiler error on line 4


D. Compiler error on line 7


E. Compiler errors on lines 7 and 13

 Incorrect
Question: 9
What is the result of the following code?
4. char c = a;
5. for(int i = 1; i < = 3; i++) {
6. for(int j = 0; j < = 2; j++) {
7. System.out.print(c++);
8. }
9. }


Incorrect Answer
A. abcdefghi


B. bcdefghij


C. abcdef


D. abcabcabc

Correct Answer
E. The code does not compile.

 Correct
Question: 10
What is the result of the following code?
5. int m = 9, n = 1;
6. int x = 0;
7. while(m > n) {
8. m–;
9. n += 2;
10. x += m + n;
11. }
12. System.out.println(x);



A. 11


B. 13


C. 23

Correct Answer
D. 36


E. 50

 Correct
Question: 11
Given the following class definition:
1. public class Forever {
2. public static void run() {
3. while(true) {
4. System.out.println(“Hello”);
5. }
6. System.out.println(“Goodbye”);
7. }
8. }
what is output of the following statement?
Forever.run();



A. Prints Hello indefinitely


B. Prints Hello until an error occurs


C. Prints Hello until an error occurs, then prints Goodbye


D. Compiler error on line 3

Correct Answer
E. Compiler error on line 6

 Correct
Question: 12
What is the result of the following code?
7. int y = 1;
8. do {
9. System.out.print(y + “ “);
10. }while(y <= 10);



A. The code does not compile.


B. 1 2 3 4 5 6 7 8 9


C. 1 2 3 4 5 6 7 8 9 10


D. 1 2 3 4 5 6 7 8 9 10 11

Correct Answer
E. ‘ 1 ‘ an infinite number of times

 Correct
Question: 13
What is the result of the following code?
7. do {
8. int y = 1;
9. System.out.print(y++ + “ “);
10. }while(y < = 10);


Correct Answer
A. The code does not compile.


B. 1 2 3 4 5 6 7 8 9


C. 1 2 3 4 5 6 7 8 9 10


D. 1 2 3 4 5 6 7 8 9 10 11


E. ‘ 1 ‘ an infinite number of times.

 Correct
Question: 14
What is the result of the following code?
3. int x = 10;
4. if(x < 0)
5. System.out.print(“anywhere”);
6. else if(x < 5)
7. if(x == 10)
8. System.out.print(“here”);
9. else if(x > = 5)
10. System.out.print(“there”);
11. else
12. System.out.print(“somewhere”);
13. else
14. System.out.print(“nowhere”);



A. anywhere


B. here


C. there


D. somewhere

Correct Answer
E. nowhere

 Correct
Question: 15
What is the result of the following code if we print n?
15. long m = 1000;
16. int n = 5;
17. n = n * m;


Correct Answer
A. Compile Time Error


B. 5000


C. 5000l


D. 1000

 Incorrect
Question: 16
What is the output of the following code?
1. private class Squares {
2. public static long square(int x) {
3. long y = x * (long) x;
4. x = -1;
5. return y;
6. }
7.
8. public static void main(String [] args) {
9. int value = 9;
10. long result = square(value);
11. System.out.println(value);
12. }
13. }


Correct Answer
A. This code does not compile.

Incorrect Answer
B. 9


C. - 1


D. 8

 Correct
Question: 17
What is the output of the following code?
4. byte a = 40, b = 50;
5. byte sum = (byte) a + b;
6. System.out.println(sum);


Correct Answer
A. Line 5 generates a compiler error.


B. 40


C. 50


D. 90


E. An undefined value

 Correct
Question: 18
What is the output of the following code?
5. int x = 5 * 4 % 3;
6. System.out.println(x);



A. Line 5 generates a compiler error.

Correct Answer
B. 2


C. 3


D. 5


E. 6

 Correct
Question: 19
What is the output of the following code?
3. int x1 = 50, x2 = 75;
4. boolean b = x1 > = x2;
5. if(b = true) {
6. System.out.println(“Success”);
7. } else {
8. System.out.println(“Failure”);
9. }


Correct Answer
A. Success


B. Failure


C. Line 4 generates a compiler error.


D. Line 5 generates a compiler error

 Correct
Question: 20
What is the output of the following code?
5. int c = 7;
6. int result = 4;
7. result += ++c;
8. System.out.print(result);



A. 8


B. 11

Correct Answer
C. 12


D. 15


E. 16

 Correct
Question: 21
Determine the output of the following code when executed with the command:
java HelloWorld hello world goodbye
1. public static class HelloWorld {
2. public static void main(String [] args) {
3. System.out.println(args[1] + args[2]);
4. }
5. }



A. hello world


B. world goodbye

Correct Answer
C. The code does not compile.


D. An ArrayIndexOutOfBoundsException occurs at runtime.

 Correct
Question: 22
Determine the output of the following code when executed.
int result = 12 + 2 * 5 % 3 - 15 / 4;



A. 14


B. 12

Correct Answer
C. 10


D. -2

 Incorrect
Question: 23
Determine the output of the following code when executed.
16. int y = 5;
17. int result = y– * 3 / –y;
18. System.out.println(“y = “ + y);
19. System.out.println(“result = “ + result);


Correct Answer
A. y = 3 result = 5


B. y = 3 result = 0

Incorrect Answer
C. y = 3 result = 4


D. y = 3 result = 2

 Correct
Question: 24
class Incr {
public static void main(String[] args) {
int x = 7;
int y = 2;
x *= x;
y *= y;
y *= y;
x -= y;
System.out.println(x);
}
}



A. 45

Correct Answer
B. 33


C. 5


D. 44

 Correct
Question: 25
Determine the output of the following code when executed.

int z = 5;
if(++z > 5 || ++z > 6) z++;
System.out.println(z);
z = 5;
if(++z > 5 | ++z > 6) z++;
System.out.println(z);



A. 8 7


B. 5 7

Correct Answer
C. 7 8


D. 6 7

 Correct
Question: 26
Determine the output of the following code when executed.

int z = 5;
if(++z > 5 && ++z > 6) z++;
System.out.println(z);
z = 5;
if(++z > 5 & ++z > 6) z++;
System.out.println(z);



A. 5 6


B. 5 7


C. 7 8

Correct Answer
D. 8 8

 Correct
Question: 27
Determine the output of the following code when executed.

class TestOR {
public static void main(String[] args) {
if ((isItSmall(3)) || (isItSmall(7))) {
System.out.println(“Result is true”);
}
if ((isItSmall(6)) || (isItSmall(9))) {
System.out.println(“Result is true”);
}
}
10.
public static boolean isItSmall(int i) {
if (i < 5) {
System.out.println(“i < 5”);
return true;
} else {
System.out.println(“i >= 5”);
return false;
}
}
}
What is the result?

Correct Answer
A.
i < 5
Result is true
i >= 5
i >= 5


B.
i < 5
Result is true
i < 5
Result is true
i >= 5


C.
i < 5
Result is true
i >= 5
i < 5
Result is true


D.
i >= 5
Result is true
i >= 5
i >= 5

 Correct
Question: 28
public class A {
public static void main(String[] args) {
final int i = 2;
final double d = 4.6;
switch ((int) d) {
case i:
System.out.println(“Its Okay”);
break;
case 2 * (int) d:
System.out.println(“Its not okay”);
break;
case i * 2:
System.out.println(“Its fine”);
break;
case (int) d:
System.out.println(“Its not fine”);
}
}
}


Correct Answer
A. Compile TIme Error


B. Its Okay


C. Its not Okay


D. Its fine


E. Its not fine

 Correct
Question: 29
public class A {
public static void main(String[] args) {
final int i = 2;
final double d = 4.6;
switch ((int) d) {
case i:
System.out.println(“Its Okay”);
break;
case 2 * (int) d:
System.out.println(“Its not okay”);
break;
case (int) (i * d):
System.out.println(“Its fine”);
break;
case (int) d:
System.out.println(“Its not fine”);
}
}
}



A. Compile TIme Error


B. Its Okay


C. Its not Okay


D. Its fine

Correct Answer
E. Its not fine

 Correct
Question: 30
public class A {
public static void main(String[] args) {
int a = 5, b = 5, c ;
c = –a * b++ + +1- -+b;
System.out.println(c);
}
}



A. Compile Time Error


B. 26

Correct Answer
C. 27


D. 25

==============================================================
Write a method which can find the sum of the first n prime numbers. Prime numbers are numbers which have only 1 and the number itself as its factors.

2 is the only even prime number. 1 is neither prime nor composite. 

Example: the 1st 5 prime numbers are 2,3,5,7,11 and sum is 28

Method Name :	getPrimeSum 

Method Description :Get the sum of the first n prime numbers 

Argument :	int n 

Return Type :	Int 


import java.util.Scanner;
public class PrimeSum{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the num:");
        int n=sc.nextInt();
        int x=getPrimeSum(n);
        System.out.println(x);
    }
    public static int getPrimeSum(int num){
        int sum=0;
        for(int i=2;i<=n;i++){
            int c=0;
            for(int j=1;j<=i;j++){
                if(i%j==0){
                    c++;
                }
            }if(c==2){
                sum+=i;
            }
        }
        return sum;
    }
}
======================================================

Define a method which accepts 2 values as number and returns the prime numbers between the values.

Write the method with the following specifications: 

Name of method: getPrimeNumbers() 

Arguments: two arguments of type integers

Return Type: String value 

Specifications: The value returned by the method getPrimeNumbers() is determined by the following rules:

Value must not be negative. If yes, then return -1 as string.                                

1st value must not be greater than or equal to 2nd value. If yes, then return -2 as string.                    

Prime Numbers must be returned as one string with every value separated by single blank space.


import java.util.Scanner;
public class MyProgram
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the starting value:");
        int v1=sc.nextInt();
        System.out.println("enter the ending value:");
        int v2=sc.nextInt();
        String x=getPrimeSum(v1,v2);
        System.out.println(x);
    }
    public static String getPrimeSum(int v1,int v2){
        String s="";
        if(v1<0&&v2<0){
            s+="-1";
        }else if(v1>=v2){
            s+="-2";
        }else{
        int sum=0;
        for(int i=v1;i<=v2;i++){
            int c=0;
            for(int j=1;j<=v2;j++){
                if(i%j==0){
                    c++;
                }
            }if(c==2){
                s+=i+" ";
            }
        }
        }
        return s;
    }  
    }
=======================================================================

Write a method to find the sum of the factorials of the first n numbers in the Fibonacci series. 

Fibonacci series is given by 0 1 1 2 3 5 8…… 

Factorial for a number m is given by factorial= m*m-1*m-2….1

Method Name : sumOfFactorial 

Argument : int n 

Return Type : int 

Logic 	1. Generate the first n elements in the Fibonacci series 

2. Find the factorial of each element 

3. Find the sum of the factorial


import java.util.Scanner;
public class MyProgram
{
    public static void main(String[] args)
    {
     Scanner sc=new Scanner(System.in);
        System.out.println("enter the num:");
        int n=sc.nextInt();
        int x=getSumFactorial(n);
        System.out.println(x);   
    }
    public static int getSumFactorial(int n){
        int num1=0;
        int num2=1;
        int temp=1;
        int sum=0;
        for(int i=1;i<=n;i++){
            int num3=num1+num2;
           System.out.println(num1);
           num1=temp;
           int fact=1;
           while(temp!=0){
               fact=fact*temp;
               temp--;
           }
           sum+=fact;
            num1=num2;
            num2=num3;
        }
       return sum; 
    }
}
==================================================

Define a method which accepts 2 values as number and returns the even numbers between the 2 values.

Write the method with the following specifications

Name of method getEvenNumbers() // which accepts 2 integer values as arguments and return the even numbers between the range.

Arguments: Two arguments of type integer

Return Type: String value

Note: If the first argument value is greater than second value, generate even numbers from first value to second value. If the second value is less than first value, generate even numbers from second value to first.

Specifications: The value returned by the method getEvenNumbers() is determined by the following rules

Values must not be negative. If yes, then return  -1 as string.                          

Value must not be 0 or same. If yes, then return -2 as string.                       

The values must be returned as a single string where each value is separated by a single blank space.

For Example:

Input: 10 20

Output: 10 12 14 16 18 20

Input: 20 10

Output: 10 12 14 16 18 20


===========================================================================

Create a method to find the sum of the cubes of the digits of an n digit number

Method Name 	findSum 

Method Description 	Find the sum cubes of the digits of an n digit number 

Argument 	Int 

Return Type 	Int 

Logic 	Return the sum of cubes of the digits of an n digit number 

Example 

Input : 123 

Output : 1^3+2^3+3^3= 1+8+27=36 

===============================================================

Write a Program on OOPs to define Dog class properties and behaviour.



properties :



name  : String

height : double

age	: int



behaviour:



getDogInformation() : public void

bark() : public void



pgm:
public class Dog {
   // Declare the variables 
   
    // Constructor
    
    // Method to get dog information
    public void getDogInformation() {
      
    }

    // Method for the dog to bark
    public void bark() {
        
    }

    public static void main(String[] args) {
        // Create a Dog object

        // Call methods on the Dog object
       
    }
}

-----------------------------------------------------
public class Dog {
   // Declare the variables 
   String dogName;
   double dogHeight;
   int dogAge;
    // Constructor
    

    // Method to get dog information
    public void getDogInformation() {
      System.out.println("Dog's Name: "+dogName);
      System.out.println("Dog's Height: "+dogHeight);
      System.out.println("Dog's Age: "+dogAge);
    }

    // Method for the dog to bark
    public void bark() {
        System.out.print(dogName+"is barking at the Stranger. ");
        System.out.print("The dog height is "+dogHeight+" cm ");
        System.out.print("and "+dogAge+" years old.");
    }

    public static void main(String[] args) {
        // Create a Dog object
        Dog pet=new Dog();
        pet.dogName="Shiroo";
        pet.dogHeight=11;
        pet.dogAge=5;
        // Call methods on the Dog object
        pet.getDogInformation();
        System.out.print("-------------------------\n");
        pet.bark();
    }
}

===============================================================

Write a Program on OOPs to define Fan class properties and behaviour.



properties :



name  : String

coil  : String

wings	: int



behaviour:



switchOn() : public void

switchOff() : public void  write the solution for this Question
pgm:
====

public class Fan {
   // Declare the variable 
   
    // Constructor
   

    // Method to switch on the fan
    public void switchOn() {
        
    }

    // Method to switch off the fan
    public void switchOff() {
       
    }

    public static void main(String[] args) {
        // Create a Fan object
        

        // Call methods on the Fan object
        
    }
}
------------------------------------------------
public class MyProgram {
   // Declare the variable 
   String fanName;
   String fanCoil;
   int fanWings;
    // Constructor
    // Method to switch on the fan
    public void switchOn() {
        System.out.println("Brand Name: "+fanName);
        System.out.println("Coil Name: "+fanCoil);
        System.out.println("Wings are: "+fanWings);
        System.out.println("Fan is Start to rotation.");
    }

    // Method to switch off the fan
    public void switchOff() {
        System.out.println("Brand Name: "+fanName);
        System.out.println("Coil Name: "+fanCoil);
        System.out.println("Wings are: "+fanWings);
        System.out.println("Fan is Stop to rotation.");
    }
    public static void main(String[] args) {
        // Create a Fan object
        MyProgram fn=new MyProgram();
        fn.fanName="Crompto";
        fn.fanCoil="VFC Coil";
        fn.fanWings=3;
        // Call methods on the Fan object
        fn.switchOn();
        System.out.println("------------------");
        fn.switchOff();
    }
}


==============================================================================
Write 2 programs on OOPs by your own thinking and imagination.

pgm:
====
public class MyProgram
{
    public static void main(String[] args)
    {
        // write the logic by taking a real time example 
       //  by your own thinking.
    }
}

sathish(screenshot)
==========================================================================

Write a Program on OOPs to define Dog class properties and behaviour.



properties :



name  : String

height : double

age	: int



Initialize these properties with the help of Methods not by using Object 

reference.



behaviour:



getDogInformation() : public void

bark() : public void  

-----------------------------------------------
public class Dog {
   // Declare the variables 
   String dogName;
   double dogHeight;
   int dogAge;
   
   // Method to initialize dog properties
    private void initializeProperties(String name, double height, int age) {
        dogName=name;
        dogHeight=height;
        dogAge=age;
        
    }
    
    // Method to get dog information
    public void getDogInformation() {
      System.out.println("Dog's Name: "+dogName);
      System.out.println("Dog's Height: "+dogHeight);
      System.out.println("Dog's Age: "+dogAge);
    }

    // Method for the dog to bark
    public void bark() {
        System.out.print(dogName+" is barking at the Stranger. ");
        System.out.print("The "+dogName+" height is "+dogHeight+" cm ");
        System.out.print("and "+dogAge+" years old.");
    }

    public static void main(String[] args) {
        // Create a Dog object
        Dog pet=new Dog();
        pet.initializeProperties("Shiroo", 11, 5);
        /*pet.dogName="Shiroo";
        pet.dogHeight=11;
        pet.dogAge=5;*/
        // Call methods on the Dog object
        pet.getDogInformation();
        System.out.print("-------------------------\n");
        pet.bark();
    }
}
===============================================================

Write a Program on OOPs to define Fan class properties and behaviour.



properties :



name  : String

coil  : String

wings	: int



Initialize these properties with the help of Methods not by using Object 

reference.



behaviour:



switchOn() : public void

switchOff() : public void  

-------------------------------------------

public class Fan {
    public class Fan {
   // Declare the variable 
   String fanName;
   String fanCoil;
   int fanWings;
    
    // Method to initialize fan properties
    private void initializeProperties(String name, String coil, int wings) {
        fanName=name;
        fanCoil=coil;
        fanWings=wings;
    }
    
    // Method to switch on the fan
    public void switchOn() {
        System.out.println("Brand Name: "+fanName);
        System.out.println("Coil Name: "+fanCoil);
        System.out.println("Wings are: "+fanWings);
        System.out.println("Fan is Start to rotation.");
    }

    // Method to switch off the fan
    public void switchOff() {
        System.out.println("Brand Name: "+fanName);
        System.out.println("Coil Name: "+fanCoil);
        System.out.println("Wings are: "+fanWings);
        System.out.println("Fan is Stop to rotation.");
    }
    public static void main(String[] args) {
        // Create a Fan object
        Fan fn=new Fan();
        fn.initializeProperties("Crompton", "VFC coil", 3);
        /*fn.fanName="Crompto";
        fn.fanCoil="VFC Coil";
        fn.fanWings=3;*/
        // Call methods on the Fan object
        fn.switchOn();
        System.out.println("------------------");
        fn.switchOff();
    }
}
============================================================================
Write a Program on OOPs to define Product class properties and behaviour.



properties :



productId   : int

productName  : String

productPrice  : double



Initialize these properties with the help of Methods using Scanner class not by using Object reference



behaviour:

getProductInfo() : public void

------------------------------------------------------------------------

//Import Scanner class here....
import java.util.*;
public class Product {
    private int productId;
    private String productName;
    private double productPrice;

    public void initializeProduct() {
        //intialize the productvalues....
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter the productId: ");
        productId=sc.nextInt();
        System.out.println("Enter the productName: ");
        productName=sc.next();
        System.out.println("Enter the productPrice: ");
        productPrice=sc.nextDouble();
        
    }

    public void getProductInfo() {
       //Write here the info of the product....
       System.out.println("Id of Product: "+productId);
       System.out.println("Name of Product: "+productName);
       System.out.println("Price of Product: "+productPrice);
    }
//}

//public class Main {
    public static void main(String[] args) {
       //call method from here....
       Product pro=new Product();
       pro.initializeProduct();
       System.out.println("--------------------------");
       pro.getProductInfo();
       System.out.println("------------x-------------");
    }
}
================================================================

A BLC (Business Logic Class) called Student is given to you.

 Instance Variables:

 studentId :private-int

 studentName : private-String

 marks: private-int

 grade: private-char

 

 method : calculateGrade():public:void

 

 Create a method public void setStudentData() with the parameters: studentId, studentName, marks.

 

 Note that grade is not set through method because it is a calculated value.

 

 Methods :

 displayDetails(): This method should return a String with the details of the student in the following format:

 Student [name=John Smith, studentId=123, marks=95, grade=A]

 

 calculateGrade(): This is a public method that calculates the grade based on the marks that is set.

 If marks is above 90, grade is set to A.

 If marks is between 81 and 90, grade is set to B,

 if marks is between 71 and 80, grade is set to C,

 if marks is between 61 and 70, grade is set to D,

 if marks is less than 61, grade is set to E.

 Use this method when you need to set or reset grade.

 

 An ELC(Executable Logic class) Tester with main method is given to you to test your code.


class Student{
    
    //class variables
	private int  studentId;
	private String studentName;
	private int marks;
	private char grade;
	//set class variables studentId, studentName and marks
	public void setStudentData(int studentId, String studentName,int marks) {
	  this.studentId=studentId;
	  this.studentName=studentName;
	  this.marks=marks;
	}
	
	//set class variable grade value using conditions 
	public void calculateGrade() {
	    if(marks>90){
	        grade='A';
	    }else if(marks<=90||marks>=81){
	     grade='B'; 
	    }else if(marks>=71||marks<=80){
	       grade='C'; 
	    }else if(marks>=61||marks<=70){
	       grade='D'; 
	    }else {
	        grade='E';
	    }
	
	}
	
	//display student details as per the format provided in question
	public String displayDetails() {
		String studentDetails ="name="+studentName+"\nstudentId="+studentId+"\nmarks="+marks+"\ngrade="+grade;
		return studentDetails;
	}
}

//An ELC(Executable Logic class) class with main method to test your code
public class StudentDetails {
	
	public static void main(String args[]) {
		//create object to Student class
	     Student s=new Student();
		//call setStudentData method by passing studentId, name and marks
		s.setStudentData(1,"ravali",90);
		//call calculateGrade method to calculate grade
		s.calculateGrade();
		//call displayDetails method to print student details in given format
		String st=s.displayDetails();
		System.out.println(st);
	}

}
=====================================================================

Create a BLC(Business Logic Class) called Bowler. Add below details to the class

 

 1. Instance variables:

 name: private-String,

 wickets: private-int,

 matches: private-int,

 balls_bowled: private-int,

 runs_conceded: private-int.

 

2. Method - bowlerDetails() : public void



 Create a method name called bowlerDetails() that accepts name, wickets, matches, balls_bowled and runs_conceded.

Method name: bowlerDetails 

Return type: void

 

 3. Create below public methods,

 

 Method name: computeBowlingAverage

 Return type: void

 

 This method should print the bowling average of the bowler by dividing runs_conceded with wickets.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 

 Name: Sachin

 bowling_avg=46.3

 

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 

 

 Method name: computeStrikeRate

 Return type: void

 

 This method should print the Strike Rate of the bowler by dividing runs_conceded with balls_bowled.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 

 Name: Sachin

 Strike_rate=0.61733335

 

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 

 Method name: showStatistics

 Return type: void

 

 This method should print the details of the batter.

 Input:

 name = "Sachin",

 wickets = 10,

 matches = 5,

 balls_bowled = 750,

 runs_conceded 463.

 Output:

 Name=Sachin

 wickets=10

 matches=5

 balls_bowled=750

 runs_conceded=463

 

 Note: a. If any values are negative print 'Error'.

 b. If runs_conceded or balls_bowled are greater than 0 when matches are 0 print 'Error'.

 

 An ELC(Executable Logic Class) Test that contains main method. Use this class to test your code.

 

//BLC(Business Logic Class) called Bowler
import java.util.Scanner;
class Bowler{
    //Declare class variables
   private String name;
   private int wickets;
   private int matches;
   private int balls_bowled;
   private int runs_conceded;
	//This method is used to set instance values
	public void bowlerDetails(String name, int wickets, int matches, int balls_bowled, int runs_conceded ) {
	this.name=name;
	this.wickets=wickets;
	this.matches=matches;
	this.balls_bowled=balls_bowled;
	this.runs_conceded=runs_conceded;
	}
	 
	 //this method is used to calculate and print the bowling average 
	 public void computeBowlingAverage() {
		 if(wickets<0||matches<0||balls_bowled<0||runs_conceded<0)
		 System.out.println("error");
		 else if(matches==0&&(runs_conceded>0||balls_bowled>0))
		 System.out.println("error");
		 else{
		    double bowling_avg=((double)runs_conceded/(double)wickets);
		     System.out.println("Name:"+name+"\nbowling_avg:"+bowling_avg);
		 }
	 }
	 
	 //this method is used to calculate and print bowling strike rate
	 public void computeStrikeRate() {
		 if(wickets<0||matches<0||balls_bowled<0||runs_conceded<0)
		 System.out.println("error");
		 else if(matches==0&&(runs_conceded>0||balls_bowled>0))
		 System.out.println("error");
		 else{
		     double strike_rate=((double)runs_conceded/(double)balls_bowled);
		     System.out.println("Name:"+name+"\nstrike_rate:"+strike_rate);
		 }
	 }
	 
	 //this method is used to display bowler/batter statistics
	 public void showStatistics() {
	     if(wickets<0||matches<0||balls_bowled<0||runs_conceded<0)
		 System.out.println("error");
		 else if(matches==0&&(runs_conceded>0||balls_bowled>0))
		 System.out.println("error");
		 else{
		     System.out.println("name="+name+"\nwickets="+wickets+"\nmatches="+matches+"\nballs_bowled="+balls_bowled+"\nruns_concedede"+runs_conceded);
		 }
	 }
	
	
}

//An ELC(Executable Logic class) class with main method to test your code
public class BowlerDetails {

	public static void main(String[] args) {
		
		//create new object to Bowler class
         Bowler ob=new Bowler();
		
		//call bowlerDetails method by passing bowler information.
		// this step will assign values to instance variables
		Scanner sc=new Scanner(System.in);
		System.out.print("name:");
		String name=sc.next();
		System.out.print("wickets:");
		int wickets=sc.nextInt();
		System.out.print("matches:");
		int matches=sc.nextInt();
		System.out.print("balls_bowled:");
		int balls_bowled=sc.nextInt();
		System.out.print("runs_concedede:");
		int runs_conceded=sc.nextInt();
	     ob.bowlerDetails(name,wickets,matches,balls_bowled,runs_conceded);
		//call this method to see bowling average
		ob.computeBowlingAverage();
		System.out.println("-----------------");
		// call this method to see bowling strike rate
		ob.computeStrikeRate();
		System.out.println("------------------");
		// call this method to see bowler/batter statistics
		ob.showStatistics();
        
	}

}
==============================================================================================

Class Batter is given to you. Add below details to the class

 

 1. Instance variables:

 name: private -String,

 runs: private-int,

 matches: private-int,

 batting_avg: private-float.

 

 

2.  Method batterDetails() : public void

Create a method name called batterDetails() that accepts name, runs, matches.

Method name: batterDetails

Return type: void

 

 

 



 3. Create below public methods,

 

 Method name: computeBattingAverage

 Return type: void

 

 This method should print the batting average of the batter by dividing run with matches.

 Input: 

Name: "Sachin"

Runs: 18000

Matches: 463



 Output:

 Name: Sachin

 Batting_Avg: 38.87689

 

 Note: a. If runs or matches values are negative print 'Error'.

 b. If runs are greater than 0 when matches are 0 print 'Error'.

 

 Method name: getStatistics

 Return type: void

 

 This method should print the details of the batter.

 Input: 

Name: "Sachin"

Runs: 18000

Matches: 463



 Output:

 Name: Sachin

 Runs: 18000

 Matches: 463

 

 Note: a. If runs or matches values are negative print 'Error'.

 b. If runs are greater than 0 when matches are 0 print 'Error'.

 

 Given an ELC(Executable Logic class) class for Testing that contains main method. Use this class to test your code.

 

//BLC(Business Logic Class) called Bowler
import java.util.Scanner;
class Batter{
	//declare instance variables
   private String name;
   private int runs;
   private int matches;
   private float batting_avg;
	//this method is used to assign values to instance variables
	public void batterDetails(String name, int runs, int matches) {
	this.name=name;
	this.runs=runs;
	this.matches=matches;
	}
	
	//This method is used to calculate batting average. use logic provided in question.
	public void computeBattingAverage() {
	  if(runs<0||matches<0)
	  System.out.println("error");
	  else if(runs>0&&matches==0)
	  System.out.println("error");
	  else{
	      double batting_avg=((double)runs/(double)matches);
	      System.out.println("name:"+name+"\nBatting_avg:"+batting_avg);
	  }
	}
	
	// this method is used to display statistics of a batter/bowler
	public void getStatistics() {
		 if(runs<0||matches<0)
	  System.out.println("error");
	  else if(runs>0&&matches==0)
	  System.out.println("error");
	  else{
	      System.out.println("name:"+name+"\nRuns:"+runs+"\nMatches:"+matches);
	  }
	}
}

//An ELC(Executable Logic class) class with main method to test your code
public class BatterDetails {

	public static void main(String[] args) {
		// create an object to Batter class 
		Batter ob1=new Batter();
		Scanner sc=new Scanner(System.in);
		System.out.print("name:");
		String name=sc.next();
		System.out.print("runs:");
		int runs=sc.nextInt();
		System.out.print("matches:");
		int matches=sc.nextInt();
		//call batterDetails method by passing Batter name, runs and number of matches he/she played
		ob1.batterDetails(name,runs,matches);
		System.out.println("-----------------");
		//call computeBattingAverage method to get the batting average
		ob1.computeBattingAverage();
		System.out.println("-----------");
		//call getStatistics method to display Batter/Bowler details
		ob1.getStatistics();
	}

}
==============================================================================================

Create a BLC class Employee class with properties 



private String firstName

private String lastName

private int employeeId

private double salary

private int noOfProject





Create a setEmployeeData() method with 5 parameters to initialize all 

the instance variables.





Implement calculateSalary() method that will add extra ammount in salary based on NoOfProject by using following criteria.



NoOfProject is more than 5 and less that 10 then add 5000.

NoOfProject is more than 10 and less that 20 then add 10000.

NoOfProject is more than 20 then add 15000. 	



 Override the toString method in Employee class to display employee details.



 Take an ELC class Tester to test your logic.


public class Employee {

	//declare instance variables
private String firstName;
private String lastName;
private int employeeId;
private double salary;
private int p;
	//implement setEmployeeData method which takes instance type variables as parameters 
	//later initialise instance variables
	//return type is void
	public void setEmployeeData(String firstName,String lastName,int employeeId,int p,double salary){
	    this.firstName=firstName;
	    this.lastName=lastName;
	    this.employeeId=employeeId;
	    this.p=p;
	    this.salary=salary;
	}
	//implement calculate method no parameters and no return type
	//increment salary based on condition
	public void calculateSalary(){
	    if(p>5||p<10)
	        salary+=5000;
	    else if(p>10||p<20)
	        salary+=10000;
	    else if(p<20)
	    salary+=15000;
	}


	//override toString method
	public String toString(){
	    return "firstName="+firstName+"\nlastName="+lastName+"\nemployeeId="+employeeId+"\nsalary="+salary+"\nnoofprojects="+p;
	}
	
}
----------------------------------------------------
public class Tester {

	public static void main(String[] args) {

		//create Employee object
        Employee e=new Employee();
		
		//call setEmployeeData() method by passing values
        e.setEmployeeData("Ravali","Nimma",1,5,2000);
		
		//print employee values using toString method

		// call calculateSalary() method
		e.calculateSalary();
		//print employee values using toString method
	   String st=e.toString();
	   System.out.println(st);
	}

}
===============================================================================
Create a class Address (Business Logic Class)

 Instance Variables:

 private String cityName;

 private String districtName;

 private String stateName;

 Create a parameterized constructor initialize the instance variable of the class.

 

 Override toString() from Object class to print Address class properties.

 

 Create a class Employee (Business Logic Class)

 Instance Variables:

 private int empId;

 private String empName;

 private Address address; //HAS-A relation

 Create a parameterized constructor initialize the instance variable of the class.

 

 Override toString() from Object class to print Employee class properties.

 

 Create a class Main (Executable Logic Class) which contains main method to print Employee class properties using toString() method.



Output:



Employee[

 Employee Number: 123

 Employee Name: Naresh IT

 Address[ City: Ameerpet, District: Hyderabad, State: Telangana ]

]




//BLC class for Address
import java.util.*;
class Address {
	
	//instance variables
	private String city;
	private String district;
	private String state;
	

	//parameterized constructor is used to assign values to instance variables
	public Address(String city, String district, String state) {
	    this.city=city;
	    this.district=district;
	    this.state=state;
	}
	
	// this toString method is used to print Address object's instance variable details
	public String toString() {
		String address = "[City: "+city+", District: "+district+", State: "+state+".]";
		return address;
	}
}

//BLC class for Employee
class Employee{
	//instance variables
	private int employeeId;
	private String employeeName;
	private Address empAddress;
	
	//parameterized constructor is used to assign values to instance variables
	public Employee(int employeeId, String employeeName, Address empAddress) {
		this.employeeId=employeeId;
		this.employeeName=employeeName;
		this.empAddress=empAddress;
	}
	
	// this toString method is used to print Employee object's instance variable details
		public String toString() {
			String employee = "Employee [Employee Number: "+employeeId+", Employee Name: "+employeeName+", Address "+empAddress+"]";
			return employee;
		}
}


//An ELC class to test our code
public class EmployeeDetails {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the EmpName: ");
		String name=sc.nextLine();
		System.out.println("Enter the EmpId: ");
		int id=sc.nextInt();
		System.out.println("Enter the EmpAdd:- \n1. Enter the City: ");
		String city=sc.next();
		System.out.println("2. Enter the District: ");
		String district=sc.next();
		System.out.println("3. Enter the State: ");
		String state=sc.next();
		System.out.println("------------------------");
		
		//create an object to Address class using parameterized constructor
		Address ad=new Address(city,district,state);
		
		//create an object to Employee class using parameterized constructor
		Employee emp=new Employee(id,name,ad);
	
		//call toString method to print employee details
		System.out.println("-------------------------");
		System.out.println(emp);
		
	}

}
====================================================================
Create a class Order (Business Logic Class)

 Instance Variables:

 private int orderId;

 private String itemName;

 private double itemPrice;

 Create a parameterized constructor initialize the instance variable of the class.

 Override toString() from Object class to print Order class properties.

 

 Create a class Customer (Business Logic Class)

 Instance Variables:

 private int customerId;

 private String customerName;

 private String customerAddress;

 private Order order; //HAS-A relation

 Create a parameterized constructor initialize the instance variable of the class.

 Override toString() from Object class to print Customer class properties.

 

 Create a class Zomato (Executable Logic Class) which contains main method to print Customer class properties using toString() method.

Output:

Customer[

 Customer Id: 232

 Customer Name: Ravi Kumar

 Customer Addres: Ameerpet

 Order[ Order ID: 24, Item Name: Burger, Item Price: 149.0 ]

]

 

 

//BLC class for Order
import java.util.*;
class Order {
	
	//instance variables
	private int orderId;
	private String itemName;
	private double itemPrice;

	//parameterized constructor is used to assign values to instance variables
	public Order(int orderId, String itemName, double itemPrice) {
		this.orderId=orderId;
		this.itemName=itemName;
		this.itemPrice=itemPrice;
	}
	
	// this toString method is used to print Order object's details
	public String toString() {
		String order = "[Order ID: "+orderId+", Item Name: "+itemName+", Item Price: "+itemPrice+" ]";
		return order;
	}
}

//BLC class for Customer
class Customer{
	//instance variables
	private int customerId;
	private String customerName;
	private String customerAddress;
	private Order order;
	
	//parameterized constructor is used to assign values to instance variables
	public Customer(int customerId, String customerName, String customerAddress, Order order) {
		this.customerId=customerId;
		this.customerName=customerName;
		this.customerAddress=customerAddress;
		this.order=order;
	}
	
	// this toString method is used to print Customer object's details
		public String toString() {
			String customer = "Customer [Customer Id: "+customerId+", Customer Name: "+customerName+", Customer Addres: "+customerAddress+", Order"+order+"]";
			return customer;
		}
}


//An ELC class to test our code
public class Zomato {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the CustomerName: ");
		String name=sc.nextLine();
		System.out.println("Enter the CustomerAddress: ");
		String ad=sc.nextLine();
		System.out.println("Enter the CustomerID: ");
		int id=sc.nextInt();
		System.out.println("----------------------------");
		System.out.println("----------------------------");
		System.out.println("Enter the Order Details Bellow :-");
		System.out.println("1. Order ID: ");
		int oid=sc.nextInt();
		System.out.println("2. Item Name: ");
		String oname=sc.next();
		System.out.println("3. Item Price: ");
		double oip=sc.nextDouble();
		System.out.println("----------------------------");
		//create an object to Order class using parameterized constructor
		Order ord=new Order(oid,oname,oip);
		
		//create an object to Customer class using parameterized constructor
		Customer cus=new Customer(id,name,ad,ord);
		
		//call toString method to print Customer details
		System.out.println("----------------------------");
		System.out.println(cus);
		System.out.println("----------------------------");
	}

}
=======================================================================================
Which of the following is/are true about constructors in Java?
a.Constructor name should be same as class name.
b.If you don’t define a constructor for a class, a default parameter less constructor is automatically created by the compiler.
c.The default constructor calls super() and initializes all instance variables to default value like 0, null.
d.If we want to call parent class constructor, it must be called in first line of constructor.



A. 1,2 and 3


B.2


C. 1

Correct Answer
D. 1,2,3 and 4

 Correct
Question: 2
Which of the following modifier is not applicable for constructors?



A. private      

B. protected


C. public

Correct Answer
D. final

 Correct
Question: 3
The implicit return type of a constructor is ?



A. void


B. There is no return type

Correct Answer
C. a class object in which it is defined


D. None of these

 Correct
Question: 4
public class Test
{ }
What is the prototype of the default constructor ?



A. public Test(void)


B. Test()


C. Test(void)

Correct Answer
D. public Test()

 Correct
Question: 5
Can we define method with same name of class name?


Correct Answer
A. Yes


B. No

 Correct
Question: 6
What happens if we add return type to constructor ?



A. Compile time error


B. Run Time Error

Correct Answer
C. JVM treats that as method


D. None of these

 Correct
Question: 7
Can we declare constructor as private ?


Correct Answer
A. Yes


B. No

 Correct
Question: 8
What is the default accessibility modifier of a default constructor?



A. private


B. protected


C. default

Correct Answer
D. same as class accessibility modifier

 Correct
Question: 9
Can we define a constructor using all four access modifiers: public, protected, default and private?


Correct Answer
A. Yes


B.No

 Correct
Question: 10
Choose correct option for the following code

public class ConstructorTest {
public int a = 10;
public String ConstructorTest(int a) {
this.a = a;
}
}



A. Run time error


B. No error

Correct Answer
C. Compile time error


D. 10

 Correct
Question: 11
Choose correct option for the following code

public class ConstructorTest {

public int a = 10;
public ConstructorTest() {
}
public ConstructorTest(int a) {
    this.a = a;
    System.out.println(a);
}

public static void main(String[] args) {
    ConstructorTest test = new ConstructorTest();
}
}



A. Run time error

Correct Answer
B. Run successfully


C. Compile time error


D. 10

 Correct
Question: 12
What is the output of the following code
public class ConstructorTest {
public int a = 100;
public ConstructorTest() {
System.out.println(a);
}

public static void main(String[] args) {
    ConstructorTest test = new ConstructorTest();
}
}



A. Runtime error


B. Compile time error

Correct Answer
C. 100


D. No Output

 Correct
Question: 13
Choose correct option for the following code
public class ConstructorTest {
int a;
public ConstructorTest(int a) {
this.a =a;
}

public static void main(String[] args) {
    ConstructorTest nit = new ConstructorTest(10);
    nit.a;
}
}



A. Runtime error

Correct Answer
B. Compile time error


C. No Output


D. 10

 Correct
Question: 14
What is the output of the below program?

class T
{
int pCode= 99;
}
public class Main
{
public static void main(String args[])
{
T t1 = new T();
System.out.println(t1.pCode);
}
}


Correct Answer
99


Compiler error


No Output


Runtime error

 Correct
Question: 15
What is the output of the below program?
class T {
int x = 23;
T() {
x = 45;
}
}
public class Main {
public static void main(String args[]) {
T t1 = new T();
System.out.println(t1.x);
}
}



23

Correct Answer
45


Compiler error


No Output

 Correct
Question: 16
What is the output of the below program?
class Complex {
private double re, im;
public Complex(double re, double im) {
this.re = re;
this.im = im;
}
Complex(Complex c) {
System.out.println(“Copy constructor called”);
re = c.re;
im = c.im;
}
public String toString() {
return “(” + re + ” + ” + im + “)”;
}
}
class Main {
public static void main(String[] args) {
Complex c1 = new Complex(10, 15);
Complex c2 = new Complex(c1);
Complex c3 = c1;
System.out.println(c2);
}
}



Copy constructor called


(10.0 + 15.0)


Compiler error

Correct Answer
Copy constructor called
(10.0 + 15.0)

 Correct
Question: 17
What is the output of the below program?
public class Test7 {
private Test7 (int x) { //line 1
System.out.print(x);
}
private static Test7() { //line 2
System.out.print(25);
}
public static void main(String[] args){
Test7 t = new Test7(35);
}
}



25


null

Correct Answer
Compiler error


35

 Correct
Question: 18
What is the output of the below program?
public class Test7 {
private Test7 (int x) { //line 1
System.out.print(x);
}
private final Test7() { //line 2
System.out.print(25);
}
public static void main(String[] args){
Test7 t = new Test7(35);
}
}



25

Correct Answer
Compiler error


null


35

 Correct
Question: 19
What is the output of the below program?
class Product {
public int num;
public void call(Product ref) {
ref.num++;
}
}
public class Test13 {
public static void main (String[] args) {
Product p = new Product();
p.num = 1;
p.call(p);
System.out.println(p.num);
}
}



Compiler error


Runtime error


1

Correct Answer
2

 Correct
Question: 20
What is the output of the below program?
class Product {
int x;
int y;
public Product(int x,int y) {
this.x = x;
this.y = y;
}
public void call() {
System.out.println(“call method called”);
}
}
public class Test14 {
public static void main (String[] args) {
Product p = new Product();
p.call();
}
}


Correct Answer
Compiler error


Runtime error


No output


call method called

 Correct
Question: 21
What is the output of the below program?
class Employee{
private String name;
public Employee(String name) {
this.name=name;
}
}
public class Test16 {
public static void main(String[] Java) {
Employee e = new Employee(“JavaDeveloper”);
System.out.println(“Emp Name : “+e.name);
}
}



Emp Name : JavaDeveloper

Correct Answer
Compiler error


Runtime error


No output

 Correct
Question: 22
What is the output of the below program?
class Person{
Person(){
System.out.println(“Hello constructor!”);
return;
}
}
public class Test17 {
public static void main(String[] var) {
Person p = new Person();
}
}


Correct Answer
Hello constructor!


Compiler error


Runtime error


No output

===============================================================
Create a class Employee (Business Logic Class)

 Instance Variables:

 employeeNumber : private-int

 employeeName : private-String

 employeeSalary:private -double

 

 Create a parameterized constructor to initialilize all the fields.

 

 Create getters method for all the instance variables.

 

 Create another class Main which contains main method (ELC class) which will receive all the instance variable value from BLC class.

 

 In this ELC class print the following details

 a) If salary is >=60000, Print Employee is a Developer

 b) If salary is >=40000 and <60000 , Print Employee is a Designer

 c) If Salary is <40000 , Print Employee is a Tester



Input:

232, "Naresh Kumar", 43000



Output:

Employee is a Designer



//BLC class
import java.util.Scanner;
class Employee{
    
    // Declare instance variables
	private int empNumber;
	private String empName;
	private double empSalary;
	// parameterized constructor is used to assign values to instance variables
	 Employee(int empNumber, String empName, double empSalary){
	this.empNumber=empNumber;
	this.empName=empName;
	this.empSalary=empSalary;
	}
	
	 /**
	  * getter method for variable employeeNumber
	  * @return int
	  */
	public int getEmployeeNumber() {
		return this.empNumber;
	}
	/**
	 * getter method for employeeName
	 * @return String
	 */
	public String getEmployeeName() {
		return this.empName;
	}
	/**
	 * getter method for employeeSalary
	 * @return double
	 */
	public double getEmployeeSalary() {
		return this.empSalary;
	}
}

// ELC class with main method to test our code

public class AccessInstanaceVariablesUsingGetter {

	public static void main(String[] args) {
		
		// create an object to Employee class using parameterized constructor
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the empnumber");
		int empnumber=sc.nextInt();
		System.out.print("enter the empName");
		String empName=sc.nextLine();
		empName=sc.nextLine();
		System.out.print("enter the empSalary:");
		double empSalary=sc.nextDouble();
		Employee ob=new Employee(empnumber,empName,empSalary);
		// get salary from getter method
		Double sal=ob.getEmployeeSalary();
		//print designation based on salary
		if(sal>=60000)
		System.out.println("Developer");
		else if(sal>=40000)
		System.out.println("designer");
		else if(sal<40000)
		System.out.println("Tester");
	}

}
=====================================================================
Create a class Employee (Business Logic Class)

Instance Variables: 

employeeId :private-int

employeeName : private-String

employeeSalary: private-double



Create a parameterized constructor to initialilize all the fields.



Create a static method getEmployeeObject() in the Employee class

  Method Name : getEmployeeObject()

   Parameter : no parameter

  Return type : Employee

Access modifier : public



getEmployeeObject() method of Employee class should take employeeId, employeeName, employeeSalary from the keyboard to initialize the instance variables, Create and return the Employee object from this method.



Override toString() from Object class to print Employee class properties.



Create another class Main which contains main method (ELC class). Accept 5 Employee Object from keyboard and print their data using toString() method 

import java.util.Scanner;

public class Employee {
    private int empId;
    private String empName;
    private double empSalary;
    public Employee(int empId,String empName,double empSalary){
        this.empId=empId;
        this.empName=empName;
        this.empSalary=empSalary;
    }
    public static Employee getEmployeeObject(){
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the empid:");
        int empid=sc.nextInt();
        System.out.println("enter the empName:");
        String empname=sc.nextLine();
        empname=sc.nextLine();
        System.out.println("enter the empsalary:");
        double empsalary=sc.nextDouble();
        return new Employee(empid,empname,empsalary);
    }
    
    public String toString(){
        return "empid="+empId+"empName="+empName+"empsalary="+empSalary+" ";
    }
}
//Declare instance variables
	
	
	//create parameterised constructor
	
	
	//create static method. which should take values from scanner
	
	
	// override toString method to print instance variable values
===============================================
import java.util.Scanner;
public class EmployeeTest {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the no of objects:");
        int objects=sc.nextInt();
		// iterate loop for 5 times and call getEmployeeObject for each loop
	for(int i=0;i<=objects;i++){
		System.out.println(Employee.getEmployeeObject());
	//	System.out.println()
	}

	}

}

	
==================================================================================

Correct
Question: 1
What will be the output of below program?
public class A {
int a;
int b;

public void add(int a, int b) {
    System.out.print(a + b+" ");
    a = 10;
    b = 20;
    System.out.println(this.a + this.b);
}

public static void main(String[] args) {

    A a = new A();
    a.add(a.a, a.b);
    System.out.println(a.a+" "+a.b);
}
}



A. 10 20
0 0


B. 0 0
10 20

Correct Answer
C. 0 0
0 0


D. 10 0
0 20

 Correct
Question: 2
What will be the output of below program?
public class A {
int a=10;
int b=20;

public void m1(int a, int b) {
    System.out.println(a+b);
}
public void m2() {
    System.out.println(b-a);
}

public static void main(String[] args) {

    A a = new A();
    a.m1(a.a, a.b);
    a.a=30;
    a.b=50;
    a.m2();
}
}



A. 30 50

Correct Answer
B. 30 20


C. 80 20


D. 30 -10

 Correct
Question: 3
What will be the output of below program?
public class A {
int a=10;
int b=20;

public void m1(int a, int b) {
    System.out.println(a+b);
}
public void m2() {
    System.out.println(b-a);
}

public static void main(String[] args) {

    A a1 = new A();
    a1.m1(a1.a, a1.b);
    A a2 = new A();
    a2.a=30;
    a2.b=50;
    a2.m2();
}
}



A. 30 10


B. 80 20

Correct Answer
C. 30 20


D. 30 -10

 Correct
Question: 4
What will be the output of below program?

public class A {
int a;
int b;

public void add(int a, int b) {
    System.out.println(a + b);
    this.a = 10;
    b = 20;
    System.out.println(this.a + this.b);
}

public static void main(String[] args) {

    A a = new A();
    a.add(a.a, a.b);
}
}


Correct Answer
a. 0 10


b. 0 0


c. 0 20


d. 10 20

 Correct
Question: 5
What will be the output of below program?

public class A {
int a;
int b;

public void add(int a, int b) {
    System.out.println(a + b);
    this.a = 10;
    b = 20;
    System.out.println(this.a + b);
}

public static void main(String[] args) {

    A a = new A();
    a.add(a.a, a.b);
}
}



a. 0 10


b. 0 0

Correct Answer
c. 0 30


d. 10 20


e. 0 20

 Correct
Question: 6
he compiler adds a default no-argument constructor to a class if it _.


Correct Answer
a. does not define a constructor at all.


b. defines at least one constructor with arguments


c. defines two constructors with arguments


d. None of the above

 Correct
Question: 7
What is the output of the below Java program?
public class TestingConstructor
{
void TestingConstructor()
{
System.out.println(“Amsterdam”);
}

TestingConstructor()
{
System.out.println(“Antarctica”);
}

public static void main(String[] args)
{
TestingConstructor tc = new TestingConstructor();
}
}


Correct Answer
a. Antarctica


b. Amsterdam


c. No output


d. Compiler error

 Correct
Question: 8
Memory is allocated to an object once the execution of _ is over in Java language.



a. main method

Correct Answer
b. constructor


c. class


d. method

 Correct
Question: 9
What is the output of the below Java program with a final local variable?
public class TestingMethods8
{
int cars = 20;
void change(final int cars)
{
cars = 10;
this.cars = cars;
}
public static void main(String[] args)
{
TestingMethods8 t8 = new TestingMethods8();
t8.change(30);
System.out.println(t8.cars);
}
}



a. 30


b. 20


c. 10

Correct Answer
d. Compiler error

 Correct
Question: 10
in Java, add a _ to a constructor to convert it into a method.



a. only void


b. private

Correct Answer
c. return type


d. some conditions

 Correct
Question: 11
state TRUE or FALSE.
A Java method can have the same name as the class name.


Correct Answer
a. TRUE


b. FALSE


c. May be TRUE or FALSE


d. Can’t Say

 Correct
Question: 12
What is the output of the below Java program?
class Cricket
{ int runs; }

class Testing19
{
public static void main(String[] args)
{
Cricket c1 = new Cricket();
c1.runs = 250;
Cricket c2;
c2 = c1;
c2.runs = 300;
System.out.println(“Runs= ” + c1.runs);
}
}



a. Runs= 0


b. Runs= 250

Correct Answer
c. Runs= 300


d. Compiler error

 Correct
Question: 13
Determine output:
public class Test{
int a = 10;

  public void method(int a){
        a += 1;
        System.out.println(++a);
  }
  public static void main(String args[]){
        Test t = new Test();
        t.method(3);
  }
}



(a) 4

Correct Answer
(b) 5


(c) 12


(d) 11

 Correct
Question: 14
What would be behaviour if the constructor has a return type?



(a) Compilation error


(b) Runtime error

Correct Answer
(c) Compilation and runs successfully


(d) Only String return type is allowed

 Correct
Question: 15
What is true about constructor?



(a) It can contain return type

Correct Answer
(b) It can take any number of parameters


(c) It can have any non access modifiers


(d) Only we can use public modifier with Constructor

 Correct
Question: 16
How many numeric data types are supported in Java?



A. 8


B. 4


C. 2

Correct Answer
D. 6

 Correct
Question: 17
What is the data type for the number 9.6352?



A. float.

Correct Answer
B. double.


C. Float.


D. Double.

 Correct
Question: 18
Which methods can access to private attributes of a class?



A. Only static methods of the same class.


B. Only instance of the same class.

Correct Answer
C. Only methods those defined in the same class.


D. Only classes available in the same package.

 Correct
Question: 19
_ statement is Java’s multi-way branch statement.


Correct Answer
A) switch


B) nested if


C) break


D) if-else-if ladder

 Correct
Question: 20
A car dealership needs a program to store information about the cars for sale.For each car, they want to keep track of the following information: the number of doors (2 or 4),its average number of miles per gallon, and whether the car has air conditioning. Which of the following is the best design?


Correct Answer
A. Use one class, Car, which has three attributes: int numDoors, double mpg, and boolean hasAir.


B. Use four unrelated classes: Car, Doors, MilesPerGallon, and AirConditioning


C. Use a class, Car, which has three subclasses: Doors, MilesPerGallon, and AirConditioning


D. Use a class Car, which has a subclass Doors, with a subclass AC, with a subclass MPG.


E. Use three classes: Doors, AirConditioning, and MilesPerGallon, each with a subclass Car.

 Correct
Question: 21
A student has created a Movie class. The class contains variables to represent the following.
A String variable called title to represent the title of the movie

A String variable called director to represent the director of the movie

A double variable called rating to represent the rating of the movie

The object scaryMovie will be declared as type Movie. Which of the following descriptions is accurate?



A. An attribute of the scaryMovie class is title.

Correct Answer
B. scaryMovie is an instance of the Movie class.


C. Title, director, and rating are instances of the scaryMovie object.


D. An attribute of the Movie instance is scaryMovie


E. Movie is an instance of scaryMovie.

 Correct
Question: 22
A student has created a Cat class. The class contains variables to represent the following.
A String variable called color to represent the color of the cat

A String variable called breed to represent the breed of the cat

An int variable called age to represent the age of the cat

The object myCat will be declared as type Cat. Which of the following descriptions is accurate?



A. An attribute of breed is String.


B. color, breed, and age are instances of the Cat class.


C. Cat is an instance of the myCat class.

Correct Answer
D. age is an attribute of the myCat object.


E. An attribute of Cat is myCat.

 Correct
Question: 23
Which keyword is used to refer to the current instance of an object within a class?



a) object

Correct Answer
b) this


c) self


d) class

 Correct
Question: 24
Which of these is NOT an advantage of using classes and objects in Java?


Correct Answer
a) Improved performance


b) Modular structure


c) Reusability of code


d) Easy to manage and control access

 Correct
Question: 25
What are the main components of a class?



a) Attributes and Packages


b) Objects and References

Correct Answer
c) Methods and Attributes


d) Constructors and Destructors

 Correct
Question: 26
What do we mean by the “state” of an object?



a) Its behavior

Correct Answer
b) The values assigned to its instance variables


c) Its methods


d) Its interface

 Correct
Question: 27
What is an object in Java?



a) A reference to a class

Correct Answer
b) A runtime entity


c) A method


d) An attribute

 Correct
Question: 28
Choose the correct way of creating an object of the below class.
class Table
{
Table(){System.out.println(“Table Created”);}
}



A) Table t = new Table;

Correct Answer
B) Table t = new Table();


C) Table() t = new Table();


D) None of the above

 Correct
Question: 29
Choose the correct statements about choosing a name for a class in Java.



A) The class name can start with only a letter or underscore or dollar sign.


B) The class name can contain numbers


C) The class name can not start with a number

Correct Answer
D) All the above

 Correct
Question: 30
Creating an object from a class is also called ____.



A) Initializing

Correct Answer
B) Instantiating


C) Interfacing


D) None of the above

=============================================
Create a Java (BLC)class named Employee with following attributes:

private String name 

private int age 

private double salary and 

private String department



Implement a parameterised constructor to initialize all the instance variable of Employee.

Implement a copy constructor for the Employee class that takes a Employee object and initialize the new Employee object with the same attributes.



Take a pair of setter and getter method for all the instance variables.

In the Employee class, create a method named raiseSalary(double percentage) that increases the salary of the employee by the specified percentage.



Create a ELC class and create Employee object and sets its attributes. 

Then, use the raiseSalary method to increase the employee's salary by 10%. Create a copy of the Employee object using the copy constructor and print the attributes of both the original and the copy of the Employee objects to confirm that the copy constructor works correctly and that the raiseSalary method did not affect the attributes of the copy of the Employee object.

//BLC CLASS
package CopyConstructor;

public class Employee1 {
	private String name; 
	private int age;
	private double salary;
	private String department;
	public Employee1(String name, int age, double salary, String department) {
		super();
		this.name = name;
		this.age = age;
		this.salary = salary;
		this.department = department;
	}
	public Employee1(Employee1 emp) {
		name=emp.name;
		age=emp.age;
		salary=emp.salary;
		department=emp.department;
	}
	public void raiseSalary(double per) {
		double per1=this.salary*(per/100);
		this.salary+=per1;
		//this.salary+=salary*=per;
		//this.salary+=(1+per/100);
	}
	@Override
	public String toString() {
		return "Employee1 [name=" + name + ", age=" + age + ", salary=" + salary + ", department=" + department + "]";
	}
	
}

//ELC CLASS

package CopyConstructor;

import java.util.Scanner;

public class ElcClass1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("enter the name:");
		String name=sc.next();
		sc.nextLine();
		System.out.print("enter the age:");
		int age=sc.nextInt();
		System.out.print("enter the salary");
		double sal=sc.nextDouble();
		System.out.print("enter the department");
		String dep=sc.next();
		Employee1 e1=new Employee1(name,age,sal,dep);
		Employee1 e2=new Employee1(e1);
		e2.raiseSalary(10);
		System.out.println(e1);
	     System.out.println(e2);
		
	}

}
=======================================================================================

Create a Java class named Car with following attributes:

 private String brand

 private String model

 private int year and

 private Driver driver



Implement a parameterised constructor to initialise all the instance variable of Car.

Implement one copy constructor for the Car class that takes a Car object and initialize the new Car object with the same attributes.

Take a pair of setter and getter method for all the instance variables.

In the Car class, create a method named changeDriver(Driver newDriver) that changes the driver of the car to the specified driver.



Create a Driver class and the class should have following attributes:

 private String name and

 private int age 

Implement a parameterised constructor to initialise all the instance variable of Driver.

Take a pair of setter and getter method for all the instance variables.



Create a Main class that creates a Car object and sets its attributes and the attributes of its driver. Then, create a copy of the Car object using the copy constructor and print the attributes of both the original and the copy of the Car objects to confirm that the copy constructor works correctly.

Finally, use the changeDriver() method to change the driver of the original Car object, and print the attributes of both the original and the copy of the Car objects again to confirm that the copy constructor created a deep copy of the Driver object and that the changeDriver method did not affect the driver of the copy of the Car object.


//BLC CLASS1
------------
package CopyConstructor;

public class Driver2 {
	 private String name;
	 private int age;
	public Driver2(String name, int age) {
		super();
		this.name = name;
		this.age = age;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	@Override
	public String toString() {
		return "Driver2 [name=" + name + ", age=" + age + "]";
	}
	 
}
---------------------------------------------
BLC CLASS2
----------
package CopyConstructor;


public class Car2 {
	private String brand;
	 private String model;
	 private int year;
	 private Driver2 driver;//HAS-A=RELATION
	public Car2(String brand, String model, int year, Driver2 driver) {
		super();
		this.brand = brand;
		this.model = model;
		this.year = year;
		this.driver = driver;
	}
	 public Car2(Car2 c1){
		 brand=c1.brand;
		 model=c1.model;
		 year=c1.year;
		 driver=c1.driver;
	 }
	 
	 public String getBrand() {
		return brand;
	}
	public void setBrand(String brand) {
		this.brand = brand;
	}
	public String getModel() {
		return model;
	}
	public void setModel(String model) {
		this.model = model;
	}
	public int getYear() {
		return year;
	}
	public void setYear(int year) {
		this.year = year;
	}
	public Driver2 getDriver() {
		return driver;
	}
	public void setDriver(Driver2 driver) {
		this.driver = driver;
	}
	public void changeDriver(Driver2 newDriver) {
		 this.driver=newDriver;
	 }
	@Override
	public String toString() {
		return "Car2 [brand=" + brand + ", model=" + model + ", year=" + year + ", driver=" + driver + "]";
	}
	 
}
-----------------------------------------------
ELC CLASS
---------

package CopyConstructor;

public class Maincar2 {

	public static void main(String[] args) {
		Driver2 d1=new Driver2("ravali",21);
		Car2 c1=new Car2("bmw","motorola",2020,d1);
		Driver2 d2=new Driver2("ravi",20);
		Car2 c2=new Car2(c1);
		c1.changeDriver(d2);
		System.out.println(c1);
		System.out.println(c2);
	}
}

================================================================================

Create a BLC class called A

 

 Instance variable

 private int data = 15;

 

 Create a no-argument constructor, where create the object for class B (Another BLC class) and call the non-static display method available in class B.

 

 Create an instance method show() in class A, which will print instance variable data.

 

 Create an another BLC class B

 Instance variable

 private A obj;

 

 Create a parameterized constructor which takes class A as a parameter to initialize the instance variable

 

 Create a display method inside class B which internally calling the show() method of class A

 

 Create an ELC class Test which contains main method to test the application.

 

 Note :- BLC and ELC all the classes must be declared as public.

 

 Expected Output:

instance variable data in A = 15

BLC CLASS1
---------
package this_keyword;

public class A1 {
	 private int data = 15;
	public A1() {
		
		B1 b=new B1(this);
		b.display();
	}
	public void show() {
		System.out.println("Data ="+data);
	}
}

BLC CLASS2
----------
package this_keyword;

public class B1 {
	 private A1 obj;//HAS-A-RELATION//OBJ=1000X

	public B1(A1 obj) {//OBJ=1000X
		super();
		this.obj =obj;
	}
	 public void display() {
		obj.show(); 
	 }
}
ELC CLASS
----------
package this_keyword;

public class ElcMain1 {
	public static void main(String[] args) {
    A1 a=new A1();//A=1000X
}
}
===========================================================

 Correct
Question: 1
What is the output of the following code?
class Example {
int x;
int y;

public Example(int X, int Y) {
    x = X;
    y = Y;
}

public Example(Example e) {
    this.x = e.x;
    this.y = e.y;
}
}

public class TestMCQ {
public static void main(String[] args) {
Example e1 = new Example(10, 20);
System.out.println(e1.x +” “+e1.y);
Example e2 = new Example(e1);
e1.x = 30;e2.y = 50;
System.out.println(e2.x+” “+e2.y);
}
}


Correct Answer
A. 10 20
10 50


B. 10 20
30 50


C. 10 20
10 20


D. 10 20
30 20

 Incorrect
Question: 2
What is the output of the following code?
class Example {
int x;
int y;

public Example(int x, int y) {
    this.x = x;
    this.y = y;
}
public Example(Example e) {
    e.x = this.x;
    e.y = this.y;
}
}

public class TestMCQ {
public static void main(String[] args) {
Example e1 = new Example(10, 20);
System.out.println(e1.x +” “+e1.y);
Example e2 = new Example(e1);
e1.x = 30;e1.y = 30;
System.out.println(e2.x+” “+e2.y);
}
}



A. 10 20
30 30


B. 0 0
0 0

Incorrect Answer
C. 10 20
10 20

Correct Answer
D. 10 20
0 0

 Correct
Question: 3
What is the output of the following code?
class Example {
int x;
int y;

public Example(int x, int y) {
    this.x = x;
    this.y = y;
}
public void Example(Example e) {
    this.x = e.y;
    this.y = e.y;
}
}

public class TestMCQ {
public static void main(String[] args) {
Example e1 = new Example(10, 20);
Example e2 = new Example(e1);
e1.x = 30;e1.y = 30;
System.out.println(e1.x +” “+e1.y);
System.out.println(e2.x+” “+e2.y);
}
}



A. 10 20
30 30


B. 30 30
10 20


C. 30 30
30 30

Correct Answer
D. Compile time error

 Correct
Question: 4
What is the output of the following code?
class Example {
int x;
int y;

public Example(int x, int y) {
    this.x = x;
    this.y = y;
}

public Example(Example e, Example e1) {
    this.x = e1.y + e.y;
    this.y = e.x + e1.x;
}
}

public class TestMCQ {
public static void main(String[] args) {
Example e1 = new Example(10, 20);
Example e2 = new Example(e1, e1);
System.out.println(e1.x + ” ” + e1.y);
System.out.println(e2.x + ” ” + e2.y);
}
}



A. 10 20
30 40


B. 10 20
20 40

Correct Answer
C. 10 20
40 20


D. 20 40
20 40

 Incorrect
Question: 5
What is the output of the following code?
class Example {
int x;
int y;

public Example(int x, int y) {
    this.x = x;
    this.y = y;
}

public Example(Example e) {
    this.x += ++e.x;
    this.y += ++e.y;
}
}

public class TestMCQ {
public static void main(String[] args) {
Example e1 = new Example(10, 20);
Example e2 = new Example(e1);
System.out.println(e1.x + ” ” + e1.y);
System.out.println(e2.x + ” ” + e2.y);
}
}


Correct Answer
A. 11 21
11 21

Incorrect Answer
B. 10 20
11 21


C. 11 21
10 20


D. Compile time error

 Correct
Question: 6
What is the output of the following code?
class Calculator {
IntegralNumber num;
FloatingNumber floatNum;

public Calculator(IntegralNumber num, FloatingNumber floatNum) {
    super();
    this.num = num;
    this.floatNum = floatNum;
}

public void add(int a , double b) {
    System.out.println(a+b);
    System.out.println(num.a+floatNum.a);
}
}
class IntegralNumber {
int a = 2;
int b = 3;
public int add() {
return a+b;
}
}
class FloatingNumber {
double a = 5.5;
double b = 10.5;
public double add() {
return a+b;
}
}
public class TestMCQ {
public static void main(String[] args) {
IntegralNumber i = new IntegralNumber();
FloatingNumber f = new FloatingNumber();
new Calculator(i, f).add(i.add(),f.add());
}
}


Correct Answer
A. 21.0
7.5


B. 21
7.5


C. 5.0
21.0


D. 7.0
16.0


E. No Output

 Correct
Question: 7
What is the output of the following code?
class Student {
String name = “Virat”;
int id = 18;
Address address;

public void details(Address address) {
    this.address = address;
    System.out.println(name + " is from "+address.city);
    this.address.city = "Delhi";
    this.address.pin = 567009;
}
}
class Address {
String city;
int pin;
}
public class TestMCQ {
public static void main(String[] args) {
Address address = new Address();
Student s = new Student();
s.details(address);
s.details(address);

}
}



A. Virat is from null
Virat is from null

Correct Answer
B. Virat is from null
Virat is from Delhi


C. Virat is from Delhi
Virat is from Delhi


D. Virat is from Delhi
Virat is from null


E. Compile time error

 Correct
Question: 8
What is the output of the following code?
class A{
int a;
int b;
public A(int a, int b) {
super();
this.a = a;
this.b = b;
}
public A(A a) {
this.a = a.a;
this.b = a.b;
a=null;
}
@Override
public String toString() {
return “A [a=” + a + “, b=” + b + “]”;
}
}
public class TestMCQ {
public static void main(String[] args) {
A a1 = new A(5,6);
A a2 = new A(a1);
System.out.println(a1);
System.out.println(a2);
}
}


Correct Answer
A. A [a=5, b=6]
A [a=5, b=6]


B. A [a=5, b=6]
null


C. null
A [a=5, b=6]


D. Compile time error


E. Runtime error

 Correct
Question: 9
What is the output of the following code?
class Bank {
private String name = “SBI”;
private String address = “Ameerpet”;
BankAccount acc = new BankAccount();

public String getName() {
    return name;
}
public String getAddress() {
    return address;
}
public void deposit(double amount) {
    acc.balance+=amount;
}
}
class BankAccount {
private String accHolderName = “Virat”;
private double balance = 10000;
public String getAccHolderName() {
return accHolderName;
}
public double getBalance() {
return balance;
}
}

public class TestMCQ {
public static void main(String[] args) {
Bank b = new Bank();
b.deposit(1000);
System.out.println(“Balance is : ” +b.acc.getBalance());
}
}



A. Balance is : 0


B. Balance is : 10000


C. Balance is :11000

Correct Answer
D. Compile time error

 Correct
Question: 10
What is the output of the following code?
class A {
private int a = 10;
private int b = 20;

public int add() {
    return a+b;
}
private int getA() {
    return a;
}

private int getB() {
    return b;
}
}

public class TestMCQ {
public static void main(String[] args) {
A a = new A();
int x = a.getA()+a.getB();
int y = a.add();
if(x==y)System.out.println(“Values are Same”);
else System.out.println(“Values are not same”);

}
}



A. Values are Same


B. Values are not same


C. Values are not same
Values are not same\

Correct Answer
D. Compile time error

 Correct
Question: 11
What is the correct syntax to call a method named “myMethod” from an object “myObject” ?


Correct Answer
A. myObject.myMethod();


B. myMethod.myObject();


c. myMethod();


D. myObject().myMethod();

=============================================================================

Product Class:



a. Develop a class named Product with private instance variables: productName, productCode, and price.



b. Implement a parameterized constructor to initialize these variables.



c. Implement a copy constructor for the Product class to create a copy of a given product object.



d. Provide getter methods for productName, productCode, and price to ensure encapsulation.



e. create one method changePrice with one Respective Price variable data type as a Parameter ,public Access Modifire to change the price of the Object 



MainClass:



a. Develop a MainClass to simulate the system.



b. Instantiate a Product object with some product details.



c. Use the copy constructor to create a copy of the original product.



d. Modify the price of the copied product and display both the original and copied product details to demonstrate the effect of the copy constructor.

package codehstest;

public class Product3 {
	private String productName;
	private int productCode;
	private int price;
	public Product3(String productName, int productCode, int price) {
		super();
		this.productName = productName;
		this.productCode = productCode;
		this.price = price;
	}
	public Product3(Product3 p) {
		productName = p.productName;
		productCode = p.productCode;
		price =p. price;
	}
	public String getProductName() {
		return productName;
	}
	public int getProductCode() {
		return productCode;
	}
	public int getPrice() {
		return price;
	}
	public void changePrice(int pr) {
		this.price=pr;
	}
	@Override
	public String toString() {
		return "Product [productName=" + productName + ", productCode=" + productCode + ", price=" + price + "]";
	}
	
}
------------------------------------------------

package codehstest;

public class Main3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Product3 p1=new Product3("milk",57,500);
		Product3 p2=new Product3(p1);
		System.out.println(p1);
		p2.changePrice(200);
		System.out.println(p2);
	}

}
==========================================================
Employee Class:

------------------

a. Develop a class named Employee with four instance variables: employeeName, employeeId, monthlySalary, and department. Make these variables private.



b. Implement a parameterized constructor for the Employee class to initialize these instance variables.



c. Create a method named calculateAnnualSalary in the Employee class that calculates and returns the annual salary of the employee (considering 12 months in a year).



d. Provide getter methods for employeeName, employeeId, monthlySalary, and department to ensure encapsulation.



Company Class:

---------------------



a. Develop a class named Company with two instance variables: companyName and Employee. Make these variables private.



b. Implement a parameterized constructor for the Company class to initialize these instance variables.



c. Create a method named printEmploymentStatus in the Company class that determines and prints the employment status for employee based on annual salary. Use the following status scale:



- Senior: Annual salary greater than 100,000

- Mid-level: Annual salary greater than 60,000

- Junior: Annual salary 60,000 or below



MainClass:

----------------

a. Develop a MainClass to simulate the system. Instantiate an Employee object with employee details.



b. Instantiate a Company object with the company's name and an Employee objects.



c. Call the calculateAnnualSalary method on Employee object to determine the annual salary.



d. Call the printEmploymentStatus method on the Company object to print the employment status for employee.

--------------------------------
BLC CLASS1
----------
package codehstest;

public class Employee4 {
	private String employeeName;
	private int employeeId;
	private int monthlySalary;
	private int department;
	public Employee4(String employeeName, int employeeId, int monthlySalary, int department) {
		super();
		this.employeeName = employeeName;
		this.employeeId = employeeId;
		this.monthlySalary = monthlySalary;
		this.department = department;
	}
	public int calculateAnnualSalary() {
		int as=12*this.monthlySalary;
		return as;
	}
	public int getas() {
		int cas=calculateAnnualSalary();
		return cas;
	}
	public String getEmployeeName() {
		return employeeName;
	}
	public int getEmployeeId() {
		return employeeId;
	}
	public int getMonthlySalary() {
		return monthlySalary;
	}
	@Override
	public String toString() {
		return "Employee4 [employeeName=" + employeeName + ", employeeId=" + employeeId + ", monthlySalary="
				+ monthlySalary + ", department=" + department +"annualsalary="+getas()+" ";
	}
	
}
--------------------
BLC CLASS2
----------

package codehstest;

public class Company4 {
	private String companyName;
	private Employee4 e;
	private String es;
	public Company4(String companyName, Employee4 e) {
		super();
		this.companyName = companyName;
		this.e = e;
	}
	public void printEmploymentStatus() {
	int asr=e.calculateAnnualSalary();	
	this.es=es;
	if(asr>100000)
		es="Senior";
	else if(asr>60000)
		es="mid=level";
	else es="Junior";	}
	@Override
	public String toString() {
		return "Company4 [companyName=" + companyName + ", e=" + e + ", es=" + es + "]";
	}
}
-------------------
ELC CLASS
---------
package codehstest;

public class Main4 {
public static void main(String[] args) {
	Employee4 e=new Employee4("ravali",1,40000,40);
	Company4 c=new Company4("ravi",e);
	c.printEmploymentStatus();
	System.out.println(c);
}
}
====================================================

Message Class:

------------------



a. Develop a class named Message with private instance variables: sender, recipient, and content.



b. Implement a parameterized constructor to initialize these variables.



c. Implement a copy constructor for the Message class to create a deep copy of a given message object.



d. Provide getter methods for sender, recipient, and content to ensure encapsulation.



e. create one method changeContent with one Respective content variable data type as a Parameter ,public Access Modifire to change the content of the Object 





MainClass:

-----------------

a. Develop a MainClass to test the system.



b. Instantiate a Message object with sender, recipient, and content.



c. Use the copy constructor to create a copy of the original message.



d. Modify the content of the copied message and display both the original and copied messages to demonstrate the effect of the copy constructor.

BLC CLASS
---------
package codehstest;

public class Message5 {
	private String sender;
	private String recipient;
	private String content;
	public Message5(String sender, String recipient, String content) {
		super();
		this.sender = sender;
		this.recipient = recipient;
		this.content = content;
	}
	public Message5(Message5 m) {
		this.sender = m.sender;
		this.recipient = m.recipient;
		this.content = m.content;
	}
	public String getSender() {
		return sender;
	}
	public String getRecipient() {
		return recipient;
	}
	public String getContent() {
		return content;
	}
	public void changeContent(String ms) {
		this.content=ms;
	}
	@Override
	public String toString() {
		return "Message5 [sender=" + sender + ", recipient=" + recipient + ", content=" + content + "]";
	}
	
}

ELC CLASS
---------
package codehstest;

public class Main5 {

	public static void main(String[] args) {
		Message5 m1=new Message5("ravali","gouth","Hello gouth");
		Message5 m2=new Message5(m1);
		m2.changeContent("Hi gouth");
		System.out.println(m1);
		System.out.println(m2);
	}

}
========================================================================

Class Circle is given to you. Add below details to the class

1. Instance variables:

radius: double.

2. Create a no constructor that assigns default values to instance variables.

3. Create parameterized constructor that accepts radius.

4. Create below methods,

Method name: getArea

Return type: double

This method should return the area of the circle. Return -1 if radius is negative.

Create a sub class of Circle with name Cylinder that inherits and add below details to the class

1. Instance variables:

height: double.

2. Create a No constructor that assigns default values to instance variables.

3. Create parameterized constructor that accepts radius, height.

4. Create below methods,

Method name: getVolume

Return type: double

This method should return the volume of the cylinder. Return -1 if height is negative.

An ELC class ShapeTester is given to you with a main method. Use this class to test your

solution's classes and methods.



Expected output:

Volume =:392.5

Area =:78.5

Volume =:1356.48

Area =:113.03999999999999

BlC Class
----------
package inheritance;

public class Circle1 {
double radius;
public Circle1() {
	radius=5;
}
public Circle1(double radius) {
	super();
	this.radius = radius;
}
public double getArea() {
	double p=3.14;
	double area=p*(this.radius)*(this.radius);
	if(area<0)
		return -1;
	else return area;
}
//public String getradius() {
//	return ""+radius;
//}
}
class Cylinder extends Circle1 {
	double height;
public Cylinder() {
	height=7;
}
	public Cylinder(double radius,double height) {
		super(radius);
		this.height = height;
	}
	public double  getVolume() {
		double volume=3.14*super.radius*super.radius*this.height;
		if(volume<0)
			return -1;
		else return volume;
	}
}

-------------------------------------------
ELC CLASS
----------
package inheritance;

public class Main1 {
	public static void main(String[] args) {
	Cylinder c=new Cylinder();
	System.out.println("volume by no constructor:"+c.getVolume());
	System.out.println("Area by no constructor:"+c.getArea()) ;
	Cylinder c1=new Cylinder(5,8);
	System.out.println("volume by parameterized constructor:"+c1.getVolume());
	System.out.println("Area by parameterized constructor:"+c1.getArea()) ;
}
}
================================================================================
Design a Ticket class with attributes like event name, seat number, and price.



1.Create a class Ticket

Instance variable:-

String eventName,private

int seatNumber,private

double price,private



Create a parameterized constructor for all Instance variable to initialize the variable.



Generate Getters and setters for all Instance variable to get values and set values.



2.Create another class VIPTicket and inherit Ticket class here.

Instance variable:-

String specialAccess,private



Create a parameterized constructor for Instance variable to initialize the variable.

//Use super keyword to initialize Ticket class constructor attributes.



Generate Getters and setters for Instance variable to get values and set values.



3.Create another class StudentTicket and inherit Ticket class here.

Instance variable:-

boolean studentDiscount,private



Create a parameterized constructor for Instance variable to initialize the variable.

//Use super keyword to initialize Ticket class constructor attributes.



Generate Getters and setters for Instance variable to get values and set values.



Create a class MainTicket which contains main method to demonstrate the usage.

//Creating a Ticket object using the parameterized constructor

//Creating a VIPTicket object using the parameterized constructor

//Creating a StudentTicket object using the parameterized constructor



Output:-

Regular Ticket:

Event: Concert

Seat Number: 101

Price: $50.0



VIP Ticket:

Event: VIP Concert

Seat Number: 201

Price: $100.0

Special Access: Backstage Access



Student Ticket:

Event: Student Event

Seat Number: 301

Price: $30.0

Student Discount: true


package inheritance;

public class Ticket2 {
	private String eventName;
	private int seatNumber;
	private double price;
	public Ticket2(String eventName, int seatNumber, double price) {
		super();
		this.eventName = eventName;
		this.seatNumber = seatNumber;
		this.price = price;
	}
	@Override
	public String toString() {
		return "Ticket2 [eventName=" + eventName + ", seatNumber=" + seatNumber + ", price=" + price + "]";
	}
	public String getEventName() {
		return eventName;
	}
	public int getSeatNumber() {
		return seatNumber;
	}
	public double getPrice() {
		return price;
	}
	public void setEventName(String eventName) {
		this.eventName = eventName;
	}
	public void setSeatNumber(int seatNumber) {
		this.seatNumber = seatNumber;
	}
	public void setPrice(double price) {
		this.price = price;
	}
	
}
-------------------------------------------

package inheritance;

public class VIPTicket2 extends Ticket2{
	private String specialAccess;

	public VIPTicket2(String eventName, int seatNumber, double price, String specialAccess) {
		super(eventName, seatNumber, price);
		this.specialAccess = specialAccess;
	}

	@Override
	public String toString() {
		return "EventName:"+super.toString()+"VIPTicket2 [specialAccess=" + specialAccess + "]";
	}
	
}
--------------------------------------------------

package inheritance;

public class StudentTicket2 extends Ticket2{
	private boolean studentDiscount;

	public StudentTicket2(String eventName, int seatNumber, double price, boolean studentDiscount) {
		super(eventName, seatNumber, price);
		this.studentDiscount = studentDiscount;
	}

	@Override
	public String toString() {
		return "EventName:"+super.toString()+"StudentTicket2 [studentDiscount=" + studentDiscount + "]";
	}

}
-------------------------------------------
package inheritance;

public class MainTicket2 {

	public static void main(String[] args) {
		Ticket2 t=new Ticket2("hi nanna",5,500);
		VIPTicket2 vip=new VIPTicket2("hi nanna",5,500,"allowed");
		StudentTicket2 s=new StudentTicket2("hi nanna",5,500,true);
		System.out.println(t);
		System.out.println(vip);
		System.out.println(s);
	}

}
============================================================================
Question: 1
What is the output of following code?
class Test
{

int a ;
Test()
{
System.out.println("Constructor");
}
{
System.out.println("Non-static block");
}   
public static void main(String[] args) {
    System.out.println("main method");
    new Test();
}
}



main method
Constructor


main method

Correct Answer
main method
Non-static block
Constructor


main method
Constructor
Non-static block

 Correct
Question: 2
what is the output of following code?
class Test
{

public static void main(String[] args)
{
    Test t=new Test();
    t.fun();
}
void fun()
{
    System.out.println("User method...");
}
}



A) Compiler error

Correct Answer
B) User method…


C) User method


D) No Output

 Correct
Question: 3
What is the output of following code?
class Test {

public static void main(String[] args) {
    new Test();
}
Test()
{
System.out.println("Constructor");
}
}



A) Compiler error


B) Runtime error


C) No Output

Correct Answer
D) Constructor

 Correct
Question: 4
What is the output of following code?
class Test
{
Test()
{
System.out.println(“Object initialization process. ..”);
}
{
System.out.println(“Object creation process… “);
}
public static void main(String[] args)
{
new Test();
new Test();
new Test();
}

}



Object creation process…


Object creation process…
Object initialization process. ..

Correct Answer
Object creation process…
Object initialization process. ..
Object creation process…
Object initialization process. ..
Object creation process…
Object initialization process. ..


Object creation process…
Object initialization process. ..
Object initialization process. ..
Object initialization process. ..

 Correct
Question: 5
What is the output of following code?
public class Test
{
static
{
}
{
}
System.out.println(“static block is executed”);
System.out.println(this);
System.out.println(“Non-static block is executed”);
public static void main(String[] args) {
System.out.println( main );
}
}


Correct Answer
A) Compiler error


B) static block is executed


C) Non-static block is executed


D) static block is executed
Non-static block is executed

 Correct
Question: 6
What is the output of following code?
class Test
{

Test( )
{
    System.out.println(this);
    System.out.println(this.hashCode());
}
public static void main(String args[ ])
{
    new Test( );
}
}



A) Compiler error


B) Runtime error

Correct Answer
C) Class name@Hexadecimal value
Object’s hash code


D) No output

 Correct
Question: 7
What is the output of following code?
class Test
{

int a ;
public static void main(String args[ ])
{
    new Test();
}
{
    System.out.println(this.a);
    this.a = 100 ;
}
Test()
{
    System.out.println(this.a);
}
}



Compiler error


100


100
0

Correct Answer
0
100

 Correct
Question: 8
What is the output of following code?
class Test
{

Test( )
{
    System.out.println("Object address inside constructor : "+this);
}
public static void main(String args[ ])
{
    Test obj = new Test();
    System.out.println("Object address inside main : "+obj);
}
}


Correct Answer
Object address inside constructor : Test@5acf9800
Object address inside main : Test@5acf9800


Object address inside main :


Object address inside constructor :


Object address inside constructor : Test
Object address inside main : Test

 Correct
Question: 9
What is the output of following code?
class Test
{

int eno ;
String ename ;
float esal ;
public static void main(String[] args)
{
    Test e = new Test();
    System.out.println("Eno : "+e.eno);
    System.out.println("Ename : "+e.ename);
    System.out.println("Esal : "+e.esal);
}
}


Correct Answer
Eno : 0
Ename : null
Esal : 0.0


Eno :
Ename :
Esal :


Compiler error


Runtime error

 Correct
Question: 10
What is the output of following code?
class Test
{

{
    int a;
}
{
    Test obj = new Test();
    System.out.println(a);
    public static void main(String[] args) {
        Test obj=new Test();
        System.out.println(obj);
    }
}
}


Correct Answer
Compiler error


Runtime error


0


0
Test@hascode

 Incorrect
Question: 11
What is the output of following code?
class Test
{

int a;
{
    Test obj = new Test();
    System.out.println(a);
}
public static void main(String[] args)
{
    Test obj=new Test();
    System.out.println(obj);
}
}



Compiler error

Correct Answer
Runtime error


0

Incorrect Answer
0
Test@hascode

 Correct
Question: 12
What is the output of following code?
class Laptop
{
void access()
{
System.out.println(“Copy java soft copies… “);
}
}

class Faculty
{
static Laptop password = new Laptop();
}

class Student
{
public static void main(String[] args)
{
Faculty.password.access();
}
}



A) Compiler error


B) Rutime error


C) No Output

Correct Answer
D) Copy java soft copies…

 Correct
Question: 13
What is the output of following code?
class Test
{
int x=10;
int y=20;
public static void main(String[] args)
{
Test e1=new Test();
Test e2=new Test();
System.out.println(e1.x+” …”+e1.y);
System.out.println(e2.x+” …”+e2.y);
}
}



Compiler error


Runtime error


10 20
10 20

Correct Answer
10 …20
10 …20

 Correct
Question: 14
What is the output of following code?
class Test
{

int a=10;
int b=20;
public static void main(String[] args)
{
    Test e1=new Test();
    Test e2=new Test();
    System.out.println(e1.a+". .."+e1.b);
    System.out.println(e2.a+". .."+e2.b);
    e1.a=50;
    e2.b=60;
    System.out.println(e1.a+". .."+e1.b);
    System.out.println(e2.a+". .."+e2.b);
}
}



10 20
10 20
10 20
10. ..20


..20
10 20
50 60
50 60

10 20
10 20
50 10
20. ..60

Correct Answer
10 20
10 20
50 20
10 60

 Correct
Question: 15
What is the output of following code?
class Test
{

int eid;
String ename;
String company;

public String toString(){
    return
    "eid:"+eid+"\n"+"ename:"+ename+"\n"+"company:"+company+"\n";
}

public static void main(String[] args)
{
    Test e1=new Test();
    e1.eid=7279;
    e1.ename="Ganesh";
    e1.company="Naresh IT";
    System.out.println(e1);
}
}



Compiler error

Correct Answer
eid:7279
ename:Ganesh
company:Naresh IT


eid:7279 ename:Ganesh company:Naresh IT


eid:7279\nename:Ganesh\ncompany:Naresh IT\n

 Correct
Question: 16
What is the output of following code?
class Test
{

static int a=10;
static int b=20;
int x=30;
int y=40;

public static void main(String[] args)
{
    Test e1=new Test();
    Test e2=new Test();
    e1.a=50;
    e1.b=60;
    e1.x=70;
    e1.y=80;
    System.out.println("e1.a="+e1.a+"    e2.a="+e2.a);
    System.out.println("e1.b="+e1.b+"    e2.b="+e2.b);
    System.out.println("e1.x="+e1.x+"    e2.x="+e2.x);
    System.out.println("e1.y="+e1.y+"    e2.y="+e2.y);  }
}


Correct Answer
e1.a=50 e2.a=50
e1.b=60 e2.b=60
e1.x=70 e2.x=30
e1.y=80 e2.y=40


e1.a=50 e2.a=10
e1.b=60 e2.b=20
e1.x=70 e2.x=30
e1.y=80 e2.y=40


e1.a=50 e2.a=50
e1.b=60 e2.b=60
e1.x=70 e2.x=70
e1.y=80 e2.y=80


e1.a=50 e2.a=10
e1.b=60 e2.b=20
e1.x=70 e2.x=70
e1.y=80 e2.y=80

 Correct
Question: 17
What is the output of following code?
class Test
{

void m1(){
    System.out.println("m1() method");
}

public static void main(String[] args)
{
    System.out .println("main method");
    Test t=new Test();
    t.m1();
}
}



main method

Correct Answer
main method
m1() method


m1() method


None of the above

 Correct
Question: 18
What is the output of following code?
class Test
{

int x;
int y;

void m1(Test t){
    x=x+1;
    y=y+2;
    t.x=t.x+3;
    t.y=t.y+4;
}

public static void main(String[] args)
{
    Test t1=new Test();
    Test t2=new Test();
    t1.m1(t2);
    System.out.println(t1.x+"... "+t1.y);
    System.out.println(t2.x+"... "+t2.y);
    t2.m1(t1);
    System.out.println(t1.x+"... "+t1.y);
    System.out.println(t2.x+"... "+t2.y);
    t1.m1(t1);
    System.out.println(t1.x+"... "+t1.y);
    System.out.println(t2.x+"... "+t2.y);
    t2.m1(t2);
    System.out.println(t1.x+"... "+t1.y);
    System.out.println(t2.x+"... "+t2.y);
}
}



Compiler error


3… 4
1… 2
4… 6
4… 6
8… 12
4… 6
8… 12
8… 12

Correct Answer
1… 2
3… 4
4… 6
4… 6
8… 12
4… 6
8… 12
8… 12


1… 2
4… 5
5… 7
5… 7
10… 14
5… 7
10… 14
10… 14

 Correct
Question: 19
What is the output of following code?
class Test
{

int x;
int y;

void m1(Test t)
{
    System.out.println("\t t:"+t);
    t=new Test();
    System.out.println("\t t:"+t);
}

public static void main(String[] args)
{
    Test t1=new Test();
    Test t2=new Test();
    System.out.println("t2:"+t2);
    t1.m1(t2);
    System.out.println("t2:"+t2);
}
}



t2:Test@5acf9800
t:Test@4617c264
t:Test@4617c264
t2:Test@5acf9800

Correct Answer
t2:Test@5acf9800
t:Test@5acf9800
t:Test@4617c264
t2:Test@5acf9800


t2:Test@5acf9800
t:Test@5acf9800
t:Test@5acf9800
t2:Test@5acf9800


Compiler error

 Correct
Question: 20
What is the output of following code?
class Test
{

int a = 10;

public static void main(String[] args)
{
    Test t = new Test();
    System.out.println("Non static variable"+ " accessed using instance"
    + " of a class");
    System.out.println("Non Static variable a = "+ t.a);
}
}



Compiler error

Correct Answer
Non static variable accessed using instance of a class
Non Static variable a = 10


Non static variable accessed using instance of a class
Non Static variable a = 0


Runtime error
=============================================================
Correct
Question: 1
What will be the output of the following program?
class ConstructorsTest
{
public static void main(String[] args)
{
U u = new U();
U u1 = new U(1);
V v = new V();
V v1 = new V(1);
T t = new T();
T t1 = new T(1);
}
}
class U {
V v = new V();

U() { 
 System.out.print("U"); 
  }

U(int i) {
 System.out.print("u");
 }
}

class V {
V() {
System.out.print(“V”);
}

V(int i) {
System.out.print("v"); 
 }
}

class T extends V {

T() {
 System.out.print("T"); 
 }

T(int i) {
 System.out.print("t"); 
 }
}


Correct Answer
A) VUVuVvVTVt


B) UuVvTt


C) UuVvVTvt


D) UvuVtT

 Correct
Question: 2
What will be the output of the following program?

class OutPut
{
public static void main(String[] args)
{
new Alpha();
new Base();
}
}
class Alpha extends Base
{
Alpha()
{
System.out.print(“Base”);
}
}
class Base
{
Base()
{
System.out.println(“Base”);
}
}



A) BaseBase


B) BaseBaseBase


C) BaseBase
Base

Correct Answer
D) Base
BaseBase

 Correct
Question: 3
What will be the output of the following program?

class OutPut
{
public static void main(String [] args)
{
Count t = new Count();
t.count();
}
}

class Count extends Count2
{
Count()
{

}
}
class Count2
{
void count()
{
System.out.print(“Output = “);

    for (int x = 0; x < 7; x++,x++ )
    {
        System.out.print(" " + x);
    }
}
}



A) Output = 0 1 2 3 4 5 6


B) Output = 0 2 4 6 8 10 12

Correct Answer
C) Output = 0 2 4 6


D) Output = 1 2 3 4 5 6

 Correct
Question: 4
What will be the output of the following program?

class OutPut
{
public static void main(String [] args)
{
Count2 count = new Count2();
count.count();
}
}

class Count extends Count2
{
Count()
{

}
}
class Count2
{
void count()
{
int i = 5;
System.out.print(“Output = “);

    for (int x = 0; x <= (i % 7); x += 1)
    {
        System.out.print(" " + x);
    }
}
}


Correct Answer
A) Output = 0 1 2 3 4 5


B) Output = 1 2 3 4 5


C) Output = 0 1 2 3 4 5 6


D) Output = 0 1 2 3 4 5 6 7

 Correct
Question: 5
What will be the output of the following program?

class OutPut
{
public static void main(String [] args)
{
Count2 count = new Count2();
count.count();
}
}

class Count extends Count2
{
Count()
{

}
}
class Count2
{
void count()
{
int i = 5;
System.out.print(“Output = “);

    for (int x = 0; x <= (i % 7); x += 1)
    {
        System.out.print(" " + x);
        i++;
    }
}
}


Correct Answer
A) Output = 0 1


B) Output = 0 1 2 3 4 5 6


C) Output = 0 1 2 3 4 5


D) Output = 0 1 2 3 4 5 6 7

 Correct
Question: 6
What will be the output of the following program?

class ConstructorsTest
{
public static void main(String s[])
{
int i = 2;
B b = new B();
b.execute();
}
}

class A
{
int i = 0;
A(){}
}

class B extends A
{
void execute()
{
for(; i < 6; i++)

        switch(i)
        {
            case 0:
            System.out.println("i is zero.");
            break;

            case 1:
            System.out.println("i is one.");
            break;

            case 2:
            System.out.println("i is two.");
            continue;

            case 3:
            System.out.println("i is three.");
            break;

            default:
            System.out.println("i is greater than three.");
        }
}
}



A) Compiler error

Correct Answer
B) i is zero.
i is one.
i is two.
i is three.
i is greater than three.
i is greater than three.


C) i is zero.
i is one.
i is two.
i is three.
i is greater than three.


D) Runtime Exception

 Correct
Question: 7
What will be the output of the following program?

class ConstructorsTest
{
public static void main(String s[])
{
int i = 2;
B b = new B();
b.execute();
}
}

class A
{
A()
{
int i = 1;
}
}

class B extends A
{
void execute()
{
System.out.println(“i = ” + i);
}
}



A) i = 0


B) i = 1


C) i = 2

Correct Answer
D) Compiler error

 Correct
Question: 8
What will be the output of the following program?

class ConstructorsTest {
public static void main(String[] args) {
new A(3);
new B(5, 6);
new B(6, 7).C(1, 2, 3);
new C(3, 3, 4).B(4, 5);
new C(1, 1, 1);
}
}
class A {
A(int i) {
print(i * 2);
}
void print(int i) {
System.out.print(i + ” “);
}
}
class B extends A {
B(int j, int k) {
super(j);
print(k * 4);
}
void C(int j, int k, int l) {
print(j + k + l - 3);
}
}
class C extends B {
C(int j, int k, int l) {
super(j, k);
print(l - 3);
}
void B(int i, int k) {
print(i * 6);
}
}


Correct Answer
A) 6 10 24 12 28 3 6 12 1 24 2 4 -2


B) 6 24 24 3


c) 6 -9 5 76 9 3


d) 6 3 4 5 7 8 13

 Incorrect
Question: 9
What will be the output of the following program?

class FourWheeler
{
public static void main(String[] args)
{
new Car(0);
}
}

class Vehicle
{
int i;
int j;

Vehicle(int i)
{
    this.i = i;
    j = i;
}

Vehicle(int i, int j)
{
    this.i = i;
    this.j = j;
}
}

class Bus extends Vehicle
{
double j;

Bus(double j)
{
    this.j = j;
}
}

class Car extends Vehicle
{
Car(int i)
{
super(i);
System.out.print(“Executed Successfully”);
}
}



a)Runtime Exception

Incorrect Answer
b)Executed Successfully

Correct Answer
c)Compilation error


d)None of the above

 Correct
Question: 10
What will be the output of the following program?

class BaseClass {
BaseClass() {
System.out.print(“*”);
}
BaseClass(String str) {
this();
System.out.print(“@” + str);
}
}
public class ChildClass extends BaseClass {
ChildClass() {
System.out.print(“#”);
}
ChildClass(String name) {
this();
System.out.print(“$” + name);
}
public static void main(String args[]) {
new ChildClass(“hello”);
}
}



a)#$hello

Correct Answer
b)*#$hello


c)*#@hello


d)#@hello#$hello

 Correct
Question: 11
What will be the output of the following program?

class White {
White() {
System.out.print(“white is “);
}
}
class Purple extends White {
Purple(String color) {
System.out.print(color);
}
}
public class Black extends Purple {
Black() {
super(“beautiful” + “,”);
}
public static void main(String[] a) {
new Purple(“awesome” + “,”);
new Purple(“nice”);
}
}



a)white is beautiful,White is nice

Correct Answer
b)white is awesome,white is nice


c)White is nice,White is beautiful


d)White is nice,White is awesome

 Correct
Question: 12
What will be the output of the following program?

public class IAm {
public static void main(String arg[]) {
School ref = null;
ref = new Office();
ref.display();
}
}
class School {
void display() {
System.out.println(“10th class”);
}
}
class College extends School {
void display() {
new School().display();
System.out.println(“B.Tech”);
}
}
class Office extends School {
void display() {
new College().display();
System.out.println(“S/W company”);
}
}



a)10th class,S/W company,B.tech


b)B.tech,10th class,10th class


c)B.tech,10th class,S/W company

Correct Answer
d)10th class,B.Tech,S/W company

 Correct
Question: 13
What will be the output of the following program?

public class IAm {
public static void main(String arg[]) {
float input = 24.8888888888888889f;
School ref = null;
if (input < 10) {
ref = new School();
} else if (input > 30) {
ref = new College();
} else if (input == 24.88889f) {
ref = new Office();
}
ref.display();
}
}
class School {
void display() {
System.out.println(“I am studying 10th class.”);
}
}
class College extends School {
void display() {
System.out.println(“I am studying B.Tech.”);
}
}

class Office extends School {
void display() {
System.out.println(“I am working in S/W company.”);
}
}



a)Runtime Exception


b)I am studying B.Tech.

Correct Answer
c)I am working in S/W company.


d)I am studying 10th class.

 Correct
Question: 14
What will be the output of the following program?
public class Fruit
{
private double fprice;
private String fname;

Fruit(double fPrice, String fName)
{
fprice = fPrice;
fname = fName;
}

Fruit(Fruit fruit)
{
System.out.println(“\nAfter invoking the Copy Constructor:\n”);
fprice = fruit.fprice;
fname = fruit.fname;
}

double showPrice()
{
return fprice;
}

String showName()
{
return fname;
}

public static void main(String args[])
{
Fruit f1 = new Fruit(399, “Ruby Roman Grapes”);
System.out.println(“Name of the first fruit: “+ f1.showName());
System.out.println(“Price of the first fruit: “+ f1.showPrice());
Fruit f2 = new Fruit(f1);
System.out.println(“Name of the second fruit: “+ f2.showName());
System.out.println(“Price of the second fruit: “+ f2.showPrice());
}
}



a)Name of the first fruit: Ruby Roman Grapes
Price of the first fruit: 399.0
After invoking the Copy Constructor:
Price of the second fruit: 399.0
Name of the second fruit: Ruby Roman Grapes


b) Name of the first fruit: Ruby Roman Grapes
Price of the first fruit: 399.0
Name of the second fruit: Ruby Roman Grapes
After invoking the Copy Constructor:
Price of the second fruit: 399.0

Correct Answer
c) Name of the first fruit: Ruby Roman Grapes
Price of the first fruit: 399.0
After invoking the Copy Constructor:
Name of the second fruit: Ruby Roman Grapes
Price of the second fruit: 399.0


d) After invoking the Copy Constructor:
Name of the second fruit: Ruby Roman Grapes
Price of the second fruit: 399.0
Name of the first fruit: Ruby Roman Grapes
Price of the first fruit: 399.0

 Correct
Question: 15
What is the output of the below Java program?
public class TestingConstructor
{
void TestingConstructor()
{
System.out.println(“Amsterdam”);
}

TestingConstructor()
{
System.out.println(“Antarctica”);
}

public static void main(String[] args)
{
TestingConstructor tc = new TestingConstructor();
}
}



a)No output

Correct Answer
b)Antarctica


c)Amsterdam


d)Compilation Error

 Correct
Question: 16
What will be the output of the following program?
public class Constructor3
{
int birds=10;
Constructor3()
{
this(20);
}
Constructor3(int birds)
{
System.out.println(“Birds=” + birds);
}

public static void main(String[] args)
{
Constructor3 con = new Constructor3();
}
}



a)Compilation Error


b)Birds=10

Correct Answer
c)Birds=20


d)Birds=0

 Correct
Question: 17
What will be the output of the following program?
public class Constructor7
{
Constructor7(int a)
{
System.out.println(“Book=” + a);
}
Constructor7(float a)
{
System.out.println(“Pen=”+ a );
}
public static void main(String[] args)
{
Constructor7 con = new Constructor7(50.5f);
}
}



a)No output


b)Book=50

Correct Answer
c)Pen=50.5


d)Compilation Error

 Correct
Question: 18
What will be the output of the following Java program?

class A
{
int i;
void display()
{
System.out.println(i);
}
}
class B extends A
{
int j;
void display()
{
System.out.println(j);
}
}
class inheritance_demo
{
public static void main(String args[])
{
B obj = new B();
obj.i=1;
obj.j=2;
obj.display();
}
}



a)2 1


b)1 2


c)1

Correct Answer
d)2

 Correct
Question: 19
What will be the output of the following program?
class Main {

String languages;

// constructor accepting single value
Main(String lang) {
languages = lang;
System.out.println(languages + ” Programming Language”);
}

public static void main(String[] args) {

// call constructor by passing a single value
Main obj1 = new Main("Java");
Main obj2 = new Main("Python");
Main obj3 = new Main("C");
}
}



a)Java Programming Language,C Programming Language,Python Programming Language

Correct Answer
b)Java Programming Language,Python Programming Language.C Programming Language


c)Compilation Error


d)Python Programming Language.C Programming Language,Java Programming Language

 Correct
Question: 20
What will be the output of the following program?
class Main {

String language;

Main() {
this.language = “Java”;
}

Main(String language) {
this.language = language;
}

public void getName() {
System.out.println(“Programming Langauage: ” + this.language);
}

public static void main(String[] args) {

Main obj1 = new Main();

Main obj2 = new Main("Python");

obj1.getName();
obj2.getName();
}
}



a)No output


b)Programming Langauage: Python,Programming Langauage: Java


c)Copilation Error

Correct Answer
d)Programming Langauage: Java,Programming Langauage: Python

================================================================================

Design a SmartHomeDevice class with attributes like type, status, and control methods.



1.Create a class SmartHomeDevice

Instance variable:-

String type,private

boolean status,private



Create a parameterized constructor for type variable to initialize the variable

// Device is initially turned off



Generate Getters and setters for all Instance variable to get values and set values.



Create an instance method turnOn() to turn on the device

//print "is turned on."





Create an instance method turnOff() to turn off the device

//print "is turned off."



2. Create a Subclass LightDevice inheriting from SmartHomeDevice

Create a parameterized constructor.

//Use super keyword to initialize SmartHomeDevice class constructor attributes.



Create an instance method dim() with parameter brightness type interger.

//print "Light brightness is set to " + brightness + "%."





3.Create another Subclass ThermostatDevice inheriting from SmartHomeDevice

Create a parameterized constructor.

//Use super keyword to initialize SmartHomeDevice class constructor attributes.



Create an instance method setTemperature() with parameter temperature type integer.

//print "Thermostat temperature is set to " + temperature + "°C."



4.Create a class MainSmart which contains main method to demonstrate the usage.

//Creating a LightDevice object to call the methods.

//Creating a ThermostatDevice object to call the methods.



Output:-

Light is turned on.

Light brightness is set to 50%.

Thermostat is turned on.

Thermostat temperature is set to 22°C.

Light is turned off.

Thermostat is turned off.


BLC CLASS1
SmartHomeDevice3
------------------
package inheritance;

public class SmartHomeDevice3 {
	private String type;
	private boolean status;
	private String control;
	public SmartHomeDevice3(String type,boolean status) {
		this.type=type;
		this.status=status;
	}
	public String getDeviceType() {
		return type;
	}
	public Boolean getDeviceStatus() {
		return status;
	}
	public void turnOn() {
		if(getDeviceStatus()== false)
		{
		System.out.println(this.type+"is turned on");
		status = true;
		}
		else
		{
			System.out.println(type + " is Already on");
		}
	}
	public void turnoff() {
		if(getDeviceStatus()==true) {
			System.out.println(this.type+"is turned off");
			status=false;
		}else {
			System.out.println(type + " is Already off");
		}
	}
}

BLC CLASS2
LightDevice3
------------------
package inheritance;

public class LightDevice3 extends SmartHomeDevice3 {
public LightDevice3(String type,boolean status) {
	super(type,status);
}
public void dim(int brightness) {
	System.out.println("Light brightness is set to"+brightness+"%.");
}
}

BLC CLASS3
ThermostatDevice3
------------------
package inheritance;

public class ThermostatDevice3 extends SmartHomeDevice3{
public ThermostatDevice3(String type,boolean status) {
	super(type,status);
}
public void setTemperature(int temperature) {
	System.out.println("thermostat temperature is set to"+temperature+"c");
}
}
ELC CLASS
MainSmart3
-----------
package inheritance;

public class MainSmart3 {

	public static void main(String[] args) {
		LightDevice3 l=new LightDevice3("light",false);
		l.turnOn();
		l.turnOn();
		l.dim(50);
		l.turnoff();
		l.turnoff();
		ThermostatDevice3 t=new ThermostatDevice3("ThermostatDevice",false);
		t.turnOn();
		t.turnOn();
		t.setTemperature(50);
		t.turnoff();
	}

}
==========================================================================
1.Create a class SmartHomeDevice

Instance variable:-

String type,private

boolean status,private



Create a parameterized constructor for type variable to initialize the variable

// Device is initially turned off



Generate Getters and setters for all Instance variable to get values and set values.



Create an instance method turnOn() to turn on the device

//print "is turned on."





Create an instance method turnOff() to turn off the device

//print "is turned off."



2. Create another VoiceAssistantIntegration class inheriting from SmartHomeDevice  

Create a parameterized constructor.

//Use super keyword to initialize SmartHomeDevice class constructor attributes.



Create an instance method executeVoiceCommand() with parameter command type String.

//if command contains "turn on" then call turnOn() method

//if command contains "turn off" then call turnOff() method

//if command contains "dim" then print "Adjusting brightness..."

//if command contains "set temperature" then print "Setting temperature..."

//Otherwise print "Command not recognized."



3.Create a class MainSmartHome which contains main method to demonstrate the usage.

//Creating a VoiceAssistantIntegration object to call the methods.

// Simulating voice commands

Output:-

Voice Assistant is turned on.

Setting temperature...

Adjusting brightness...

Voice Assistant is turned off.
  


BLC CLASS1
SmartHomeDevice4
----------------
package inheritance;

public class SmartHomeDevice4 {
private String type;
private boolean status;
public SmartHomeDevice4(String type,boolean status) {
	this.type=type;
	this.status=status;
}
public String getDeviceType() {
	return type;
}
public boolean getDeviceStatus() {
	return status;
}
public void turnOn() {
	if(getDeviceStatus()==false) {
	System.out.println(type+"is turned on");
	status=true;}
	else {
		System.out.println(type+"is already on");
	}
}
public void turnOff() {
	if(getDeviceStatus()==true) {
	System.out.println(type+"is turned off");
	status=false;
	}
	else {
		System.out.println(type+"is already turned off");
	}
}
}
BLC CLASS2
VoiceAssistantIntegration4
----------------------------
package inheritance;

public class VoiceAssistantIntegration4 extends SmartHomeDevice4{
public VoiceAssistantIntegration4(String type,boolean status) {
	super(type,status);
}
public void executeVoiceCommand(String command) {
	if(command=="turn on")
		turnOn();
	else if(command=="turn off")
		turnOff();
	else if(command=="dim")
		System.out.println("Adjusting brightness");
	else if(command=="set temperature")
		System.out.println("setting temperature");
	else
		System.out.println("command not recognized");
}
}

ELC CLASS
MainSmartHome4
---------------
package inheritance;

public class MainSmartHome4 {

	public static void main(String[] args) {
		VoiceAssistantIntegration4 v=new VoiceAssistantIntegration4("voice assistance",false);
		v.executeVoiceCommand("turn on");
		v.executeVoiceCommand("turn off");
		v.executeVoiceCommand("dim");
		v.executeVoiceCommand("set temperature");
	}

}

=====================================================================
1) Find the output :

class Super 
{
 public int a;
 protected Super(int a) 
  { 
	   this.a = a; 
  }
 }
class Sub extends Super
 {
   public Sub(int a) 
   {
	 super(a); 
   }
   public Sub() 
   { 
	 this.a = 5; 
   }
}
o/p:
ce
---------------------------------------------------------------------
2) Find the output :
public class a7
{
       private double[] method1()
       {
             return null;
       }
       private double method()[]
       {
             return null;
       }
}

--------------------------------------------------------------------
3) Find the output :

public class mth5 
{
      public static void main(String[] argv) 
      {
             System.out.println();
      }
      public int main(String[] argv) 
      {
            System.out.println();
      }
}
o/p:
compile error
--------------------------------------------------------------------
4) Find the output :

public class q2 
{
       public static void main(String args[]) 
       {
             MyClass h = new MyClass();
             h.intValue = 100;
             h.changeValue(h);
             System.out.println(h.intValue);
       }
}
class MyClass 
{
       public int intValue;
       public void changeValue(MyClass theHolder) 
       {
		    theHolder = new MyClass();
            theHolder.intValue++;
       }

}
o/p:
100
--------------------------------------------------------------------
4) Find the output :
public class s1
{
       public static void main(String[] argv) 
       {
               String tx = "Delta values are labeled \"\u0394\" on the chart.";
               System.out.println(tx);

       }
}
o/p:
Delta values are labeled "?" on the chart.
--------------------------------------------------------------------
5) Find the output :
public class v1 
{
      public static void main(String[] argv) 
      {
           MyClass myClass = new MyClass();
           for (float f : myClass.localVariables) 
           {
                 System.out.println(f);
           }
      }
}
class MyClass 
{
      public float[] localVariables = new float[3];//[0.0,0.0,0.0]
}
o/p:
0.0
0.0
0.0
-------------------------------------------------------------------
6) Find the output :
public class v13
{
       public static void main(String[] argv)
       {
             int i;//before use initialize the i value
             System.out.println("Hello");
             System.out.println(i);//error

      }
}
o/p:
hello
-------------------------------------------------------------------
7) Find the output :

class v16 
{
       public void logIn() 
       {
             int count = 10;
       }
       public void doSomething(int i) 
       {
             count = i;  //undefined variable
                
       }
}
o/p:
compiletime error
-------------------------------------------------------------------
8) Find the output :
class v20 
{
       static int size = 7;//by using classname call the size variable
       static void changeIt(int size) 
       {
             size = size + 200;
             System.out.println("size in changeIt is " + size);
       }
       public static void main (String [] args) 
       {
             v20 f = new v20();
             System.out.println("size = " + size);
             changeIt(size);
             System.out.println("size after changeIt is " + size);
       }
}
o/p:
size = 7
size in changeIt is 207
size after changeIt is 7
--------------------------------------------------------------------
9) Find the output :
class Bar 
{
     int barNum = 28;
}
class v22 
{
      Bar myBar = new Bar();//mybar=1000x --->num=28
      void changeIt(Bar myBar) 
      {
            myBar.barNum = 99;
            System.out.println("myBar.barNum in changeIt is " + myBar.barNum);
            myBar = new Bar();
            myBar.barNum = 420;
            System.out.println("myBar.barNum in changeIt is now " + myBar.barNum);
      }
      public static void main (String [] args) 
      {
            v22 f = new v22();
            System.out.println("f.myBar.barNum is " + f.myBar.barNum);
            f.changeIt(f.myBar);
            System.out.println("f.myBar.barNum after changeIt is " + f.myBar.barNum);
      }
}
-------------------------------------------------------------------
10) Find the output :

public class v25
{
      public static void main(String[] argv)
      {
           aMethod();
      }
      static void aMethod() 
      {
          for(int z = 0; z < 5; z++) 
          {
               boolean test = false;
               if(z == 3) 
               {
                    test = true;
                    break;
               }
         }
         System.out.print(test);   
     }
}
-------------------------------------------------------------------
11) Find the output :

public class v4 
{
      static int [] year = new int[100];
      public static void main(String [] args) 
      {
            for(int i=0;i<100;i++)
            {
                  System.out.println("year[" + i + "] = " + year[i]);
            }
     }
}
-------------------------------------------------------------------
12) Find the output :

public class Test14
{
    public void Test14()
	{
       System.out.println("Constructor1");
    }
    public Test14()
	{ 
       System.out.println("Constructor2");
    }
    public static void main(String[] args)
	{
       Test14 t14 = new Test14();
	   t14.Test14();
	   
    }
}
o/p:
Constructor2
Constructor1
------------------------------------------------------------------
13) Find the output :

public class Test15
{
    public Test15()
	{
       this(4);
    }
    public Test15(byte var)
	{
       System.out.println(var);
    }
    public static void main(String[] args)
	{
       Test15 t6 = new Test15();
    }
}
o/p:
ce
-------------------------------------------------------------------
14) Find the output :

public class Test3 
	{
	
	public static void main(String []args)  
	{
		Integer i = 34;
		int l = 34;
		if(i.equals(l))
		{
			System.out.println(true);
		}
		else
		{
			System.out.println(false);
		}

	}
	
}
o/p:
true
--------------------------------------------------------------------
15) Find the output :

public class Test5
	{

Integer i;//reference variable

int x;

public Test5(int y) //y=4
{

x = i+y;//null+4--->null point exception

System.out.println(x);
}

public static void main(String[] args) {

new Test5(new Integer(4));

}

}
o/p:
null point exception
-------------------------------------------------------------------
16) Find the output :

class abc  
{  
         int countGold(int x, int y)  
         {  
                    return x+y;  
          }  
}  
public class Test8 extends abc  
{  
          public static void main(String[]args)  
          {   
                  short myGold=7;  
                  System.out.println(countGold(myGold,6));  
          }  
}  
o/p:
ce
-------------------------------------------------------------------
17) Find the output :

class t2  
{
	public static void main(String[] args) 
	{
		Car c = new Car();

	}
}

class Car
{
 private String name;//name=null
 public Car()
 {
  this("BMW");    
 }
 public Car(String n)//n=bmw
 {
  this.name=n;
  System.out.println("Car name is :"+name);
  
 }
}
o/p:
Car name is bmw
--------------------------------------------------------------------
18) Find the output :

class t3 
{
	public static void main(String[] args) 
	{
		hello h = new hello();
		h.display();
	}
}

class hello
{
public void getName()
{
 System.out.println("Ravi");
}

public void display()
{
 this.getName();
}
}
o/p:
Ravi
--------------------------------------------------------------------
19) Find the output :
class t4 
{
	public static void main(String[] args) 
	{
		car c1 = new car();
		System.out.println(c1.getCar());
	}
}
class car
{
	public car getCar()
	{
		return this;
	}
}
o/p:
t4@hexadecimalcode
------------------------------------------------------------------
20) Find the output :

public class Test28
{
    public static void main(String args[]) 
	{ 
    String s1 = "abc";//s1=1000x=="abc"
    String s2 = "abc";//s2=1000x(the content is same so it won't create new object
    if(s1 == s2)//1000x=1000x--->true
        System.out.println(1);
    else
        System.out.println(2);
    if(s1.equals(s2))//"abc"="abc"-->true(it compares the content
        System.out.println(3);
    else
        System.out.println(4);
    }
}
o/p:
1
3
====================================================
ELC CLASS
main6
----------
package codehstest;

public class main6 {

	public static void main(String[] args) {
		Lion6 l=new Lion6("lion",40,4);
		l.displayManeLength();
		l.makeSound();
		Elephant6 e=new Elephant6("elephant",50,10);
		e.displayTuskLength();
		e.makeSound();
	}

}

BLC CLASS1
Animal6
---------
package codehstest;

public class Animal6 {
private String name;
private int age;
public Animal6(String name, int age) {
	super();
	this.name = name;
	this.age = age;
}
public void makeSound() {
	System.out.println(name+" "+"makes a generic sound.");
}

public void displayInfo() {
	System.out.print("Animal name=" + name +","+"Animal age=" + age+",");
}

}
BLC CLASS2
Elephant6
----------
package codehstest;

public class Elephant6 extends Animal6{
private float tuskLength;

public Elephant6(String name, int age, float tuskLength) {
	super(name, age);
	this.tuskLength = tuskLength;
}
public void makeSound() {
	super.makeSound();
	System.out.println("The elephant trumpets");
}
public void displayTuskLength() {
	super.displayInfo();
	System.out.println("tuskLength:"+tuskLength);
}
}
BLC CLASS3
Lion6
----------
package codehstest;

public class Lion6 extends Animal6{
private int maneLength;

public Lion6(String name, int age, int maneLength) {
	super(name,age);
	this.maneLength = maneLength;
}
public void makeSound() {
	super.makeSound();
	System.out.println("The lion roars loudly");
}
public void displayManeLength() {
	super.displayInfo();
	System.out.println("maneLength:"+maneLength);
}
}
=============================================================
BLC CLASS1
Product7
-----------
package codehstest;

public class Product7 {
private String name;
private double price;
public Product7(String name, double price) {
	super();
	this.name = name;
	this.price = price;
}
public void displayInfo() {
	System.out.print("product name:"+name+","+"product price:"+price+",");
}
public double calculateTotalCost(int qn) {
	double totalPrice=qn*price;
	return totalPrice;
}
}
BLC CLASS2
Clothing7
-------------
package codehstest;

public class Clothing7 extends Product7{
protected String size;

public Clothing7(String name, double price, String size) {
	super(name, price);
	this.size = size;
}
public void displayInfo() {
	super.displayInfo();
	System.out.println("size:"+size);
}

}
BLC CLASS3
Electronics7
------------
package codehstest;

public class Electronics7 extends Product7{
protected String size;

public Electronics7(String name, double price, String size) {
	super(name, price);
	this.size = size;
}
public void displayInfo() {
	super.displayInfo();
	System.out.println("brand:"+size);
}
@Override
public String toString() {
	return "Clothing7 [size=" + size + "]";
}

}
ELC CLASS
main7
----------
package codehstest;

public class main7 {

	public static void main(String[] args) {
		Electronics7 e=new Electronics7("electronics",3000,"hp");
		e.displayInfo();
		System.out.println("total cost:"+e.calculateTotalCost(2));
		Clothing7 c=new Clothing7("cloths",500,"30");
		c.displayInfo();
		System.out.println("total cost:"+c.calculateTotalCost(2));
	}

}

=====================================================================

Q1) 
public class Animal 
{
       String name;
       Animal(String name) 
       {
              this.name = name;
       }
       Animal() 
       {
              this(makeRandomName());
       }
       String makeRandomName() 
       {
              String name = "i";
              return name;
       }
       public static void main (String [] args) 
       {
              Animal a = new Animal();
              System.out.println(a.name);
              Animal b = new Animal("Zeus");
              System.out.println(b.name);
       }
}

A) i Zeus

B) i i

C)Compilation error

D)Zeus Zeus

Ans:C

-------------------------------------------------------------------------
Que-2)

private class A
{
	public static void main(String[] args) {
		System.out.println("A");
	}
}
A.	A
B.	Compile time error
C.	Compile success but no output
D.	none of the above
Answer: B


-------------------------------------------------------------------------
Que-3)

public class A
{
	void method1(){
		System.out.println("A");	
	}
}
public class B extends A {
	public static void main(String[] args) {
		method1();
	}
}
A.	Compile time error
B.	A
C.	method1()
D.	none of the above
Answer: A


-------------------------------------------------------------------------
Que-4)

class NIT
{
	protected int a, b;
}
public class OopsMCQ extends NIT {
	public static void main(String[] args) {
		System.out.println(a+" "+b);
	}
}
A.	1 2
B.	2 3
C.	0 0
D.	Compile time error
Answer : D

-------------------------------------------------------------------------
Que-5)

public class OopsMCQ
{
	private int a = 5;
	public static void main(String[] args) {
		OopsMCQ nit = new OopsMCQ();
		System.out.println(nit.a);
	}
}
A.	Runtime Error
B.	Compile time error
C.	5
D.	none of the above

Answer :C

-------------------------------------------------------------------------
Que-6)

class NIT
{
	protected int a, b;
	public NIT(int a1, int b1) 
	{
		a = a1;
		b = b1;
	}
}

public class OopsMCQ
{
	public static void main(String[] args) {
		NIT nit = new NIT();
		System.out.println(nit.a+" "+nit.b);
	}
}
A.	The constructor is undefined
B.	nullpointerException
C.	0 0
D.	It does not return any value
Answer : A

-------------------------------------------------------------------------
Que-7)

class NIT
{
	protected int a, b;
	public NIT(int a1, int b1) 
	{
		a = a1;
		b = b1;
	}
	public NIT() {
		
	}
}
public class OopsMCQ
{
	public static void main(String[] args) {
		NIT nit = new NIT();
		System.out.println(nit.a+" "+nit.b);
	}
}
A.	The constructor is undefined
B.	nullpointerException
C.	0 0
D.	It does not return any value
Answer: C


-------------------------------------------------------------------------
Que-8)

class NIT
{
	protected void nit() 
	{
		System.out.println("NIT");
	}
}

class NIT1 extends NIT
{
	protected void nit() 
	{
		
	}
}

public class Abstract extends NIT1 {
	
	public static void main(String[] args) {
		nit();
	}
}
A.	Compiler Error
B.	No output
C.	NIT
D.	None of the above
Answer: A

-------------------------------------------------------------------------
Que-9)

class A
{
    public int m1() 
    {
        return 20;
    }
}
class B extends A 
{
    public int  m1() 
    {
        return 30;
    }
    public int m2() 
    {
        return 40;
    }
}
class C extends B{
    public int m2() 
    {
        return 20;
    }
}
public static void main(String[] args) {
		A obj1=new A();
		B obj2=new B();
		C obj3=new C();
		System.out.println(obj1.m1() + obj3.m1() + obj3.m2());
	}
A.	70
B.	90
C.	Error: Method m1 should be overridden in class C.
D.	80
Answer is A


-------------------------------------------------------------------------
Que-10)

public class Test 
{     
	private Test()
	{	
	}

	public static void Test()
	{
		this();
	}
	public static void main(String[] args)
	{		
		Test t1 = new Test();
	}
}  

a) YES
b) NO

Answer : b) 

-------------------------------------------------------------------------
Que-11)

class Animal
{
 public Animal(){
  System.out.println("Base Constructor");
 }
}
class Cat extends Animal{
 public Cat()
 {	
  System.out.println("Derived Constructor");		
 }
}
public class Program {
 public static void main(String[] args) {
  Cat c = new Cat();   
 }
}

A)Parent Constructor

B)Parent Constructor
  Child Constructor

C)Child Constructor
  Parent Constructor

D)Parent Constructor

Ans:B
--------------------------------------------------------------------------
Que-12)
What is the purpose of the 'super' keyword in Java?

a:To create a new instance of a class
b:To call a method of the child class 
c:To define a static method 
d:To call the constructor of the parent class 
ans :d 

--------------------------------------------------------------------------
Que-13)


What is a multilevel inheritance in java

a:A class extends two or more classes
b:Two or more classes extend the same class
c:A class extends another class which also extends another class
d:All of the above

ans:c

--------------------------------------------------------------------------
Que-14)

class Father {
	public void car() {
		System.out.println("Father's Car");
	}
}
class Son extends Father {
	public void car() {
		System.out.println("Son's Car");
	}
}
public class Sample {
	public static void main(String[] args) {
		Son john = new Son();
		john.car();
	}
}

A.Father s Car
B.Son s Car
C.There is an ambiguity, so no one Car
D.Compiler Error

Answer - B


--------------------------------------------------------------------------
Que-15)

Which of the following is also called as methodOverriding?
1)Runtime Polymorphism
2)Late binding
3)Early binding

a)1
b)1,2
c)1,2,3
d)None of the above

Ans:b (1,2)

-------------------------------------------------------------------------
Que-16)

class A{
      private void printName(){
            System.out.println("Value-A");
      }
}
class B extends A{
      public void printName(){

            System.out.println("Name-B");
      }
}
public class Test{
      public static void main (String[] args){
            B b = new B();
            b.printName();
      }
}


A. Value-A
B. Name-B
C. Value-A Name-B
D. Compilation fails - private methods can't be override
E. None of these

Answer - B
-------------------------------------------------------------------------
Que-17)

class A{
      public A(){
            System.out.println("A");
      }
      public A(int i){
            this();
            System.out.println(i);
      }
}
class B extends A{
      public B(){
            System.out.println("B");
      }
      public B(int i){
            this();
            System.out.println(i+3);
      }
}
public class Test{
      public static void main (String[] args){
            new B(5);
      }
}

A. A B 8
B. A 5 B 8
C. A B 5
D. B 8 A 5
E. None of these

Answer - A

-------------------------------------------------------------------------
Que-18)

Which among the following best defines abstraction?
a) Hiding the implementation
b) Showing the important data
c) Hiding the important data
d) Hiding the implementation and showing only the features

Answer - D

-------------------------------------------------------------------------
Que-19)


public class Test 
{     
	private Test()
	{
		System.out.print("No Argument ");
	}

	public final Test(int t)
	{
		this();
		System.out.print(t);
	}
	public static void main(String[] args)
	{		
		Test t1 = new Test(10);
	}
}  

a) No Argument 10
b) 10 No Argument
c) Compilation error
d) None of these

Answer : c)

-------------------------------------------------------------------------
Que-20)

class Find{
    public void print()
    {
    	System.out.println(" In find");
    }
}
class Course extends Find{
    public void print(){
    	System.out.println(" In course");}
}
class Tech extends Course{ }
public static void main(String[] args) {
		Tech t = new Tech();
	    t.print();
	}
A.	In find
B.	None
C.	Compiler Error: Ambiguous call to print()
D.	In course
Answer is D

-----------------------------------------------------------------------

Program 01 :
------------
Create a class to print an integer and a character with two methods having the same name but different sequence of the integer and the character parameters.

For example, if the parameters of the first method are of the form (int n, char c), then that of the second method will be of the form (char c, int n).

Expected Output:

int=66 char=A

int=67 char=D
pgm
----
package Method_overloading;

public class IntCharOverloadingMethod1 {
public void intChar(int n,char c) {
	System.out.println("int="+n+"\tchar="+c);
}
public void intChar(char c,int n) {
	System.out.println("int="+n+"\tchar="+c);
}
	public static void main(String[] args) {
		IntCharOverloadingMethod1 obj=new IntCharOverloadingMethod1();
		obj.intChar(65, 'a');
		obj.intChar('a', 95);
	}

}


Program 02:
------------
Create a class to print the area of a square and a rectangle. The class has two methods with the same name but different number of parameters. The method for printing area of rectangle has two parameters which are length and breadth respetively while the other method for printing area of square has one parameter which is side of square.

Expected Output:
Area of a Square = 5.289999999999999
Area of a Rectangle = 7.589999999999999

pgm
----
package Method_overloading;

public class  AreaOfASquareAndRectangle2{
public void area(double l,double b) {
	System.out.println("Area of the rectangle:"+(l*b));
}
public void area(double s) {
	System.out.println("Area of the rectangle:"+(s*s));
}
public static void main(String[] args) {
	AreaOfASquareAndRectangle2 ob=new AreaOfASquareAndRectangle2();
	ob.area(1.7,6.3);
	ob.area(4.7);
}
}


Program 03:
------------
Create a class named 'PrintNumber' to print various numbers of different datatypes by creating different methods with the same name 'printn' having a parameter for each datatype.

Expected Output:

In integer 3

In long 33223222332

In double 323233.44

In float 33344.5

In Char A

In String Overloading

package Method_overloading;

public class PrintNumber3 {
public void printn(Object ...x) {
	for(Object y:x) {
		System.out.println(y);
	}
}
	public static void main(String[] args) {
		PrintNumber3 p=new PrintNumber3();
		p.printn(3);
		p.printn(35667788888l);
		p.printn(3.66);
		p.printn(4.5f);
		p.printn('a');
		p.printn("ravali");
	}

}

=================================================================================================
same type-- widening-- autoboxing --var args-- Object

Q1) Find the Output on Method Overloading with Ambiguity

class Test
{	
	public void accept(long ...b)   
	{
		System.out.println("long :");
	}
	    
	public void accept(double ...s)
	{
		System.out.println("double :");
	}	
	
	public void accept(float ...s)
	{
		System.out.println("float :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}
o/p:
long
---------------------------------------------------------------------------
Q2) Find the Output 

class Test
{	
	    
	public void accept(byte ...s)
	{
		System.out.println("byte :");
	}	
	
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}
}
o/p:
byte
---------------------------------------------------------------------------
Q3) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(boolean ...s)
	{
		System.out.println("boolean :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}
}
o/p:
boolean
---------------------------------------------------------------------------
Q4) Find the Output 

class Test
{	
	    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}
o/p:
short
---------------------------------------------------------------------------
Q5) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int :");
	}	
	
	public void accept(char ...s)
	{
		System.out.println("char :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();

	}

}
o/p:
char
---------------------------------------------------------------------------
Q6) Find the Output 

class Test
{		    
	public void accept(short ...s)
	{
		System.out.println("short :");
	}	
	
	public void accept(char ...s)
	{
		System.out.println("char :");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept();
	}
}
o/p:
ce
---------------------------------------------------------------------------
Q7) Find the Output 

class Test
{		    
	public void accept(byte b, int i) {
		System.out.println("byte-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();  
		t1.accept(1, 2);

	}

}
o/p:
ce
---------------------------------------------------------------------------
Q8) Find the Output 

class Test
{		    
	public void accept(byte b, int i) {
		System.out.println("byte-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);
	}
}
o/p:
ce
---------------------------------------------------------------------------
Q9) Find the Output 

class Test
{		    
	public void accept(int b, int i) {
		System.out.println("int-int");
	}
	public void accept(int i, byte b) {
		System.out.println("int-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);

	}
}
o/p:
int-byte
---------------------------------------------------------------------------
Q10) Find the Output 

class Test
{		    
	public void accept(int b, int i) {
		System.out.println("int-int");
	}
	public void accept(Byte i, int b) {
		System.out.println("byte-int");
	}
	public void accept(Byte b1 , byte b2) {
		System.out.println("Byte-byte");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		byte b1 = 1;
		byte b2 = 2;
		t1.accept(b1, b2);
	}
}
o/p:
int-int
---------------------------------------------------------------------------
Q11) Find the Output 

class Test
{		    
	public void accept(int b, Integer i) {
		System.out.println("int-Integer");
	}
	public void accept(long i, int b) {
		System.out.println("long-int");
	}
	public void accept(long i, Object b) {
		System.out.println("long-Object");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		t1.accept(2,4);

	}

}
long-int
---------------------------------------------------------------------------
Q11) Find the Output 

class Test
{		    
	public void accept(int b, Integer i) {
		System.out.println("int-Integer");
	}
	
	public void accept(Byte b, byte i) {
		System.out.println("Byte-byte");
	}
	
	public void accept(byte... l) {
		System.out.println("byte...");
	}
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test(); 
		t1.accept(2,4);
		
		byte b1 = 8;
		byte b2 = 9;		
		t1.accept(b1, b2);

	}
}
int-Integer
Byte-byte
---------------------------------------------------------------------------
Q12) Find the Output 

class Test
{		    
	public void accept(int ...s)
	{
		System.out.println("int var args :");
	}	
	
	public void accept(int x, int ...y)
	{
		System.out.println("int int var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(9);

	}
}
o/p:
ce(Ambiguity issue)
---------------------------------------------------------------------------
Q13) Find the Output 

class Test
{		    
	public void accept(int x)
	{
		System.out.println("int");
	}	
	
	public void accept(long y)
	{
		System.out.println("long");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(9);

	}
}
o/p:
 int
---------------------------------------------------------------------------
Q14) Find the Output 

class Test
{		    
	public void accept(String x)
	{
		System.out.println("String");
	}	
	
	public void accept(Object y)
	{
		System.out.println("Object");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept("Ravi");
		t1.accept(null);
	}
}
o/p:
String
String
---------------------------------------------------------------------------
Q15) Find the Output 

class Test
{		    
	public void accept(String x)
	{
		System.out.println("String");
	}
	
	public void accept(Integer x)
	{
		System.out.println("String");
	}	
	
	public void accept(Object y)
	{
		System.out.println("Object");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(null);

	}
}
o/p:
ce(Ambiguity issue)
---------------------------------------------------------------------------
Q16) Find the Output 

class Test
{		    
	public void accept(Integer x)
	{
		System.out.println("Integer");
	}	
	
	public void accept(long y)
	{
		System.out.println("long");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}
o/p:
long
---------------------------------------------------------------------------
Q17) Find the Output 

class Test
{		    
	public void accept(Integer x)
	{
		System.out.println("Integer");
	}	
	
	public void accept(int ...y)
	{
		System.out.println("var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}
o/p:
Integer
---------------------------------------------------------------------------
Q18) Find the Output 

class Test
{		    
	public void accept(long x)
	{
		System.out.println("long");
	}	
	
	public void accept(int ...y)
	{
		System.out.println("var args");
	}	
}
public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		Test t1 = new Test();
		t1.accept(15);

	}
}
o/p:
long
---------------------------------------------------------------------------
Q19) Find the Output 

public class AmbiguityDemo1
{
	public static void main(String[] args) 
	{
		System.out.println("String array variable");
	}
	
	public static void main(String args) 
	{
		System.out.println("String variable");
	}
}
o/p:
String array variable
---------------------------------------------------------------------------
Q20) Find the Output 

public class AmbiguityDemo1
{
	public static void main(int[] args) 
	{
		System.out.println("int array variable");
	}
	
	public static void main(String args) 
	{
		System.out.println("String variable");
	}
}
o/p:
runtime error
--------------------------------------------------------------------------

Simple Programs
1.Fill the code and the Output is "Welcome to NareshIT"

public class OopsTest
{
    public String nit()
    {
        return "Welcome ";
    }

    public static void main(String[] args)
    {
    	OopsTest n = new OopsTest();
        System.out.print(n.nit());
        OopsTest nit1 = new NIT();
        System.out.print(nit1.nit());
    }
}
class NIT extends OopsTest
{
    //Add code here
public String nit()
    {
        return "to NareshIT";
    }

}	

2.	What is the output of the following code?
class NIT
{	int name;
		NIT(int name)
		{	this.name = name;
		}
}
public class OopsTest
{	public static void main(String[] args) 
{	NIT f1 = new NIT(10);
	NIT f2 = new NIT(10);
	NIT f3 = f2;
	System.out.println(f1==f2);
	System.out.println(f2==f3);
	System.out.println(f1.name==f2.name);
	System.out.println(f2.name==f3.name);
	System.out.println(f1!=f3);
		}
}
o/p:
false
true
true
true
true

3.	What is the output of the following code?
public class OopsTest 
{ 
	public static void main (String args [ ] ) 
	{ 
		int nit1[ ] = new int [10];
		int nit2 [ ] = { 26,55,6,75,41 };
		int nit3 [ ] = { -5,2,44,558,66,-8 }; 
		System.out.println (nit1.length); 
		System.out.println (nit2.length); 
		System.out.println (nit3. length); 
} 
}
o/p:
10
5
6

4. Solve the below code having error
class NIT
{
	int a;
	public NIT(int a) {
		this.a=a;
	}
	static int getNum()
	{
		return this.a;
	}
}
class NIT1 extends NIT
{
	int a;
	public NIT1(int a,int b) {
		super(a);
		this.a=b;
	}
	int getVal()
	{
		return this.a;
	}
}
class OopsMCQ{
public static void main(String[] args) {
	NIT1 nit = new NIT1(74,152);
	System.out.print(nit.getNum()+" "+nit.getVal());
	}
}
o/p:
compiletime error
non-static variable this cannot be referenced from a static context
return this.a;
------------------------------------------

5.What is the output for the code given below?
class NIT
{
	static int a=90;
	String object;
	public NIT(String name) {
		this.object=name;
		NIT.this.a+=1;
	}
	static int get_counter()
	{
		return NIT.a;
	}
}

public class OopsTest
{
	public static void main(String[] args) {
		NIT nit = new NIT("nit");//91 nit
		NIT nit1 = new NIT("nit");//92 nit
		NIT nit2 = new NIT("nit");//93 nit
		NIT nit3 = new NIT("nit");//94 nit
		NIT nit4 = new NIT("nit");//95 nit
		NIT nit5 = new NIT("nit");//96 nit
		NIT nit6 = new NIT("nit");//97 nit
		NIT nit7 = new NIT("nit");//98 nit
		System.out.println(NIT.get_counter()-91);//98-91=7
	}
}
o/p:
7


6.What is the output for the code given below?
class NIT
{
	static int a=90;
	String object;
	public NIT(String name) {
		this.object=name;//nit
		NIT.this.a+=1;
	}
	static int get_counter()
	{
		return NIT.a;
	}
}

public class OopsTest
{
	public static void main(String[] args) {
		NIT nit = new NIT("nit");
		NIT nit1 = new NIT("nit");
		NIT nit2 = new NIT("nit");
		NIT nit3 = new NIT("nit");
		NIT nit4 = new NIT("nit");
		NIT nit5 = new NIT("nit");
		NIT nit6 = new NIT("nit");
		NIT nit7 = new NIT("nit");
		System.out.println(NIT.get_counter()-91);
	}
}
o/p:
7

7.What is the output of the following code?
class NIT
{
	public int nit() { 
		return 10;
	}
	
	protected  int nit1() 
	{
		return 5;
	}
}

class NIT1 extends NIT
{
	@Override
	public int nit() {
		return super.nit();
	}
	
	public int nit1() 
	{
		return 15;
	}
	
	private int nit2() 
	{
		return 20;
	}
}

class NIT2 extends NIT1
{
	public int nit() 
	{
		return 0;
		
	}
	
	int nit1() 
	{
		return 50;
	}
}
class OopsTest
{
	public static void main(String[] args) {
		NIT object = new NIT();//10
		NIT object1 = new NIT1();
		NIT object2 = new NIT2();
		NIT1 object3 = new NIT2();
                System.out.println(object.nit()+object1.nit1()+object1.nit()+object3.nit1()+object2.nit1());//if in NIT2 CLASS if the nit1() accessmodifier is public then it executed o/p:135(10+15+10+50+50=135)
	}
}
o/p:
nit1() in NIT2 cannot override nit1() in NIT1
	int nit1() 
	    ^
  attempting to assign weaker access privileges; was public
---------------------------------------------------------------------------

8.	What is the output of the following code
class NIT{
	String name;
	public NIT(String name) {//name=project
		this.name=name;
	}
}
class NIT1 extends NIT{
	String programmingLanguage;
	public NIT1(String programmingLanguage, String name) {//programmingLanguage=Java,name= NareshIT
		super(name);
		this.programmingLanguage=programmingLanguage;
	}
}
class NIT2 extends NIT{
	String faculty;
	public NIT2(String faculty) {//faculty=Naidu
		super("Naresh");//name=Naresh
		this.faculty=faculty;
	}
}
class OopsTest{
public static void main(String[] args) {
	NIT nit = new NIT("Project");
	System.out.print(nit.name+" ");//project
	NIT1 nit1= new NIT1("Java","NareshIT");
	System.out.print(nit1.name+" "+nit1.programmingLanguage+" ");//NareshIT Java
	NIT2 nit2 = new NIT2("Naidu");
	System.out.println(nit2.name+" "+nit2.faculty);//Naresh  Naidu
	}
}
o/p:
project
NareshIT  Java
Naresh  Naidu
---------------------------------
9.What is the output of the following code
class NIT
{
	static String val = "Welcome to nareshIT";
	String language;
	String faculty;
	String student;
	
	public NIT(String language, String faculty, String student) {//java,naresh,it
		this.faculty = faculty;//naresh
		this.language = language;//java
		this.student = student;//it
	}	
	public void get() 
	{
		System.out.println(this.faculty+" "+this.language+" "+this.student);
	}
}
class OopsTest
{
	public static void main(String[] args) {
		NIT nit = new NIT("Java", "Naresh", "IT");
		nit.get();
	}
}
o/p:
Naresh Java IT
---------------------------------------------------
10.We found errors in line1, line2 and line3. How to resolve the errors in the below code
class NIT
{
	String val = "NareshIT";
	String language;
	String faculty;
	String student;
	
	public NIT(String language, String faculty, String student) {//Java,Naresh,IT
		this.faculty = faculty;
		this.language = language;
		this.student = student;
	}
	
	static public String get() 
	{
		return val; // line 1
	}
	
	public void getValues() 
	{
		System.out.println(NIT.this.faculty+" "+NIT.language+" "+NIT.student); // line 2
	}
	
}

class OopsTest
{
	public static void main(String[] args) {
		System.out.println("Welcome to "+NIT.get());
		new NIT("Java", "Naresh", "IT");
		NIT.getValues(); // line 3
	}
}
----------------------
o/p:
C) Line 1: is expecting to declare Nit class instace variable val with static
Line 2: is expecting to declare Nit class instance variables language and student with static
Line 3: is expeting to call getValues() method of Nit class using Nit class object
--------------
pgm
----
class NIT{
static String val = "NareshIT";
static String language;
static String faculty;
static String student;

public NIT(String language, String faculty, String student) {
    this.faculty = faculty;
    this.language = language;
    this.student = student;
}

static public String get() 
{
    return val; // line 1
}

public void getValues() 
{
    System.out.println(NIT.this.faculty+" "+NIT.language+" "+NIT.student); // line 2
}
}

class OopsTest
{
public static void main(String[] args) {
System.out.println("Welcome to "+NIT.get());
NIT t=new NIT("Java", "Naresh", "IT");
t.getValues(); // line 3
}
}
o/p:
Welcome to NareshIT
Naresh Java IT

--------------------------------------------
o/p:
ce
OopsTest.java:24: error: non-static variable val cannot be referenced from a static context
		return val; // line 1
		       ^
OopsTest.java:29: error: non-static variable language cannot be referenced from a static context
		System.out.println(NIT.this.faculty+" "+NIT.language+" "+NIT.student); // line 2
		                                           ^
OopsTest.java:29: error: non-static variable student cannot be referenced from a static context
		System.out.println(NIT.this.faculty+" "+NIT.language+" "+NIT.student); // line 2
		                                                            ^
OopsTest.java:39: error: non-static method getValues() cannot be referenced from a static context
		NIT.getValues(); // line 3
		   ^
4 errors

After rectifying errors
------------------------
class NIT
{
	String val = "NareshIT";
	String language;
	String faculty;
	String student;
	
	public NIT(String language, String faculty, String student) {//Java,Naresh,IT
		this.faculty = faculty;
		this.language = language;
		this.student = student;
	}
	
	public String get() 
	{
		return val; // line 1
	}
	
	public void getValues() 
	{
		System.out.println(this.faculty+" "+language+" "+student); // line 2
	}
	
}

class OopsTest
{
	public static void main(String[] args) {
		
		NIT t=new NIT("Java", "Naresh", "IT");
		t.getValues(); // line 3
		System.out.println("Welcome to "+t.get());
	}
}
o/p:
Naresh Java IT
Welcome to NareshIT
-----------------------------------

Q11) Find the output of the following Program

class Test
{
   public void access(byte b)
   {
	   System.out.println("byte is executed :"+b);
   }
   public void access(short b)
   {
	   System.out.println("short is executed :"+b);
   }
}
public class Main1 {

	public static void main(String[] args)
	{
	   Test t1 = new Test();
	   t1.access(15); 
	   
	}
}
O/P:
Main1.java:25: error: no suitable method found for access(int)
	   t1.access(15); 
	     ^
    method Test.access(byte) is not applicable
      (argument mismatch; possible lossy conversion from int to byte)
    method Test.access(short) is not applicable
      (argument mismatch; possible lossy conversion from int to short)
1 error
------------------------------------

Q12) Find the output of the following Program
class A
{
	public void access(String x)
	  {
	    System.out.println("String is invoked :"+x);
	  }

	  public void access(Object x)
	  {
	    System.out.println("Object is invoked :"+x);
	  }
}
public class Main2 
{
   public static void main(String[] args) 
   {
	  A a1 = new A(); 
	  a1.access("Ravi");
	  a1.access(null);
   }
}
o/p:
String is invoked :"Ravi"
String is invoked :"null"
---------------------------------
Q13) Find the output of the following Program.
class B
{
	  public void access(Integer x) 
	  {
	    System.out.println("Autoboxing is invoked :"+x);
	  }

	  public void access(long x)  
	  {
	    System.out.println("Widening is invoked :"+x);
	  }
}
public class Main3 {

	public static void main(String[] args) 
	{
		B b1 = new B();
		b1.access(15);

	}

}
o/p:
Widening is invoked :15
-----------------------------------

Q14) Find the output of the following Program

class C
{
	  public void access(Integer x) 
	  {
	    System.out.println("Autoboxing is invoked :"+x);
	  }

	  public void access(int ...x) 
	  {
	    System.out.println("Var-Args is invoked :"+x);
	  }
}
public class Main4 {

	public static void main(String[] args) 
	{
		C c1 = new C();
		c1.access(15);

	}

}
o/p;
Autoboxing is invoked :15
 -------------------------
Q15) Find the output of the following Program
class A
{
            public void access(Integer x)
	  {
	    System.out.println("Integer is invoked :"+x);
	  }


	public void access(String x)
	  {
	    System.out.println("String is invoked :"+x);
	  }	 
}
public class Main5
{
   public static void main(String[] args) 
   {
	  A a1 = new A(); 
	  a1.access("Ravi");//String is invoked :"Ravi"
	  a1.access(null);
   }
}
o/p:
Main5.java:28: error: reference to access is ambiguous
	  a1.access(null);
	    ^
  both method access(Integer) in A and method access(String) in A match
1 error
--------------------------------------------------

What is the output for the code given below?
class NIT
{
int a=90;
String object;
public NIT(String name) {
this.object=name;
NIT.this.a+=1;
}
int get_counter()
{
return a;
}
}

public class Test
{
public static void main(String[] args) {
NIT nit = new NIT(“nit”);
NIT nit1 = new NIT(“nit”);
NIT nit2 = new NIT(“nit”);
NIT nit3 = new NIT(“nit”);
NIT nit4 = new NIT(“nit”);
NIT nit5 = new NIT(“nit”);
NIT nit6 = new NIT(“nit”);
NIT nit7 = new NIT(“nit”);
System.out.println(new NIT(“nit”).get_counter()-91);
}
}



A) Compiler error


B) 98


C) 97


D) 7


E) 0(correct)

=================================================
Question: 1
What is the output of the below program?
class OverLoad{
public void add(byte b, int i) {
System.out.println(“byte-int”);
}
public void add(int i, byte b) {
System.out.println(“int-byte”);
}
}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
byte b1 = 1;
byte b2 = 2;
o.add(b1, b2);

}
}



a. byte-int


b. int-byte


c. Runtime Error

Correct Answer
d. Compile time Error

 Correct
Question: 2
What is the output of the below program?
class OverLoad{
public void add(int b, int i) {
System.out.println(“int-int”);
}
public void add(byte i, int b) {
System.out.println(“byte-int”);
}
}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
byte b1 = 1;
byte b2 = 2;
o.add(b1, b2);

}
}



a. int-int

Correct Answer
b. byte-int


c. Runtime Error


d. Compile time Error

 Correct
Question: 3
What is the output of the below program?
class OverLoad{
public void add(int b, int i) {
System.out.println(“int-int”);
}
public void add(Byte i, int b) {
System.out.println(“byte-int”);
}
public void add(Byte b1 , byte b2) {
System.out.println(“Byte-byte”);
}
}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
byte b1 = 1;
byte b2 = 2;
o.add(b1, b2);

}
}


Correct Answer
a.int-int


b.byte-int


c.Byte-byte


d.ambiguity error

 Correct
Question: 4
What is the output of the below program?
class OverLoad{
public void add(Long b, int i) {
System.out.println(“Long-int”);
}
public void add(Double i, int b) {
System.out.println(“Double-int”);
}

public void add(int i, Float b) {
    System.out.println("int-Float");
}
}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
o.add(4, 5);

}
}



a.Long-int


b.Double-int


c.int-Float

Correct Answer
d.Compile time Error

 Correct
Question: 5
What is the output of the below program?
class OverLoad{
public void add(int b, Integer i) {
System.out.println(“int-Integer”);
}
public void add(long i, int b) {
System.out.println(“long-int”);
}
public void add(long i, Object b) {
System.out.println(“long-Object”);
}

}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
o.add(4, 5);
o.add(6, null);

}
}



a.long-int
long-Object

Correct Answer
b.long-int
int-Integer


c.int-Integer
int-Integer


d.int-Integer
long-Object


e.ambiguity error

 Correct
Question: 6
What is the output of the below program?
class OverLoad{
public void add(int b, Integer i) {
System.out.println(“int-Integer”);
}

public void add(Byte b, byte i) {
    System.out.println("Byte-byte");
}

public void add(byte... l) {
    System.out.println("byte...");
}
}
public class TestMCQ {
public static void main(String[] args) {
OverLoad o = new OverLoad();
byte b1 = 1;
byte b2 = 3;

    o.add(b1,b2);

}
}


Correct Answer
a.Byte-byte


b.byte…


c.Compile time error(Ambiguity)


d.int-Integer

 Correct
Question: 7
What is the output of the below program?
class D {
D() {
this(5);
}

D(int a) {
    this((5l));
}

D(Long l) {

}

D(long... b) {
    this(5.7);
}

D(float f) {
    System.out.println("Float");
}

D(Object o) {
    System.out.println("Object");
}
}

public class TestMCQ {
public static void main(String[] args) {
D d = new D();
}
}


Correct Answer
a. Float


b. Object


c. Compile time error


d. No output

 Correct
Question: 8
What is the output of the below program?

What is the result of compiling and running this program?

class Mammal{
void eat(Mammal m){
System.out.println(“Mammal eats food”);
}
}

class Cattle extends Mammal{
void eat(Cattle c){
System.out.println(“Cattle eats hay”);
}
}

class Horse extends Cattle{
void eat(Horse h){
System.out.println(“Horse eats hay”);
}
}
public class Test{
public static void main(String[] args){
Mammal h = new Horse();
Cattle c = new Horse();
c.eat(h);
}
}


Correct Answer
A. prints “Mammal eats food”


B. prints “Cattle eats hay”


C. prints “Horse eats hay”


D. Class cast Exception at runtime.


E. None of these

 Correct
Question: 9
What is the output of the below program?
Determine output:
class A{
public void method1(){
System.out.print(“Class A method1”);
}
}

class B extends A{
public void method2(){
System.out.print(“Class B method2”);
}
}

class C extends B{
public void method2(){
System.out.print(“Class C method2”);
}
public void method3(){
System.out.print(“Class C method3”);
}
}

public class Test{
public static void main(String args[]){
A a = new A();
C c = new C();
c.method2();
a = c;
a.method3();
}
}



A. Class B method2 Class C method3


B. Class C method2 Class C method3

Correct Answer
C. Compilation Error


D. Runtime exception


E. None of these

 Correct
Question: 10
What is the output of the below program?
class Base{
int value = 0;
Base(){
addValue();
}
void addValue(){
value += 10;
}
int getValue(){
return value;
}
}

class Derived extends Base{
    Derived(){
        addValue();
    }
     void addValue(){
         int value=10;
        super.value +=  20;
    }
}
public class TestMCQ{
    public static void main(String[] args){
        Base b = new Derived();
        System.out.println(b.getValue());
    }
}


A. 30


B. 10

Correct Answer
C. 40


D. 20


E. Compilation error [duplicate varriable]

 Correct
Question: 11
What is the output of the below program?
What will be the output?
class Parent{
public void method(){
System.out.println(“Hi i am parent”);
}
}
public class Child extends Parent{
protected void method(){
System.out.println(“Hi i am Child”);
}
public static void main(String args[]){
Child child = new Child();
child.method();
}
}



A. Compiles successfully and print


B. Compiles successfully and print

Correct Answer
C. Compile time error


D. Run Time error


E. None of This

 Correct
Question: 12
What is the output of the below program?
What will be the output?
class A{
int i = 10;
public void printValue(){
System.out.print(“Value-A”);
}
}

class B extends A{
int i = 12;
public void printValue(){
System.out.print(“Value-B”);
}
}

public class Test{
public static void main(String args[]){
A a = new B();
a.printValue();
System.out.print(a.i);
}
}



A. Value-B 11

Correct Answer
B. Value-B 10


C. Value-A 10


D. Value-A 11


E. None of these

 Correct
Question: 13
What will be the result after compiling this code?
class SuperClass{
public int doIt(String str, Integer… data){
String signature = “(String, Integer[])”;
System.out.println(str + ” ” + signature);
return 1;
}
}

public class Test extends SuperClass{
public int doIt(String str, Integer… data){
String signature = “(String, Integer[])”;
System.out.println(“Overridden: ” + str + ” ” +signature);
return 0;
}

  public static void main(String... args){
        SuperClass sb = new Test();
        sb.doIt("hello", 3);
  }
}


Correct Answer
A. Overridden: hello (String, Integer[])


B. hello (String, Integer[])


C. Compilation fails


D. None of these

 Correct
Question: 14
What is the output of the below program?
public class Brainy{
Brainy(float…a)
{
System.out.println(“java is easy”);
}
Brainy(int…a)
{
System.out.println(“java is tricky”);
}

    public static void main(String[] args){
        Brainy tm = new Brainy();
    }
}


a.No output


b.Compilation error


c.java is easy


d.java is easy
java is tricky

Correct Answer
e.java is tricky

 Correct
Question: 15
What is the output of the below program?
class ParentA {}
class ChildB extends ParentA {}

class Base
{
ParentA demoA()
{
System.out.println(“Base class demo”);
return new ParentA();
}
}

    class Subclass extends Base
    {
        ChildB demoB()
        {
            System.out.println("Subclass demoB");
            return new ChildB();
        }
    }

    public class TestMCQ
    {
        public static void main(String args[])
        {
           Base b = new Base();
           b.demoA();

           Subclass sub = new Subclass();
           sub.demoB();
        }
    }


a.compilation error

Correct Answer
b.Base class demo
Subclass demoB


c.Base class demo
Base class demo


d.Runtime error

 Correct
Question: 16
What is the output of the below program?
class A {
void m1(String x) {
System.out.println(“One”);
}
}
class B extends A {
public void m1(String x) {
System.out.println(“Two”);
super.m1(null);
}
}
public class Test {
public static void main(String[] args){
B obj = new B();
obj.m1(null);
}
}


Correct Answer
a. Output is : Two, One


b. Output is : One, Two


c. Compile time error


d Runtime error

 Correct
Question: 17
Which statements are true


Correct Answer
a. Same method names and same method signature is called Overriding


b. Same method names and same method signature just changing the return type is called Overloading


c. Method signature includes return type, number of arguments, arguments type, and arguments sequence only and nothing else


d. Unchecked exceptions are part of the method signature

 Correct
Question: 18
What is the output of the below program?
class Parent
{
int a = 15;
int display()
{
int b = a*a;
return b;
}
}
class Child extends Parent
{
float display()
{
float d = a/2;
return d;
}
}
public class Main
{
public static void main(String args[])
{
Child ob = new Child();
float num = ob.display();
System.out.println(num);
}
}


Correct Answer
a.compile Time Error


b. 7.5


c. 0


d. 7.0

 Correct
Question: 19
What is the output of the below program?
public class Tricky {

public static void foo(int... x) {
    System.out.println("print int");
}

public void foo(Integer... x) {
    System.out.println("print Integer");
}

 public static void main(String args[]) {
    Tricky.foo(5);
}
}



a.print int


b.print Integer

Correct Answer
c.compile time error


d.Runtime Exception

 Correct
Question: 20
Which among the following best defines abstraction?



a) Hiding the implementation


b) Showing the important data


c) Hiding the important data

Correct Answer
d) Hiding the implementation and showing only the features

 Correct
Question: 21
What is the output for the below code ?
class A{
public A(){
System.out.println(“A”);
}
public A(int i){
this();
System.out.println(i);
}
}
class B extends A{
public B(){
System.out.println(“B”);
}
public B(int i){
this();
System.out.println(i+3);
}
}
public class Test{
public static void main (String[] args){
new B(5);
}
}


Correct Answer
A. A B 8


B. A 5 B 8


C. A B 5


D. B 8 A 5


E. None of these

 Correct
Question: 22
What is the output of the below program?
Determine output:
class A{
public void printValue(){
System.out.println(“Value-A”);
}
}
class B extends A{
public void printNameB(){
System.out.println(“Name-B”);
}
}
class C extends A{
public void printNameC(){
System.out.println(“Name-C”);
}
}

public class Test{
public static void main (String[] args){
B b = new B();
C c = new C();
newPrint(b);
newPrint(c);
}
public static void newPrint(A a){
a.printValue();
}
}



A. Value-A Name-B

Correct Answer
B. Value-A Value-A


C. Value-A Name-C


D. Name-B Name-C


E. None of these

 Correct
Question: 23
What is the output of the below program?
What will be the output?
class A{
int i = 10;
public void printValue(){
System.out.print(“Value-A”);
}
}

class B extends A{
int i = 12;
public void printValue(){
System.out.print(“Value-B”);
}
}

public class Test{
public static void main(String args[]){
A a = new B();
a.printValue();
System.out.print(a.i);
}
}



A. Value-B 11

Correct Answer
B. Value-B 10


C. Value-A 10


D. Value-A 11


E. None of these

 Correct
Question: 24
____ method cannot be inherited to subclass.



A. super


B. static


C. final

Correct Answer
D. private


E. None of these

 Correct
Question: 25
What is the output of the below program?

public class Person{
public void talk(){
System.out.print(“I am a Person”);
}
}

public class Student extends Person{
public void talk(){
System.out.print(“I am a Student”);
}
}

public class Test{
public static void main(String args[]){
Person p = new Student();
p.talk();
}
}



A. I am a Person

Correct Answer
B. I am a Student


C. I am a Person I am a Student


D. I am a Student I am a Person

 Correct
Question: 26
What is the output of the below program?
class Car {
public void start() {
System.out.println(“Car started…”);
}
public Car m1() {
return new Car();

}
}

class BMW extends Car {
public void start() {
System.out.println(“BMW started…”);
}
public BMW m1() {
return new BMW();

}
}

class Audi extends Car {
public void start() {
System.out.println(“Audi started…”);
}
public Car m1() {
return new Audi();
}
}

public class TestMCQ {
public static void main(String[] args) {
Car c1 = new Audi();
c1.m1().start();
}
}



a.Car started…


b.BMW started…

Correct Answer
c.Audi started…


d. Compile time error

 Correct
Question: 27
What is the output of the below program?
class Fruit {
int quantity = 5;

public void order() {
    System.out.println(quantity + " kg ordered...");
}
public Fruit getFruit(Fruit f) {
    return new Apple();
}
}

class Apple extends Fruit {
int quantity = 10;

public void order() {
    System.out.println(quantity + " kg ordered...");
}
public Fruit getFruit(Apple f) {
    return new Orange();
}
}

class Orange extends Fruit {
int quantity = 12;

public void order() {
    System.out.println(quantity + " kg ordered...");
}
public Fruit getFruit(Apple f) {
    return new Orange();
}
}

public class TestMCQ {
public static void main(String[] args) {
Orange o = new Orange();
o.getFruit(o).order();

}
}



a. 5 kg ordered…

Correct Answer
b. 10 kg ordered…


c. 12 kg ordered…


d. Compile time error

 Correct
Question: 28
What is the output of the below program?
public class TestMCQ {
public void m1(String s) {
System.out.println(“String…”);
}
public void m1(Object o) {
System.out.println(“Object…”);
}
public void m1(int i) {
System.out.println(“int..”);
}
public static void main(String[] args) {
TestMCQ t = new TestMCQ();
t.m1(“10”);
t.m1(null);
}
}



a.String…
Object

Correct Answer
b.String…
String…


c. int…
String…


d. int…
Object…

 Incorrect
Question: 29
What is the output of the below program?
class Bank {
public void deposit() {
System.out.println(“Amount deposited”);
}
private void loan() {
System.out.println(“Loan approved”);
}
}

class SBI extends Bank {
public void deposit() {
System.out.println(“Amount deposited in SBI”);
}
private void loan() {
System.out.println(“Loan approved by SBI”);
}
}
public class TestMCQ {
public static void main(String[] args) {
Bank b = new SBI();
b.deposit();
b.loan();
}
}



a.Amount deposited
Loan approved


b.Amount deposited in SBI
Loan approved by SBI

Incorrect Answer
c. Amount deposited in SBI
Loan approved


d. Amount deposited
Loan approved by SBI

Correct Answer
e. Compile time error

 Correct
Question: 30
What is the output of the below program?
class P {
int x = 10;
int y = 20;

public void add() {
    System.out.println(x + y);
}
}
class Q extends P {
int x = 30;
int y = 40;
public void add() {
System.out.println(x + y);
}
public void exchange() {
this.x = super.x;
this.y = super.y;
}
}

class R extends Q {
public void exchange() {
this.x = super.x;
this.y = super.y;
}
public void add() {
System.out.println(x + y);
}
}
public class TestMCQ {
public static void main(String[] args) {
R r = new R();
r.exchange();
r.add();
}
}



a. 30

Correct Answer
b. 70


c. 0


d. Compile time error

 Correct
Question: 31
What is the output of the below program?
class M {
void m1() {
System.out.println(“m1 from M”);
}
}

class N extends M {
public void m1() {
System.out.println(“m1 from N”);
super.m1();
}
}

class O extends N {
void m1() {
System.out.println(“m1 from O”);
super.m1();
}
}

public class TestMCQ {
public static void main(String[] args) {
O o = new O();
o.m1();
}
}



a. m1 from M
m1 from N


b. m1 from O
m1 from M


c. m1 from O
m1 from N

Correct Answer
d. Compile time Error

 Correct
Question: 32
which statement is false in the following Statements


Correct Answer
a.in a method multiple var-args parameters are allowed


b.the var-args argument must be the last parameter


c. object var-args can store premitive type data


d. int var-args can store null

 Incorrect
Question: 33
class Vehicle {
public void printSound() {
System.out.print(“vehicle”);
}
}

class Car extends Vehicle {
public void printSound() {
System.out.print(“car”);
}
}

class Bike extends Vehicle {
public void printSound() {
System.out.print(“bike”);
}
}

public class Test1 {
public static void main(String[] args) {
Vehicle v = new Car();
Car c = (Car) v;

    v.printSound();
    c.printSound();
}   
}


Correct Answer
a. car car


b. Compilation error

Incorrect Answer
c. ClassCastException


d. vehicle car

 Correct
Question: 34
public class Test2 {

public static void book(short a) {
    System.out.print("short ");
}

public static void book(Short a) {
    System.out.print("SHORT ");
}

public static void book(Long a) {
    System.out.print("LONG ");
}

public static void main(String[] args) {
    short shortRoom = 1;
    int intRoom = 2;

    book(shortRoom);
    book(intRoom);
}
}


Correct Answer
a. compilation error


b. LONG


c. SHORT


d. short
===============================================
Ques - 1
-----------

class Car {
	public int carNumber = 1234;

	void start() {
		System.out.println("Car started");
	}

	protected void stop() {
		System.out.println("Car stopped");
	}
}

class Audi extends Car {
	protected int carNumber = 4321;

	protected void start() {
		System.out.println("Audi started");
	}

	public void stop() {
		System.out.println("Audi stopped");
	}
}

public class TestMCQ {
	public static void main(String[] args) {
		Car c = new Audi();
		c.start();
		c.stop();
		System.out.println(c.carNumber);
	}
}


ANs : Audi started
Audi stopped
1234

Ques - 2
------------
class Vehicle {
	Vehicle() {
		honk().display();
	}

	public Vehicle honk() {
		System.out.println("Vehicle is honking");
		return this;
	}

	public void display() {
		honk();
	}
}

class BMW extends Vehicle {
	BMW() {
		honk().display();
	}

	public Vehicle honk() {
		System.out.println("BMW is honking");
		return this;
	}

	public void display() {
		honk();
	}

}

public class TestMCQ {
	public static void main(String[] args) {
		Vehicle v = new BMW();

	}
}

Ans : BMW is honking
      BMW is honking
      BMW is honking
      BMW is honking

Ques - 3
------------
class Some {
	int i = 10;
	void m1() {
		System.out.println("Some "+this.i);
	}
}
class Thing extends Some {
	int i = 20;
	Some s = new Some();
}
public class TestMCQ {
	public static void main(String[] args) {
		Thing t = new Thing();
		t.s.m1();
 
	}
}

Ans : Some 10

Ques - 4
------------
class Animal {
	String name  = "Any";
	public void eat(Rabbit a) {
		System.out.println("Eating "+a.name+" animal");
	}
}
class Rabbit extends Animal {
	String name = "Bunny";
	public void eat(Animal a) {
		System.out.println("Eating "+a.name+" grass");
	}
}
class Grass {
	String color = "Green";
	public static void execute(Animal a) {
		a.eat(a);
	}
}
public class TestMCQ {
	public static void main(String[] args) { 
		Animal a = new Rabbit();
		Grass.execute(a);
	}
}


Ans : CE
Ques - 5
------------
class Base {
	Base() {
		this(10);
	}

	Base(int a) {
		m1(a);
	}

	void m1(int a) {
		System.out.println(a);
	}

}

class Derived extends Base {
	Derived() {
		this(20);
	}

	Derived(int a) {
		m1(a);
	}

	void m1(int a) {
		System.out.println(a);
	}
}

public class TestMCQ {
	public static void main(String[] args) {
		Derived d = new Derived();

	}
}

Ans: 10
     20

Ques - 6
------------
class Example {
	Example(){
		this(new int[] {1,2,3,4});
		System.out.println("NPC");
	}
	
	Example(int...a){
		System.out.println("int var args");
	}
	Example(Integer[] a){
		System.out.println("Integer []");
		
	}
}
public class TestMCQ {
	public static void main(String[] args) {
       Example e = new Example();
	}
}

Ans: int var args
     NPC


Ques - 7
------------
What will be the output of the following Java code?

    class A 
    {
        public int x;
        private int y;
    }    
    class B extends A 
    {
        void display() 
        {
            super.y = super.x + 1;
            System.out.println(super.x + " " + super.y);
        }
    }    
    class TestMCQ 
   {
        public static void main(String args[])
        {
            B obj = new B();
            obj.x=1;
            obj.y=2;   
            obj.display();     
        }
   }
a) 2 2
b) 3 3
c) Runtime Error
d) Compilation Error

Answer:-d

Ques - 8
------------
What will be the output of the following Java program?

class Atom {
	 Atom() 
	{ 
	System.out.print("atom "); 
	}
}
class Rock extends Atom {
	Rock(String type) 
	{ 
	System.out.print(type); 
	}
}
 public class Mountain extends Rock {
	Mountain()
	 {
		super("granite ");
		new Rock("granite ");
	 }
	public static void main(String[] a) 
	{
	 new Mountain(); 
	}
}


A.Compilation fails.
B.atom granite
C.granite granite
D.An exception is thrown at runtime.
E.atom granite atom granite

Answer:-E

Ques - 9
------------
What will be the result of compiling and running the following program?
public class Polymorphism2 {
 public static void main(String[] args) {
 A ref1 = new C();
 B ref2 = (B) ref1;
 System.out.println(ref2.g());
 }
}
class A {
 private int f() { return 0; }
 public int g() { return 3; }
}
class B extends A {
 private int f() { return 1; }
 public int g() { return f(); }
}
class C extends B {
 public int f() { return 2; }
}
Select the one correct answer.
(a) The program will fail to compile.
(b) The program will compile and print 0, when run.
(c) The program will compile and print 1, when run.
(d) The program will compile and print 2, when run.
(e) The program will compile and print 3, when run.

Ans: C
Ques - 10
------------
What will be the result of compiling and running the following program?
public class Polymorphism {
 public static void main(String[] args) {
 A ref1 = new C();
 B ref2 = (B) ref1;
 System.out.println(ref2.f());
 }
}
class A { int f() { return 0; } }
class B extends A { int f() { return 1; } }
class C extends B { int f() { return 2; } }
Select the one correct answer.
(a) The program will fail to compile.
(b) The program will compile but will throw a ClassCastException, when run.
(c) The program will compile and print 0, when run.
(d) The program will compile and print 1, when run.
(e) The program will compile and print 2, when run.

Ans :e

Ques - 11
------------
What is the result of compiling and running the following program?
class YingYang {
 void yingyang(Integer i) {
 System.out.println("Integer: " + i);
 }
 void yingyang(Integer[] ints) {
 System.out.println("Integer[]: " + ints[0]);
 }
 void yingyang(Integer... ints) {
 System.out.println("Integer...: " + ints[0]);
 }
}
public class RQ800_50 {
 public static void main(String[] args) {
 YingYang yy = new YingYang();
 yy.yingyang(10);
 yy.yingyang(10,12);
 yy.yingyang(new Integer[] {10, 20});
 yy.yingyang(new Integer(10), new Integer(20));
 }
}
Select the one correct answer.
(a) The class YingYang does not compile because of errors.
(b) The program compiles and prints:
Integer: 10
Integer...: 10
Integer...: 10
Integer...: 10
(c) The program compiles and prints:
Integer: 10
Integer...: 10
Integer[]: 10
Integer...: 10

Ans : A

Ques - 12
------------
Which letters will be printed when the following program is run?
public class MyClass {
 public static void main(String[] args) {
 B b = new C();
 A a = b;
if (b instanceof A) System.out.println("A");
if (b instanceof D) System.out.println("B");
if (a instanceof C) System.out.println("C");
if (a instanceof D) System.out.println("D");
}
}
class A {}
class B extends A {}
class C extends B {}
class D extends C {}
Select all the  correct answers.
(a) A will be printed.
(b) B will be printed.
(c) C will be printed.
(d) D will be printed.

Ans:a,c

Ques - 13
------------
Given the following class and reference declarations, what can be said about the
statement y = (Sub) x?
// Class declarations:
class Super {}
class Sub extends Super {}
public class MyClass {
	public static void main(String[] args) {
		Super x = new Super();
		Sub y;
		y = (Sub) x;

	}

}

Select the one correct answer.
(a) Illegal at compile time.
(b) Legal at compile time, but illegal at runtime.
(c) Definitely legal at runtime, but the cast operator (Sub) is not strictly needed.
(d) Definitely legal at runtime, and the cast operator (Sub) is needed.

Ans : b

Ques - 14
------------
What is the label of the first line that will cause compilation to fail in the following
program?

class MyClass {
 public static void main(String[] args) {
 MyClass a;
 MySubclass b;
 a = new MyClass(); // (1)
 b = new MySubclass(); // (2)
 a = b; // (3)
 b = a; // (4)
 a = new MySubclass(); // (5)
 b = new MyClass(); // (6)
 }
}
class MySubclass extends MyClass {}
Select the all correct answers.
(a) (1)
(b) (2)
(c) (3)
(d) (4)
(e) (5)
(f) (6)

Ans:d,f

Ques - 15
------------
Given the following classes and declarations, which statements are true?
// Classes
class Foo {
 private int i;
 public void f() { /* ... */ }
 public void g() { /* ... */ }
}
class Bar extends Foo {
 public int j;
 public void g() { /* ... */ }
}
// Declarations:
 Foo a = new Foo();
 Bar b = new Bar();
Select all the correct answers.
(a) The Bar class is a subclass of Foo.
(b) The statement b.f(); is legal.
(c) The statement a.j = 5; is legal.
(d) The statement a.g(); is legal.
(e) The statement b.i = 3; is legal.

Ans : a,b,d

Ques - 16
------------

Method signature consists of

a) Method Name, Return Type and Number Of Arguments
b) Access Modifier, Method Name and Types Of Arguments
c) Method Name, Number Of Arguments, Types Of Arguments and Order Of Arguments
d) Return Type, Access Modifier and Order Of Arguments


Ans:c
Ques - 17
------------
final methods can be overridden but can’t be overloaded? True or False?

a)True
b)false

Ans: b
Ques - 18
------------

Out of the listed access modifiers, which can be applied to a class?
a. public
b. private
c. protected
d. default

A.a & b

B.a & d

C.a, b, & d

D.All of the above

Ans:B

Ques - 19
------------

What will be the outcome of the following program?
	
class ABC
{
    void methodABC()
    {
        new XYZ().methodXYZ();
    }
}
 
class XYZ extends ABC
{
    void methodXYZ()
    {
        methodABC();
    }
}
 
public class MainClass
{
    public static void main(String[] args)
    {
        new ABC().methodABC();
    }
}

A.Compiletime Error 
B.stackoverflow error
C.it's no compilation error
D.no output

ans:B

Ques - 20
------------

Q 9: What is the output of this program?
    class A 
    {
        public int i;
        public int j;
        A() 
        {
            i = 1;
            j = 2;
	}
    }    
    class B extends A 
    {
        int a;
        B() 
        {
            super();
        } 
    }    
    class super_use 
    {
        public static void main(String args[])
        {
            B obj = new B();
            System.out.println(obj.i + " " + obj.j)     
        }
   }


a.1 2
b.2 1
c.Runtime Error
d.Compilation Error

Ans :a
Ques - 21
------------

Q 20: What will be the output?
class Parent{
      public void method(){
            System.out.println("Hi i am parent");
      }
}
public class Child extends Parent{
      protected void method(){
            System.out.println("Hi i am Child");
      }
      public static void main(String args[]){
            Child child = new Child();
            child.method();
      }
}

A.Compiles sucessfully and print
B.compiles sucessfully and print
c.compile time error
D.Runtime error

Ans:C

Ques - 22
------------
Which of the below code can be insert at line 7 to make clean compilation ?

class A{
      A(String s){}

      A(){}
}

1. class B extends A{
2.       B(){}
3.       B(String s){
4.             super(s);
5.       }
6.       void test(){
7.             // insert code here
8.       }
9. }

A. A a= new B();
B. A a=new B(5);
C. A a=new A(String s);
D. All of the above

Ans:A

Ques - 23
------------
 What will be the result of compiling and running the given code?

class A{
      int b=10;
      private A(){
            this.b=7;
      }
      int f(){
            return b;
      }
}
class B extends A{
      int b;
}
public class Test{
      public static void main(String[] args){
            A a = new B();
            System.out.println(a.f());
      }
}

A.Compilation Fails
B.Prints 0
C.Prints 10
D.Prints 7

Answer :A


Ques - 24
------------

 
Constructors are used to:

A.To build a user interface.
B.Free memory.
C.Initialize a newly created object.
D.To create a sub-class.

Ans:C

Ques - 25
------------

Will the code successfully compiled? If yes, what is the output?

public class A { 
   int x = 20;
}
public class B extends A {
   int x = 30;
}
public class Test {
public static void main(String[] args) 
{
   B b = new B();
   System.out.println(b.x); 
 
   A a = new A();
   System.out.println(a.x);
 
   A a2 = new B();
   System.out.println(a2.x);
  }
}

A) Compilation Error
B) 30, 20, 20
C) 20, 30, 30
D) 30, 20, 30
E) 30, 30, 20

Ans: B
Ques - 26
------------
Will this code run successfully? If yes, what will be the output?

public class A 
{
   private int x = 50;	
   void m1() {
       System.out.println(x);	 
 }
}
public class B extends A {

}
public class Test {
public static void main(String[] args) 
{
   A a = new B();
    a.m1();
  }
}

A) Compilation Error
B) 50
C) 0
D) Runtime Error
E) No Output (Empty Console)

Ans:B


Ques - 27
------------

public class A 
{ 
  public Object m1()
  { 
     System.out.println("Hello, this is a superclass"); 
     return null; 
  } 
} 
public class B extends A
{ 
   @Override 
   public String m1() 
   { 
      System.out.println("Hello, this is the subclass"); 
      return null; 
   } 
 } 
public class AB { 
public static void main(String[] args) 
{ 
     B b = new B(); 
     b.m1(); 
     
     A a = new B(); 
     a.m1(); 
  } 
}

A) Compilation Error in class B
B) Compilation Error in class AB
C) Hello, this is the subclass followed by Hello, this is a superclass
D) Hello, this is a superclass followed by Hello, this is the subclass
E) Hello, this is the subclass followed by Hello, this is a subclass

Ans:E

Ques - 28
------------
Given:
1. class Voop {
2. public static void main(String [] args) {
3. doStuff(1);
4. doStuff(1,2);
5. }
6. // insert code here
7. }
 Which, inserted independently at line 6, will compile? (Choose all that apply.)
 A. static void doStuff(int... doArgs) { } 
 B. static void doStuff(int[] doArgs) { }
 C. static void doStuff(int doArgs...) { }
 D. static void doStuff(int... doArgs, int y) { }
 E. static void doStuff(int x, int... doArgs) { }

Ans- A and E

Ques - 29
------------

What is output of the program?
class Test{
        public void display(int
 x, double y){
                System.out.println(x+y);
        } 
        public double display(int p, double q){
                return (p+q);
        }
        public static void main(String args[]){
                Test test = new Test();
                test.display(4, 5.0);
                System.out.println(test.display(4, 5.0));
        }
}
A. 9.0 9.0
B. 9 9
C. Compilation Error
D. None of these

Answer - C

Ques - 30
------------
What is output of the program?
class Test{
        public void display(int
 x, double y){
                System.out.println(x+y);
        } 
        public double display(int p, double q){
                return (p+q);
        }
        public static void main(String args[]){
                Test test = new Test();
                test.display(4, 5.0);
                System.out.println(test.display(4, 5.0));
        }
}
A. 9.0 9.0
B. 9 9
C. Compilation Error
D. None of these

Answer - C
================================================================
Program: 1
----------
Write a Program to find the following entities
1. Area of Geometric shape
2. Area of rectangle
3. Volume for cube
We have four classes named as GeometricShape, Rectangle, Cuboid and Test

For GeometricShape class
Instance Variables:
shapeType : String default 
area : double default

No Argument constructor with initialize shapeType and area with default values.  

Methods: 
public double computeArea(double value1, double value2)  : Return default area .
public void show() : print all the details of GeometricShape


For Rectangle class is a sub class of GeometricShape
Instance Variables:
width : double private 
length : double private

No Argument constructor with initialize width and length as 10.

Methods : set and get methods for width and length

@Override
computeArea(double width, double length): It initialize the instance variable height, width, area and also return the area. 

@Override
show() : print length, width and area of Rectangle

For Cuboid class is a sub class of Rectangle
Instance Variables:
height : double private
Methods: set and get method for height and computeArea(double ,double ,double)

No Argument constructor with initialize height as 15
public double computeArea(double width, double length, double height) : Invoke the computeArea() method of the parent class using super to calculate the base area and Set the height and compute the total area by multiplying the base area with the height and return the area.

@Override
show() : print width, length, height and area of cuboid.

Create a Test class ans create  instances of Rectangle and Cuboid, computes their areas, and displays the details using the show() method. 

BLC CLASS
GeometricShape
--------------
public class GeometricShape {
String shapeType;
double area;
public GeometricShape() {
	shapeType="null";
	area=0;
}
public double computeArea(double value1, double value2) {
	return area;
}
public void show() {
	System.out.println("shapeType="+"\nArea="+area);
}

}

BLC CLASS
Rectangle
-----------
public class Rectangle extends GeometricShape{
private double width;
private double length;
public Rectangle() {
	this.width=10;
	this.length=10;
	shapeType="Rectangle";
}
public double getWidth() {
	return width;
}
public double getLength() {
	return length;
}
public void setWidth(double width) {
	this.width = width;
}
public void setLength(double length) {
	this.length = length;
}
@Override
public double computeArea(double width,double length) {
    this.width=width;
     this.length=length;
     area=width*length;
	return area;
}
@Override
public void show() {
	System.out.println("shapeType="+shapeType+"\nWidth="+width+"\nlength="+length+"\nArea="+area);
}
}
BLC CLASS
Cuboid
-------------
public class Cuboid extends Rectangle{
private double height;
public void setHeight(double height) {
	this.height=height;
}
public double getHeight() {
	return height;
}
public Cuboid() {
	this.height=15;
	shapeType="Cuboid";
	
}
public double computeArea(double width,double length,double height) {
	this.height=height;
	area=super.computeArea(width,length)*height;
	return area;
}
@Override
public void show() {
	System.out.println("shapeType="+shapeType+"\nwidth="+getWidth()+"\nLength="+getLength()+"\nheight="+height+"\n Area="+area);
}
}
ELC CLASS
Test
--------
public class Test {

	public static void main(String[] args) {
		GeometricShape g=new Rectangle();
		g.computeArea(5, 6);
		g.show();
		Cuboid c=new Cuboid();
		c.computeArea(2.0,5.0,7.0);
		c.show();
	}

}

Program 2
-----------
Create a BLC class Named as Shape and it have three sub classes named as Circle, Triangle and Square for each class have two methods called as draw() and erase()

Main class named as ShapeDemo

For Shape class
Methods: 
public static Shape randshape()
No Argument constructor

randshape(): Using switch ((int)Math.randome()*3) 
case 0: create an object for Circle Object using return
case 1: create an object for Square Object using return
case 2: create an object for Triangle Object using return
default: Print as default message
finally return an object for Shape class

Use this class to test your solution's class and methods in main method
For Shape class

Methods: In draw():void and erase():void and No argument constructor
draw(): print "shape draw" 
erase(): print "Shape erase"

For Circle class sub class of Shape class
Methods: In draw():void and erase():void and No argument constructor
Override:
draw() method print "Circle draw" and erase() method print "Circle erase"

For Triangle class sub class of Shape class
Methods: In draw():void and erase():void and No argument constructor
Override:
draw() method print "Triangle draw" and erase() method print "Triangle erase"

For Square class sub class of Shape class
Methods: In draw():void and erase():void and No argument constructor
Override:
draw() method print "Square draw" and erase() method print "Square erase"

-----------------------------
package lab1;

public class Shape {
       public Shape(){}
	public static Shape randShape()
	{
		switch((int)Math.random()*3)
		{
		case 0:return new Circle();
		case 1:return new Square();
		case 2:return new Triangle();
		default: System.out.print("default");
		return new Shape();
		}
		
	}
	public void draw()
	{
		System.out.println("shape draw");
	}
	public void erase()
	{
		System.out.println("shape erase");
	}
	
}
-------------------------------------
package lab1;
public class Circle extends Shape {
	@Override
	public void draw()
	{
		System.out.println("Circle draw");
	}
	@Override
	public void erase()
	{
		System.out.println("circle erase");
	}
	

}
---------------------------------
package lab1;

public class Triangle extends Shape{
	@Override
	public void draw()
	{
		System.out.println("Triangle draw");
	}
	@Override
	public void erase()
	{
		System.out.println("Triangle erase");
	}

}
------------------------------------
package lab1;

public class Square extends Shape{
	@Override
	public void draw()
	{
		System.out.println("Square draw");
	}
	@Override
	public void erase()
	{
		System.out.println("Square erase");
	}

}
-------------------------------------------
package lab1;

public class ShapeDemo {
	public static void main(String args[]) {
	Shape sh3 =  Shape.randShape();
	// call draw and erase methods
             sh3.draw();
             sh3.erase();	
        Shape sh =Shape.randShape();
	  // call draw and erase methods
		        sh.draw();
		        sh.erase();
		     Shape sh1 = Shape.randShape();
				// call draw and erase methods
		        sh1.draw();
		        sh1.erase();
			  Shape sh2 = Shape.randShape();
				// call draw and erase methods
			    sh2.draw();
		        sh2.erase();	
	}

}
------------------------------------------

Program 01 :
------------
Create an application to compare two objects based on the content by overriding the equals(Object obj) method of Object class.

Create a BLC class called Product

Instance variables :
private int productId
private String productName

Create a parameterized constructor to initialize all properties.

Override equals(Object obj) method from Object class to compare the content of Product object, Make sure that if end user try to compare the content of two different objects (Product and Employee) then program should provide proper message.

Create an ELC class ProductEquality to test your application by creating two objects of Product class to compare the content by calling Product class overridden equals(Object obj) method.


BLC CLASS
Product3
--------------
package Override;

public class Product3 {
private int productId;
private String productName;
public Product3(int productId, String productName) {
	super();
	this.productId = productId;
	this.productName = productName;
}
public boolean equals(Object obj) {
	Product3 p=(Product3)obj;
	if(this.productId==p.productId&&this.productName.equals(p.productName))
		return true;
	else
		return false;
}
}

ELC CLASS
ProductEquality3
----------------
package Override;

public class ProductEquality3 {

	public static void main(String[] args) {
		Product3 p1=new Product3(1,"rassi");
		Product3 p2=new Product3(2,"rassi");
		System.out.println(p1.equals(p2));
		
	}

}

Program 02 :
------------
Create one BLC class Sports

Methods: 
getName(String): String, 
getNumberOfTeamMembers() :String
getName method returns a String value as "Sports".
getNumberOfTeamMembers method returns a String value as "Each team has n 
players in Sports".

Create sub class of Sports called Soccer.
Define the Soccer class with following specifications :-
Soccer:
Methods: override getName(String) from parent class.
This method returns a String value as any sports name.
override getNumberOfTeamMembers from parent class.
This method returns a String value as "In sports(given via getName()),each team has 11 
players".
Sample Output
=============
4
In Soccer,
each team has 11 players.
Note:
===== 
A class Testing is given to you with a main method. 
Use this class to test your solution's classes and methods
package Override;

BLC CLASS
Soccer4
-------
public class Soccer4 extends Sports4{
@Override
public String getName(String s) {
		return s;
	}
@Override
public String getNumberOfTeamMembers() {
	int mem=11;
	return "In "+getName("soccer")+",\neach team has " +mem+ " players.";
}
}
BLC CLASS
Sports4
--------
package Override;

public class Sports4 {
public String getName(String s) {
	return "Sports";
}
public String getNumberOfTeamMembers() {
	return "Each team has n players in Sports";
}
}
ELC CLASS
main4
-----------
package Override;

public class main4 {

	public static void main(String[] args) {
		Sports4 s=new Soccer4();
		System.out.println(s.getNumberOfTeamMembers());
	}

}


------------------------------------------------------------------------


Program: 1
----------
Create an abstract class Student with the following attributes.
Instance Variables: 
studentName: protected String
studentClass: protected String
totalNoOfStudents : protected static int
Instance Methods:
abstract public : getPercentage( ) with return type int 
static Method :
public static int getTotalNoStudents( )
Constructors:
No Argument constructor is a MUST.
Parameter constructor must initialize name and class and it also increase totalNoOfStudents.

Create a class ScienceStudent that inherits from Student. 
Add the following attributes
Instance variables:
physicsMarks: private int
chemistryMarks: private int
mathsMarks: private int
Methods:
Override, getPercentage() method to compute and return the percentage of marks(Max marks for a subject :100)

Create a class HistoryStudent that inherits from Student. 
Add the following attributes.
Instance variables: 
historyMarks: private inPercentaget
civicsMarks: private int (Max Marks for a subject : 100)
Method:
Override getPercentage() method to computed and return the percentage of marks(Max marks for a subject :100)



Create an ELC class StudentTester with main method, use this class to test your code.
Test all the three classes and the abstract method implementation with different inputs.


BLC CLASS
Student1
---------
package Abtract_Class;

public abstract class Student1{
	protected String studentName;
	protected String studentClass;
	protected static int totalNoOfStudents;
	public abstract int getPercentage();
	public Student1() {}
	public Student1(String studentName,String studentClass,int totalNoOfStudents) {
		this.studentName=studentName;
		this.studentClass=studentClass;
		this.totalNoOfStudents=++totalNoOfStudents;
	}
	public static int getTotalNoOfStudent() {
		return totalNoOfStudents;
	}
	@Override
	public String toString() {
		return "Student1 [studentName=" + studentName + ", studentClass=" + studentClass + "]";
	}
	
}

BLC CLASS
ScienceStudent1
---------------
package Abtract_Class;

public class ScienceStudent1 extends Student1{
private int physicsMarks;
private int chemistryMarks;
private int mathsMarks;
public ScienceStudent1(String studentName,String studentClass,int totalNoOfStudents,int pm,int cm,int mm) {
	super(studentName,studentClass,totalNoOfStudents);
	this.physicsMarks=pm;
	this.chemistryMarks=cm;
	this.mathsMarks=mm;
}
@Override
public int getPercentage() {
	int per=(physicsMarks+chemistryMarks+mathsMarks)/3;
	 return per;
}
}
BLC CLASS
HistoryStudent1
----------------
package Abtract_Class;

public class HistoryStudent1 extends Student1{
private int historyMarks;
private int civicsMarks;
public HistoryStudent1(String studentName,String studentClass,int totalNoOfStudents,int hm,int csm) {
	super(studentName,studentClass,totalNoOfStudents);
	this.historyMarks=hm;
	this.civicsMarks=csm;
}
@Override
public int getPercentage() {
	int per=(historyMarks+civicsMarks)/2;
	 return per;
}
}

ELC CLASS

package Abtract_Class;

public class StudentTester1 {

	public static void main(String[] args) {
		Student1 s=new ScienceStudent1("ravi","10th",10,90,80,70);
		System.out.println(s);
		System.out.println("number of science student:"+s.getTotalNoOfStudent());
		System.out.println("percentage of "+s.studentName +" is "+s.getPercentage());
		Student1 s1=new HistoryStudent1("rassi","b,tech",11,90,80);
		System.out.println(s1);
		System.out.println("number of history student:"+s1.getTotalNoOfStudent());
		System.out.println("percentage of "+s1.studentName +" is "+s1.getPercentage());
}
}

===================================================
Program: 2
-----------
Create an abstract class Book class with following specifications:-
Instance Variables: 
title : String
Methods: 
setTitle(String): void : abstract , 
getTitle() :String
	
Create a sub classes of  Book called MyBook class with following specifications 
Methods: 
override setTitle from parent class.
        This method takes the book title as parameter and assigns it into the instance variable of parent class.
override getTitle from parent class.
 This method returns the name of the book in the format mentioned below in Sample Output.
Sample Input
A tale of two cities
Sample Output
The title of my book is: A tale of two cities
A class Testing is given to you with a main method. Use this class to test your solution's classes and methods.

BLC CLASS
Book2
----------
package Abtract_Class;

public abstract class Book2 {
String title;
public  abstract void setTitle(String s);
public  abstract String getTitle() ;
	
}

BLC CLASS
MyBook2
-----------
package Abtract_Class;

public class MyBook2 extends Book2{
	@Override
	public void setTitle(String s) {
		this.title=s;
	}
	@Override
	public String getTitle() {
		return "The title of my book is:"+title;
	}
}

ELC CLass
Testclass2
---------
package Abtract_Class;

public class Testclass2 {

	public static void main(String[] args) {
		Book2 b=new MyBook2();
		b.setTitle("A tale of two cities");
		System.out.println(b.getTitle());
	}

}

========================================================

Program 01
-----------
We have a class named as Car and it is abstract class we need to implement abstract method in 
sub class named as Test
For abstract class Car 
Instance Variables:
brand : String default
model : String default
mileage : int default
top_speed : int default
yearOfManufacturing : int default
Methods:
No Argument Constructor
carBrand() : String : It return brand of the car by using brand variable so initialize brand variable and return it.

carModel() : String : It return model of the car by using model variable so initialize model variable and return it.

carMileage() : int : It return mileage of the car by using mileage variable so initialize mileage variable and return it 

carTopSpeed() : int : It return topspeed of the car by using top_speed variable so initialize top-speed variable and return it 

carYear() : int : It return year of manufacturing of the car by using yearOfManufacturing 

variable so initialize yearOfManufacturing variable and return it
display() : void : abstract : This is abstract method to implement in 

sub class
Create a sub class of Car called as Test
Methods:
@Override
display(): void : It print all the details of parent class
This class having main method to test the solutions of parent class

BLC CLASS
Car3
---------
package Abtract_Class;

public abstract class Car3 {
String brand;
String model;
int mileage;
int top_speed;
int yearOfManufacturing;
public Car3() {}
public String carBrand() {
	brand="maruthi";
	return brand;
}
public String carModel() {
	model="bmw";
	return model;
}
public int carMileage() {
	this.mileage=80;
	return mileage;
}
public int carTopSpeed() {
	this.top_speed=70;
	return top_speed;
}
public int carYear() {
	this.yearOfManufacturing=2022;
	return yearOfManufacturing;
}
public abstract void display();
}

ELC CLASS
Test3
-------
package Abtract_Class;

public class Test3 extends Car3{
	public void display() {
		System.out.println("car brand:"+carBrand()+"\ncar model:"+carModel()+"\ncar mileage:"+carMileage()+"\ncar top speed:"+carTopSpeed()+"\nyear of manufactured:"+carYear());
	}
	public static void main(String[] args) {
		Car3 c=new Test3();
		c.display();
	}
}


------------------------------------------------------------------------
Program 02 :
-------------

Nutrition in food can be broken down into proteins, fats, and carbohydrates. Implement the following classes about food and nutrition to complete this challenge:

1. abstract class Food with the following properties:

double proteins
double fats
double carbs
double tastyScore
void getMacroNutrients [Abstract Method]

2. class Egg which extends class Food and has the following properties:

Constructor to initialize the attributes (proteins, fats, and carbs) in the same order.
int tastyScore = 7
String type = "non-vegetarian"
void getMacroNutrients => prints("An egg has [this.proteins] gms of protein, [this.fats] gms of fats and [this.carbs] gms of carbohydrates.")

3. class Bread which extends class Food and has the following properties:

Constructor to initialize the attributes (proteins, fats, and carbs) in the same order.
int tastyScore = 8
String type = "vegetarian"
void getMacroNutrients => prints(" A slice of bread has [this.proteins] gms of protein, [this.fats] gms of fats and [this.carbs] gms of carbohydrates.")
 

Create an ELC class Testing
The first line contains an integer, n, the number of food items.

Every food item takes input in the next 4 lines where the first line is the name of the food and the next three lines are method calls (getType, getTaste, and getMacros) 

Input :-
1
Bread
getType
getMacros
getTaste
Output :-

Bread is vegetarian
A slice of bread has 4.0 gms of protein, 1.1 gms of fats and 13.8 gms of carbohydrates.
Taste: 8


BLC CLASS
Food4
--------
package Abtract_Class;

public abstract class Food4 {
double proteins;
double fats;
double carbs;
double tastyScore;
public Food4(double proteins,double fats,double carbs){
	this.proteins=proteins;
	this.fats=fats;
	this.carbs=carbs;
}
public abstract void getMacroNutrients();
protected abstract String getType();
protected abstract int getTastyScore();
}

BLC CLASS
Egg4
--------
package Abtract_Class;

public class Egg4 extends Food4{
	int tastyScore = 7;
	String type = "non-vegetarian";
public Egg4(double proteins,double fats,double carbs) {
	super(proteins,fats,carbs);
}
public void getMacroNutrients() {
	System.out.println("An egg has " + this.proteins + " gms of protein, " + this.fats + " gms of fats and " + this.carbs + " gms of carbohydrates.");
}
public int getTastyScore() {
	return tastyScore;
}
public String getType() {
	return type;
}

}

BLC CLASS
Bread4
---------
package Abtract_Class;

public class Bread4 extends Food4{
	int tastyScore = 8;
	String type = "vegetarian";
	public Bread4(double proteins, double fats, double carbs) {
		super(proteins, fats, carbs);
		// TODO Auto-generated constructor stub
	}
public void getMacroNutrients() {
	System.out.println("An egg has " + this.proteins + " gms of protein, " + this.fats + " gms of fats and " + this.carbs + " gms of carbohydrates.");
}
public int getTastyScore() {
	return tastyScore;
}
public String getType() {
	return type;
}

}

ELC CLASS
Testing4
----------

package Abtract_Class;

import java.util.Scanner;

public class Testing4 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.print("Enter the no of items:");
		int x=sc.nextInt();
        System.out.print("Enter the no of orders:");
        int n=sc.nextInt();
        System.out.print("Enter the name of the item:");
		String str=sc.next();
        switch(str) {
        case "Bread":
        	for(int i=1;i<=n;i++) {
        		Food4 b=new Bread4(55.0,76.8,66.0);
        		System.out.println("Bread is"+b.getType());
        		b.getMacroNutrients();
        		System.out.println("Taste:"+(int)b.getTastyScore());
        	}
        	break;
        case "Egg":
        	for(int i=1;i<n;i++) {
        		Food4 e=new Egg4(55.0,76.8,66.0);
        		System.out.println("Bread is"+e.getType());
        		e.getMacroNutrients();
        		System.out.println("Taste:"+(int)e.getTastyScore());
        	}
        	break;
        }
	}

}

-----------------------------------------------------------------------

1) Find the Output :

class A 
{
void foo() 
{
System.out.println("A");
}
}

class B extends A 
{
void foo() 
{
System.out.println("B");
}
}	

class Test15
{
public static void main(String[] args)
{
A obja;
B objb = new B();
objb.foo();
obja = objb;
obja.foo();
}
}
o/p:
B
B
-------------------------------------------------------------------------
2) Find the Output :
public class Test18
{
 public static void main(String[] args)
{
    B b = new C();
    A a = b;
    if (a instanceof A) System.out.println("A");
    if (a instanceof B) System.out.println("B");
    if (a instanceof C) System.out.println("C");
    if (a instanceof D) System.out.println("D");
  }
}

class A {}
class B extends A {}
class C extends B {}
class D extends C {}

O/P:
A
B
C
-------------------------------------------------------------------------
3) Find the Output :

public class Test19 extends Singer
 {
  public static String sing() 
  {
    return "fa";
  }

  public static void main(String[] args) 
  {
    Test19 t = new Test19();
    Singer s = new Test19();
    System.out.println(t.sing() + " " + s.sing());
  }
}

class Singer {
  public static String sing() {
    return "la";
  }
}
O/P:
Fa
La
-------------------------------------------------------------------------
4) Find the Output :

class Animal
{
public void eat()
{
System.out.println("Animal eating ");
}
}


class Horse extends Animal
{
public void eat() 
{
System.out.println("Horse eating");
}

public void eat(String s) 
{
System.out.println("Horse eating "+s);
}
}
public class Test21
{
public static void main(String [] args) 
{
Animal a = new Horse();
a.eat(); 
a.eat("Grass");
}
}
o/p:
method eat in class Animal cannot be applied to given types;
a.eat("Grass");
 ^
  required: no arguments
  found: String
  reason: actual and formal argument lists differ in length
1 error
-------------------------------------------------------------------------
5) Find the Output :

class A 
{
private void printName(){
System.out.println("Value-A");
}
}
class B extends A
{
public void printName(){
System.out.println("Name-B");
}
}
public class Test23
{
public static void main (String[] args) 
{
A b = new B();
b.printName();
}
}
o/p:
Name-B
-------------------------------------------------------------------------
6) Find the Output :

class A 
{
public void printName()
{
System.out.println("Value-A");
}
}
class B extends A
{
public void printName()
{
System.out.println("Name-B");
}
}
class C extends A
{
public void printName()
{
System.out.println("Name-C");
}
}
public class Test30
{
public static void main (String[] args) 
{
B b = new B();
C c = new C();
b = c;
newPrint(b);
}
public static void newPrint(A a)
{
a.printName();
 }
 }
o/p:
incompatible types: C cannot be converted to B
b = c;
-------------------------------------------------------------------------
7) Find the Output :

class C 
{
}
class D extends C
{
}
class A
{
public C getOBJ()
{
System.out.println("class A - return C");
return new C();
}
}
class B extends A
{
public D getOBJ()
{
System.out.println("class B - return D");
return new D();
}
}
public class Test31
{
public static void main(String... args) 
{
     A a = new B();
     a.getOBJ();
}
}
o/p:
class B - return D
-------------------------------------------------------------------------
8) Find the Output :

class A1 
{
public void printName()
{
System.out.println("Value-A");
}
}
class B1 extends A1
{
protected void printName()
{
System.out.println("Name-B");
}
}
public class Test33
{
public static void main (String[] args)
{
A1 b = new B1();
newPrint(b);
}
public static void newPrint(A1 a)
{
a.printName();
}
}
O/P:
cannot reduce the visibility
-------------------------------------------------------------------------
9) Find the Output :

class A 
{
public void printName()
{
System.out.println("Name-A");
}
}
class B extends A
{
public void printName()
{
System.out.println("Name-B");
}
public void printValue() 
{
System.out.println("Value-B");
}
}
public class Test42
{
public static void main (String[] args)
{
A a = new A();
B b = (B)a;
b.printName();
}
}
o/p:
ClassCastException
-------------------------------------------------------------------------
10) Find the Output :

class Test51
{
int count;
public Test51()
{
count = count +1 ;
}
public static void main(String argv[])
{
new Test51();
new Test51();
new Test51();
System.out.println(count);
}
}
O/P:
count is non static type.........object is required
-------------------------------------------------------------------------
the accessmodifier of the super class consturctor should have higher visibility than the child constructor
11) Find the Output :

class A
{
static String str = "";
protected A()
{
System.out.println(str + "A");
}
}
class B extends A
{
private B ()
{
System.out.println(str + "B");
}
}
public class Test53 extends A
{
private Test53()
{
System.out.println(str + "Test");
}
public static void main (String[] args)
{
new Test53();
System.out.println(str);
}
}
o/p:
A
Test
-------------------------------------------------------------------------
12) Find the Output :

class A
{
public void test1()
{
System.out.println("test1 A");
}
}
class B extends A
{
public void test1()
{
super.test1();
System.out.println("test1 B");
}
}
public class Test57
{
public static void main(String[] args)
{
A b = new B();
b.test1();
}
}
o/p:
test1 A
test1 B
-------------------------------------------------------------------------
13) Find the Output :

class Dog
{
}
class Cat extends Dog
{
}
class Test60
{
	public static void main(String... args)
	{
		Dog d = new Dog();
		Cat c = new Cat();
		if(d.equals(c))
		{
			System.out.println("true");
		}
			else
		{
				System.out.println("false");
		}
	}
}

O/P:
false
-------------------------------------------------------------------------
14) Find the Output :

class Test61 
{
	public static void main(String[] args) 
	{
		Math m = new Math();
		m.min(88,86);
	}
}
o/p:
constructor is not visible
-------------------------------------------------------------------------
15) Find the Output :

public class Animal 
{
       String name;
       Animal(String name) 
       {
              this.name = name;
       }
       Animal() 
       {
              this(makeRandomName());
       }
       String makeRandomName() 
       {
              String name = "i";
              return name;
       }
       public static void main (String [] args) 
       {
              Animal a = new Animal();
              System.out.println(a.name);
              Animal b = new Animal("Zeus");
              System.out.println(b.name);
       }
}

O/P:
cannot reference this before supertype constructor has been called
              this(makeRandomName());
                   ^
1 error
-------------------------------------------------------------------------
16) Find the Output :

class Animal { }
class Horse extends Animal { }
class q31
{
      public void doStuff(Animal a) 
      {
           System.out.println("In the Animal version");
      }
      public void doStuff(Horse h) 
      {
           System.out.println("In the Horse version");
      }
      public static void main (String [] args) 
      {
            q31 q = new q31();
            Animal ob1 = new Animal();
            Animal ob2 = new Horse();
            q.doStuff(ob1);
            q.doStuff(ob2);
     }
}
o/p:
In the Animal version
In the Animal version
-------------------------------------------------------------------------
17) Find the Output :

class Animal 
{
      static void doStuff() 
      {
             System.out.print("a  ");
      }
}
class q31 extends Animal 
{
      static void doStuff() 
      {        
            System.out.print("d  ");
      }
      public static void main(String [] args) 
      {
            Animal [] a = {new Animal(), new q31(), new Animal()};
            for(int x = 0; x < a.length; x++)
                 a[x].doStuff();               
      }
}
o/p:
a
a
a
-------------------------------------------------------------------------
18) Find the Output :
class Test23 
{
	public static void main(String[] args) 
	{
		float f = 4.12f;
		if(f<4.12)
		{
          System.out.println("ABC");
		}
		else
		{
			System.out.println("XYZ");
		}
		
	}
}
o/p:
ABC
-------------------------------------------------------------------------
19) Find the Output :

class Test12
{
	public static void main(String[] args) 
	{
		System.out.println("M");
		Alpha.val=100;
		System.out.println("F");
		Alpha a = new Alpha();
	}
}
class Beta
{
	static 
	{
		System.out.println("Q");
		
	}
	Beta()
	{
		System.out.println("D");
	}
}
class Alpha extends Beta
{
	static int val;
	static 
	{
		System.out.println("W");
		val=1000;
	}
	
	Alpha()
	{
		System.out.println("C");
	}

	static 
	{
		System.out.println("R");
		val=1000;
	}
}

O/P:
M
Q
W
R
F
D
C
-------------------------------------------------------------------------
20) Find the Output :

class Grandparent {
    String name = "granparent";
    void act() {
        System.out.println(name);
    }
}

class Parent extends Grandparent 
{
    String name = "parent";
}

class Child extends Parent {
    String name = "child";
    void act() {
        System.out.println(name);
    }
}

public class Test33 {
    public static void main(String[] args) {
        Parent yo = new Child();
        yo.act();
    }
}

o/p:
child
-------------------------------------------------------------------------
21) Find the Output :

public class Test55 {     
    int a = 10;
    
    public void doStuff(int a) {
        a += 1;
        System.out.println(a++);
    }
    public static void main(String args[]) {
        Test55 t = new Test55();
        t.doStuff(3);
    }
}
o/p:
4
------------------------------------------------------------------------
22) Find the Output :

class Animal {
 String name = "Rocky ";
 String makeNoise() { return "generic noise"; }
 }
 class Tiger extends Animal {
String name = "stripes ";
 String makeNoise() { return "roarrrrrrrrrrr"; }
 }
 public class Zoo {
 public static void main(String[] args) { new Zoo().go(); }
 void go() {
 Animal m = new Tiger();
 System.out.println(m.name + m.makeNoise());
 }
}
o/p:
Rocky roarrrrrrrrrrr
-----------------------------------------------------------------------
23) Find the Output :

public class b39
{
        public static void main(String[] argv)
        {
              int a = 1;
              System.out.println(a instanceof Integer);
        }
}
o/p:
error: unexpected type
              System.out.println(a instanceof Integer);
                                 ^
  required: reference
  found:    int
1 error
-----------------------------------------------------------------------
24) Which among the following code have errors

a) abstract class A {	
     void m1();
   }
(abstract keyword)
------------------------

b) public class A {	
     abstract void m1();
   }

c) abstract public class A {	
    abstract void m1();
   }

d) abstract public class A 
   {	
     void m1() { }
   }

e) public abstract class A {
    abstract void m1();	
    A(){ }	
    void m2() { }
    }

f) public abstract class A {
     abstract int x = 100;	
     abstract void m1();
     abstract void m2();
    }

g) public abstract class A {	
    abstract void m1();
   }
   public class Test {
   public static void main(String[] args) {
    A a = new A();
    }
   }

h) public abstract class A 
   {	
    abstract void m1();
    A(){ }
    static void m2() 
    {
    System.out.println("Hello Java!"); 
    }
   }
    public class B extends A {
     void m1(){
        A.m2(); 
     }
    }

i) public abstract class A {	
    abstract void m1();
   private A(){ }
   }
   public class B extends A { }

o/p:
a
b
f
g
-----------------------------------------------------------------------
25) Find the output 

public abstract class Alpha {
  abstract void m1(Alpha a);
}
public class Beta extends Alpha {
void m1(Alpha a) {
  System.out.println("One"); 	
 }
}
public class Gamma extends Beta {
void m1(Beta b) {	
 System.out.println("Two");
 super.m1(new Beta());
 }
}
public class Test {
public static void main(String[] args) {
Gamma c = new Gamma();
 c.m1(new Beta());
  }
}
================================================================

1.Choose the correct output of the following program

interface Add
{
	int add(int b);
}
public class FunctionalInterface {
	
	public static void main(String[] args)
	{
		int a = 10;
		
		Add add = (int b) -> b;
		System.out.println(add.add(a));
	}
}

o/p;
10
--------------------------------------------------
2.Choose the correct output of the following program
@FunctionalInterface
interface Cube
{
	int cube(int b);
}
public class FunctionalInterface {
	
	public static void main(String[] args) {
		int a = 21;
		
		Cube cube = b -> b*b*b;
		System.out.println(cube.cube(a));
	}
}
o/p:
incomtatible type:fumctional interface can not be converted to annotation(class name and functionalinterface name should not be same)
------------------------------------------------------------
3.What is the output of the following program
interface Add
{
	int add(int b);
	int add(int a, int b);
}
public class FunctionalInterface {
	public static void main(String[] args) {
		int a = 21;
		Add add = b -> b+b;
		System.out.println(add.add(a));
	}
}
o/p:
incompatible types: Add is not a functional interface
		Add add = b -> b+b;
		          ^
    multiple non-overriding abstract methods found in interface Add
1 error
---------------------------------------------------

4.What is the output of the following program
@FunctionalInterface
interface Str
{
	int methodStr(String str);
}
public class FunctionalInterface {
	public static void main(String[] args) {
		Str str = (String s) -> "2";
		System.out.println(str.methodStr("2"));
	}
}

o/p:
incompatible type:bad return type in lambda expression
Str str = (String s) -> "2";
------------------------------------------------------------------
5.Choose the correct output of the following program
public class FunctionalInterface {
	public static void main(String[] args) {
		String str -> str.compareTo("goolge");
		System.out.println(str);
	}
}
o/p:
error: ';' expected
String str -> str.compareTo("goolge");
		          ^
1 error

----
public class FunctionalInterface {
	public static void main(String[] args) {
		String str -> str.compareTo("goolge");
		System.out.println(str);
	}
}
-------------------------------------------
6.What is the output of the following code
@FunctionalInterface
interface NIT
{
	String get(String nit);
}
public class FunctionalInterfaceExample
{Hai 
	public static void main(String[] args) {
		NIT nit = (str) -> str +"Welcome to"; // str concatenate to "Welcome to" 
		NIT nit1 = (str) -> str + "NARESHIT"; // str1 concatenate to "NARESHIT"
		information("Hai ", nit); // HAI + Welcome to
		information("Hai ", nit1); // HAI + NARESHIT
	}
	public static void information(String str, NIT obj) {//hai,nit
		String result = obj.get(str);
		System.out.println(result);
	}
}

o/p:
Hai Welcome to
Hai NARESHIT
-------------------------------------------------------------
7.By using FunctionalInterface annotation following code is correct or not?
@FunctionalInterface
interface NIT
{
	String myInterface(String a);
	String newInterface();
	
}
O/P:
Unexpected @FunctionalInterface annotation
@FunctionalInterface
^
  NIT is not a functional interface
    multiple non-overriding abstract methods found in interface NIT
1 error
-----------------------------------------
8.What is the output of the following code
@FunctionalInterface
interface NIT{
 int square(int x);
 default int add(int a, int b){
     return a+b;
 }
 default int sub(int a, int b){
     return a-b;
 }
 static int multiply(int a, int b){
     return a*b;
 }
 static int divide(int a, int b){
     return a/b;
 }
}
public class FunctionalInterfaceExample implements NIT{
 public static void main(String[] args){
     int a = 25;
     int b = 5;
     FunctionalInterfaceExample fun = new FunctionalInterfaceExample();
     int add = fun.add(a,b);
     int sub = fun.sub(a,b);
     int mul = NIT.multiply(a,b);
     int div = NIT.divide(a,b);
     System.out.println(add+" "+sub+" "+mul+" "+div+" "+fun.square(6));
} 
 @Override
 public int square(int x) {
     return x*x;
 }
}
O/P:
30
20
125
5
36
--------------------------------------------
9.What is the output of the following code
@FunctionalInterface
interface NIT{
 int square(int x);
 static int add(int a, int b){
     return a+b;
 }
 static int sub(int a, int b){
     return a-b;
 }
 static int multiply(int a, int b){
     return a*b;
 }
 static int divide(int a, int b){
     return a/b;
 }
}
public class FunctionalInterfaceExample{
 public static void main(String[] args){
     int a = 25;
     int b = 5;  
     int add = NIT.add(a,b);
     int sub = NIT.sub(a,b);
     int mul = NIT.multiply(a,b);
     int div = NIT.divide(a,b);
     System.out.print(add+" "+sub+" "+mul+" "+div+" ");
      
     NIT sq = (x) -> 
     {
    	 return x*x;
     };
     System.out.print(sq.square(6));
 }
}
30
20
125
5
36
------------------------------------------

10. public class FunctionalInterfaceExample{
	public static void main(String[] args) {
		Function<String, String> fun = str -> str.substring(2,5);
		System.out.println(fun.apply("Hyderabad"));
	}
}
Answer: der
----------------------------------------------------------------
11.By using FunctionalInterface annotation following code is correct or not?
@FunctionalInterface
interface NIT
{
	String myInterface(String a);
	default void nit() 
	{
		
	}
	default int newInterface(int a) 
	{
		return a;
	}
}
o/p:
correct
----------------------------------------------------------------------
12.Is there any error in following code?
@FunctionalInterface
interface NIT
{
	String myInterface(String a); //abstract method 
	int hashCode(); //Object class methods
	String toString();	
}
Answer:
Successfully Compiled, functional interface allows any Object class methods
-------------------------------------------------------

13.Is there any error in following code?
@FunctionalInterface
interface NIT
{
	String myInterface(String a); //abstract method
	@Override
	String toString(); //Object class method
	void wait();
	void notify();
	
}
O/P:
error: wait() in NIT cannot override wait() in Object
	void wait();
	     ^
  overridden method is final
NIT.java:16: error: notify() in NIT cannot override notify() in Object
	void notify();
	     ^
  overridden method is final
2 errors
------------------------------------------------------
14.What is the output of the following code
public class FunctionalInterfaceExample{
	public static void main(String[] args) {
		Predicate<Integer> grater = a -> a >15;
		
		Predicate<Integer> less = a -> a <10;
		
		boolean bool = grater.test(20);
		boolean bool1 = less.test(5);
		System.out.println(bool);
		System.out.println(bool1);		
		
	}
}
Answer: 
true
true
----------------------------------------------------
15.What is the output of the following code
public class FunctionalInterfaceExample{
	public static void main(String[] args) 
	{
		String str[]= {"Java","Python","Naresh","IT"};
		
		Predicate<String> prediacte = p -> p.endsWith("va");
		for(String s: str) 
		{
			if(prediacte.test(s))
				System.out.println(s);
		}
	}
}
O/P:
Java
--------------------------------------------------
16.What is the output of the following code
interface NIT
{
	public int myInterface(int a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a+1;
		int i = nit.myInterface(6);
		System.out.println(i);
	}
}
o/p:7
--------------------------------------------------------
17.What is the output of the following code?
@FunctionalInterface
interface NIT
{	
	int myInterface(int a);
}

@FunctionalInterface
interface NewInterface
{
	void alpha(String a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a*a*a;
		System.out.println(nit.myInterface(5));
		NewInterface result = (a) -> System.out.println("Welcome to NareshIT");
		result.alpha("");
	}
}
o/p:
125
Welcome to NareshIT
---------------------------------------------------------------
18.What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<Integer> value = (a) -> System.out.println(a*3);
		value.accept(5);
	}
}
o/p:
15
----------------------------------------------------------------------
19. What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<String> value = (a) -> System.out.println("Naresh I Technologies");
		value.accept("");
	}
}
Answer:
Naresh I Technologies
------------------------------------------------------------------------
20. What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		Consumer<String> value = (a) -> System.out.println(a.toLowerCase());
		value.accept("NareshIT");
	}
}
O/P:
nareshit
==============================================================================

Program: 1
-----------
Create an interface AdvancedArithmetic  which contains a method signature as:-
public abstract int divisorSum(int n). 

Then write a class called MyCalculator which implements the interface  AdvancedArithmetic.
divisorSum function just takes an integer as input and return the sum of all its divisors. 
For example divisors of 6 are 1,2,3 and 6, so divisorSum should return 12. 
Sample Input
6
Sample Output
12
Explanation
Divisors of 6 are 1,2,3 and 6. 1+2+3+6=12.
A class Testing is given to you with a main method. Use this class to test your solution's classes and methods.
-----------------------------------
public interface AdvancedArithmetic {
	public abstract int divisorSum(int n) ;

}
package Interface;

public class MyCalculator implements AdvancedArithmetic{

	@Override
	public int divisorSum(int n) {
		int i=0,sum=0;
		for(i=1;i<=n;i++)
		{
		   if(n%i==0)
		   {
			   sum+=i;
		   }
		}
		return sum;
	}
	//return sum;
	

}
package Interface;

public class MainDivisor {
	public static void main(String args[])
	{
		MyCalculator mc=new MyCalculator();
		System.out.println("sum of divisors is:"+mc.divisorSum(12));
		
	}

}


================================================================================
Program 02 :
-----------
Question: Mobile Phone SIM Card Interaction
_______________________________________________

You are tasked with implementing a simulation of a mobile phone interacting with different SIM cards. The goal is to create a system where mobile phones can insert, remove, and use SIM cards from different providers.

Components:
--------------

-> SIMCardInterface: An interface that defines methods for getting phone number, network provider, and activation/deactivation of a SIM card.

-> Jio, Airtel, and BSNL Classes: These classes should implement the SIMCardInterface. Each class represents a SIM card from a different network provider (Jio, Airtel, and BSNL) and should have provider-specific details.

-> MobilePhoneInterface: An interface that defines methods for inserting, removing SIM cards, making calls, and sending text messages.

-> MobilePhone Class: This class should implement the MobilePhoneInterface. It should have a slot for inserting a SIM card and methods for making calls and sending texts.

Tasks:
----------

-> Implement the SIMCardInterface and the classes Jio, Airtel, and BSNL that implement this interface. Include methods for getting phone number, network provider, and activating/deactivating the SIM card.

-> Implement the MobilePhoneInterface and the MobilePhone class that implements this interface. The MobilePhone class should allow inserting and removing SIM cards, making calls, and sending texts.

-> Demonstrate the interaction between mobile phones and different SIM cards:

->Create instances of Jio, Airtel, and BSNL SIM cards.
->Create a MobilePhone instance.
->Insert a SIM card into the mobile phone.
->Make a call and send a text message using the inserted SIM card.
->Remove the SIM card from the mobile phone.
->Discuss how the use of interfaces (SIMCardInterface and MobilePhoneInterface) promotes a loosely coupled architecture and allows flexibility in swapping different SIM cards.

[Note: You can provide the classes with appropriate constructors and methods as needed for the implementation.]

Hints:
--------------
Define the interfaces with the required methods and let the classes implement them.
Consider including print statements to indicate the activation, deactivation, insertion, and removal of SIM cards.
Focus on encapsulation, polymorphism, and the benefits of using interfaces in promoting modular and flexible code.
Feel free to adjust the details and wording of the question according to your preferences and the level of understanding you want to assess.

//SIMCard.java
public interface SimCard {
	long getNumber();

	String getNetworkProvider();

	boolean isActivated();

	void makeActivate(boolean activate);
}

//Jio.java
class Jio implements SimCard {
	long number;
	String network;
	boolean isActivated;

	public Jio(long number, String network) {
		super();
		this.number = number;
		this.network = network;
	}

	@Override
	public long getNumber() {
		// TODO Auto-generated method stub
		return number;
	}

	@Override
	public String getNetworkProvider() {
		// TODO Auto-generated method stub
		return network;
	}

	@Override
	public boolean isActivated() {
		// TODO Auto-generated method stub
		return isActivated;
	}

	@Override
	public void makeActivate(boolean activate) {
		this.isActivated = activate;

	}

}

//Airtel.java
class Airtel implements SimCard {
	long number;
	String network;
	boolean isActivated;

	public Airtel(long number, String network) {
		super();
		this.number = number;
		this.network = network;
	}

	@Override
	public long getNumber() {
		// TODO Auto-generated method stub
		return number;
	}

	@Override
	public String getNetworkProvider() {
		// TODO Auto-generated method stub
		return network;
	}

	@Override
	public boolean isActivated() {
		// TODO Auto-generated method stub
		return isActivated;
	}

	@Override
	public void makeActivate(boolean activate) {
		this.isActivated = activate;

	}

}


//Bsnl.java
class Bsnl implements SimCard {
	long number;
	String network;
	boolean isActivated;

	public Bsnl(long number, String network) {
		super();
		this.number = number;
		this.network = network;
	}

	@Override
	public long getNumber() {
		// TODO Auto-generated method stub
		return number;
	}

	@Override
	public String getNetworkProvider() {
		// TODO Auto-generated method stub
		return network;
	}

	@Override
	public boolean isActivated() {
		// TODO Auto-generated method stub
		return isActivated;
	}

	@Override
	public void makeActivate(boolean activate) {
		this.isActivated = activate;

	}

}

//MobilePhoneInterface.java
public interface MobilePhoneInterface {
	void insert(SimCard sim);

	void remove(SimCard sim);

	void call(SimCard sim);

	void sms(SimCard sim);
}


//MobilePhone.java
class MobilePhone implements MobilePhoneInterface {

	@Override
	public void insert(SimCard sim) {
		if (sim.isActivated() == false) {
			sim.makeActivate(true);
			System.out.println("Sim is inserted");
			System.out.println("Sim card : " + sim.getClass().getSimpleName());
			System.out.println("Number is : " + sim.getNumber());
			System.out.println("Network : " + sim.getNetworkProvider());
		} else {
			System.out.println("Sim is already inserted...");
		}

	}

	@Override
	public void remove(SimCard sim) {
        if(sim.isActivated()) {
        	sim.makeActivate(false);
        	System.out.println(sim.getClass().getSimpleName()+ " is removed");
        }else {
        	System.out.println("Sim never inserted");
        }
	}

	@Override
	public void call(SimCard sim) {
        if(sim.isActivated()){
        	System.out.println("Calling from "+sim.getClass().getSimpleName());
        }else {
        	System.out.println("Sim is not activated");
        }
	}

	@Override
	public void sms(SimCard sim) {
		if(sim.isActivated()){
        	System.out.println("Sms from "+sim.getClass().getSimpleName());
        }else {
        	System.out.println("Sim is not activated");
        }
	}

}


//User.java
public class User {
	public static void main(String[] args) {
        Jio j = new Jio(11111111,"4G");
        Airtel a = new Airtel(2222222, "5G");
        Bsnl b = new Bsnl(3333333,"3G");
        
        MobilePhone m = new MobilePhone();
        
        m.insert(j);
        m.call(a);
        m.sms(j);
        m.remove(j);    
	}
}

========================================================================

Program : 01
-------------
Question: Banking System with Loosely Coupled Architecture
___________________________________________________________

In this exercise, we'll develop a banking system to demonstrate the concept of loosely coupled architecture using interfaces and classes. The system will feature three banks—SBI, HDFC, and ICICI—each with their respective implementation details, while customers can interact with these banks through a unified interface.

Components:
-------------

Bank Interface: An interface that outlines the essential methods for banking operations such as depositing, withdrawing, and checking account balance.

Bank Implementations: Three classes—SBI, HDFC, and ICICI—that implement the Bank interface. Each class will define the specific logic for handling transactions and account management.

Customer Class: A Customer class with attributes like name and accountBalance. This class will interact with the banks using the methods provided by the Bank interface.

Tasks:

Define the Bank interface with methods:
-----------------------------------------

deposit(amount: double): void
withdraw(amount: double): void
checkBalance(): double
Implement the bank classes:

SBI, HDFC, and ICICI implementing the Bank interface. Each class should maintain an accountBalance attribute and provide appropriate implementations for the methods.

Create the Customer class:
------------------------------

Attributes: name (String), accountBalance (double)
Methods: deposit(Bank bank, double amount), withdraw(Bank bank, double amount), checkBalance(Bank bank)
Demonstrate the loosely coupled architecture:

Create instances of SBI, HDFC, and ICICI bank classes.
Create a Customer instance.
Allow the customer to interact with each bank:


Note: Feel free to provide constructors and any additional methods required for the classes. You can adapt the question based on your preferences and the level of understanding you want to assess.
--------------------
//Bank.java

public interface Bank {
	void depositing(double amount);

	void withdrawing(double amount);

	double accountBalance();
}

//SBI.java

class SBI implements Bank {
	private double accountBalance;

	@Override
	public void depositing(double amount) {

		accountBalance += amount;

	}

	@Override
	public void withdrawing(double amount) {

		accountBalance -= amount;

	}

	@Override
	public double accountBalance() {
		return accountBalance;
	}

}

//HDFC.java

class HDFC implements Bank {
	private double accountBalance;

	@Override
	public void depositing(double amount) {

		accountBalance += amount;

	}

	@Override
	public void withdrawing(double amount) {

		accountBalance -= amount;

	}

	@Override
	public double accountBalance() {
		return accountBalance;
	}

}

//ICICI.java

class ICICI implements Bank {
	private double accountBalance;

	@Override
	public void depositing(double amount) {

		accountBalance += amount;

	}

	@Override
	public void withdrawing(double amount) {

		accountBalance -= amount;

	}

	@Override
	public double accountBalance() {
		return accountBalance;
	}

}

// Implementation of Customer class , Test class -> I
//Customer.java
public class Customer {
	String name;
	double acccountBalance;
	private Bank b;

	public Customer(String name) {
		super();
		this.name = name;
	}

	public void deposit(Bank bank, double amount) {
		if (amount <= 0) {
			System.out.println("Invalid amount...");
		} else {
			b = bank;
			bank.depositing(amount);
			this.acccountBalance = bank.accountBalance();
			System.out.println("Deposited amount is : " + amount);
		}
	}

	public void withdraw(Bank bank, double amount) {
		if (b.getClass().getSimpleName().equals(bank.getClass().getSimpleName())) {
			if (amount <= 0) {
				System.out.println("Invalid amount...");
			} else if (this.acccountBalance < amount) {
				System.out.println("Insufficient fund...");
			} else {
				bank.withdrawing(amount);
				System.out.println("Withdrawing amount is : " + amount);
			}
		} else {
			System.out.println("Its a different bank");
		}
	}

	public void checkBalance(Bank bank) {
		if (b.getClass().getSimpleName().equals(bank.getClass().getSimpleName())) {
		System.out.println("Bank name : " + bank.getClass().getSimpleName());
		System.out.println("Customer name : " + name);
		System.out.println("Current balance is :" + bank.accountBalance());
		}else {
			System.out.println("Cant proceed its a different bank");
		}
	}

}

//Test.java
public class TestBank {
	public static void main(String[] args) {
       SBI s = new SBI();
       HDFC h = new HDFC();
       ICICI i = new ICICI();
       Customer c = new Customer("Vanilla");
       c.deposit(s,10000);
       c.withdraw(s, 5000);
       c.checkBalance(s);
      }
}
-------------------------------------------------------------------------------------------------------------------------------------------
// Implementation of Customer class , Test class -> II
package jan_06;

//Customer.java
public class Customer {
	String name;
	double acccountBalance;
	private Bank b;

	public Customer(String name) {
		super();
		this.name = name;
	}

	public void deposit(Bank bank, double amount) {
		if (amount <= 0) {
			System.out.println("Invalid amount...");
		} else {
			b = bank;
			bank.depositing(amount);
			this.acccountBalance = bank.accountBalance();
			System.out.println("Deposited amount is : " + amount);
		}
	}

	public void withdraw(Bank bank, double amount) {
		if (amount <= 0) {
			System.out.println("Invalid amount...");
		} else if (this.acccountBalance < amount) {
			System.out.println("Insufficient fund...");
		} else {
			bank.withdrawing(amount);
			System.out.println("Withdrawing amount is : " + amount);
		}
	}

	public void checkBalance(Bank bank) {
		System.out.println("Bank name : " + bank.getClass().getSimpleName());
		System.out.println("Customer name : " + name);
		System.out.println("Current balance is :" + bank.accountBalance());
	}

}
//Test.java
public class TestBank {
	public static void main(String[] args) {
       SBI s = new SBI();
       HDFC h = new HDFC();
       ICICI i = new ICICI();
       processCustomer(s);
       
	}
	private static void processCustomer(Bank b) {
		Customer c = new Customer("Vanilla");
	       c.deposit(b,10000);
	       c.withdraw(b, 5000);
	       c.checkBalance(b);
	}
}


========================================================================================================================
Program 02 :
------------
Question: Hospital System with Patient Address and Billing

You are tasked with designing a hospital system that demonstrates the concept of loosely coupled architecture using interfaces and classes. This system should allow patients to interact with different disease treatment departments, store patient addresses, and manage billing with flexibility and modularity.

Components:

HospitalInterface: An interface defining methods for admitting patients, providing treatment, and generating bills.

Disease Classes: Implement the HospitalInterface in these classes to represent different disease treatment departments (e.g., Cardiology, Orthopedics, Pediatrics). Each class should have methods specific to treating the disease.

Patient Class: This class represents a patient. It interacts with the hospital departments using methods from the HospitalInterface. Each patient also has an Address object to store their address.

Address Class: A class that stores the patient's address details.

Tasks:

Implement the HospitalInterface with methods:

void admitPatient(String patientName, Address address)
void provideTreatment(String patientName)
void generateBill(String patientName, double amount)
Implement the disease classes (e.g., Cardiology, Orthopedics, Pediatrics) that implement the HospitalInterface. Each class should have methods specific to treating the disease.
In this implementation, when the generateBill method is called, it calculates the total bill based on the treatment cost.
Cost for Cardiology treatment = 10000.0
Cost for Orthopedics treatment = 30000.0
Cost for Pediatrics treatment = 60000.0

 Then, it checks the paid amount against the total bill and prints a message based on the conditions you described:

If the paid amount is less than the total bill, it informs the patient to pay the remaining amount.
If the paid amount is more than the total bill, it informs the patient to collect the extra amount.
If the paid amount is equal to the total bill, it confirms that the bill is clear.


Create the Address class with attributes like street, city, state, and zipCode.

Modify the Patient class to include an Address object. Implement methods to admit the patient, receive treatment, and generate a bill based on specific treatment costs.

Demonstrate the loosely coupled architecture:

Create instances of disease departments (e.g., Cardiology, Orthopedics, Pediatrics).
Create a Patient instance with a specific disease and address.
Admit the patient to an appropriate department.
Provide treatment to the patient using methods from the department.
Generate a bill for the patient's treatment and consider the paid amount.
Discuss the benefits of using interfaces (HospitalInterface) to promote loose coupling and modularity:

Explain how interfaces provide a common contract for hospital departments.
Describe how patients can interact with various departments without knowing specific implementations.
Emphasize how this architecture allows easy addition of new disease departments or modifications without affecting existing code.
Note: Provide constructors and additional methods as needed for the class implementations.

Hints:

Encourage students to design methods in disease classes based on specific treatment requirements.
Highlight how the Address class adds another layer of encapsulation to the system.
Emphasize how interface-based interactions allow patients to receive treatment and generate bills without knowing department-specific details.
You can adjust the wording and level of detail in the question to match the desired educational level.


// Hospital Interface
public interface HospitalInterface {
    void admitPatient(String patientName, Address address);
    void provideTreatment(String patientName);
    void generateBill(String patientName, double amount);
}

// Disease Classes
public class Cardiology implements HospitalInterface {
    private static final double TREATMENT_COST = 10000.0;

    @Override
    public void admitPatient(String patientName, Address address) {
        // Specific Cardiology admission logic
    }

    @Override
    public void provideTreatment(String patientName) {
        // Specific Cardiology treatment logic
    }

    @Override
    public void generateBill(String patientName, double amount) {
        double totalBill = TREATMENT_COST;
        if (amount < totalBill) {
            System.out.println("Please pay the remaining amount: " + (totalBill - amount));
        } else if (amount > totalBill) {
            System.out.println("Collect the extra amount: " + (amount - totalBill));
        } else {
            System.out.println("Bill is clear.");
        }
    }
}

// Similar implementation for Orthopedics and Pediatrics classes

// Address Class
public class Address {
    private String street;
    private String city;
    private String state;
    private String zipCode;

    public Address(String street, String city, String state, String zipCode) {
        this.street = street;
        this.city = city;
        this.state = state;
        this.zipCode = zipCode;
    }

    // Getter methods
}

// Patient Class
public class Patient {
    private String patientName;
    private Address address;

    public Patient(String patientName, Address address) {
           this.patientName = patientName;
           this.address = address;
     }

    public void admitToDepartment(HospitalInterface department) {
        department.admitPatient(patientName, address);
    }

    public void receiveTreatment(HospitalInterface department) {
        department.provideTreatment(patientName);
    }

    public void generateBill(HospitalInterface department, double amount) {
        department.generateBill(patientName, amount);
    }
}

// Demonstration
public class HospitalMain {
    public static void main(String[] args) {
        HospitalInterface cardiologyDept = new Cardiology();
        HospitalInterface orthopedicsDept = new Orthopedics();
        HospitalInterface pediatricsDept = new Pediatrics();

        Address patientAddress = new Address("123 Main St", "Cityville", "State", "12345");
        Patient patient = new Patient("Jane Doe", patientAddress);

        patient.admitToDepartment(cardiologyDept);
        patient.receiveTreatment(cardiologyDept);
        patient.generateBill(cardiologyDept, 12000.0);
    }
}

=====================================================================================================

1.Choose the correct output of the following program
interface Drawable
{
   void draw();
}
public class FunctionalInterface {
	public static void main(String[] args) 
	{
	   () -> System.out.println("Drawing...");	
	}
}
o/p:
not a statement
	   () -> System.out.println("Drawing...");	
	   ^
1 error
---------------------------------------------
2.What is the output of the following snippet
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		Runnable nit = () -> System.out.println("Thread Started");
		nit.run();
	}
}
o/p:
Thread Started
--------------------------------------
3.What is the output of the following code
interface Course
{
	String courseName();
	String facultyName();
	String duration();
}
@FunctionalInterface
interface NIT extends Course
{
	String nit(String courseName);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String course) -> course;
		System.out.println(nit.nit("Java"));
	}
}
o/p:
error: Unexpected @FunctionalInterface annotation
@FunctionalInterface
^
  NIT is not a functional interface
    multiple non-overriding abstract methods found in interface NIT
FunctionalInterfaceExample.java:23: error: incompatible types: NIT is not a functional interface
		NIT nit = (String course) -> course;
		          ^
    multiple non-overriding abstract methods found in interface NIT
2 errors
-----------------------------------------------
4.What is the output of the following code
@FunctionalInterface
interface NIT 
{
	String nit(String courseName);
}
interface Course extends NIT
{
	String courseName();
	String facultyName();
	String duration();
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String course) -> course;
		System.out.println(nit.nit("Java"));
	}
}
o/p:
Java
--------------------------------------------------------
5.What is the output of the following code
public class FunctionalInterfaceExample
{
  public static void main(String[] args)
  {
    Function<String, Boolean> fun = str -> str.startsWith("A");	
		
		System.out.println(fun.apply("Ankit"));
	}
}
o/p:
true
---------------------------------------------------------
6.Which is the correct Compile time error for the following snippet
public class FunctionalInterface {
	public static void main(String[] args) {
		String str = (String s) -> s.compareTo("goolge");
		System.out.println(str.test("google"));
	}
}
o/p:
class FunctionalInterface is public, should be declared in a file named FunctionalInterface.java
public class FunctionalInterface {
       ^
FunctionalInterfaceExample.java:11: error: incompatible types: String is not a functional interface
		String str = (String s) -> s.compareTo("goolge");
		             ^
FunctionalInterfaceExample.java:12: error: cannot find symbol
		System.out.println(str.test("google"));
		                      ^
  symbol:   method test(String)
  location: variable str of type String
3 errors
--------------------------------------------------------

7.Choose the correct output of the following program
@FunctionalInterface 
interface Str
{
	String str(String str);
}

public class FunctionalInterface {
	public static void main(String[] args) {
		Str nit = s -> "Naresh"+s;
		System.out.println(nit.str("IT"));	
	}
}
o/p:
Error: Could not find or load main class com.lambda.expression.FunctionalInterface1
Caused by: java.lang.ClassNotFoundException: com.lambda.expression.FunctionalInterface1
----------------------------------------------------------
8.Choose the correct output of the following program
interface NIT
{
	public void nit();
}

public class FunctionalInterface 
{
	public static void main(String[] args) {
		String str = "IT";
		NIT n = () -> 
		{
			System.out.println("Naresh" +str);
		};
	}
}
o/p:
no output
------------------------------------------------------------
9.What is the output of the following program
public class Java8
{
	public static void main(String[] args) 
	{
		() -> System.out.println("NareshIT");
	}
}
o/p:
error: not a statement
() -> System.out.println("NareshIT");
1 error
-------------------------------------------------
10.What is the output of the following Snippet
interface NIT
{
	public void myInterface(int a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a+1;
	}
}
o/p:
 error: incompatible types: lambda body is not compatible with a void functional interface
		NIT nit = (a) -> a+1;
		                  ^
    (consider using a block lambda body, or use a statement expression instead)
1 error
--------------------------------------
11.What is the output of the following Snippet
public class FunctionalInterface {
	public static void main(String args[])
	{
		Function<Integer, Double> div = a -> a / 2.0;
		System.out.println(div.apply(15));
	}
}
o/p:
7.5
-----------------------------------------------------------
12 What is the output of the following code

class Student
{ 
    private int id;
    private String name;
    private String gender;
    private int age;
 
    public Student(int id, String name, String gender, int age) 
	{
        this.id = id;
        this.name = name;
        this.gender = gender;
        this.age = age;
    }
 
    @Override
    public String toString() 
		{
        return "[id=" + id + ", name=" + name + ", gender=" + gender + ", age=" + age + "]";
        }
}
		
public class FunctionalInterface 
{
	public static void main(String[] args) 
	{
      Supplier<Student> stdSupplier = () -> new Student(1, "Virat", "Male", 24);
		
        Student std =  stdSupplier.get();
        System.out.println(std);       
	}
}

o/p:
[id=1, name=Virat, gender=Male, age=24]
----------------------------------------------------------
13.What is the output of the following code
interface NIT
{
	public int myInterface(int a);
}

public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> a+1;
	}
}
o/p:
no output
----------------------------------

14.What is the output of the following code
@FunctionalInterface
interface NIT
{
	int cal(int value);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (int value) -> value+25;		
		System.out.println("Result: "+nit.cal(20));
	}
}
Answer: Result 45
---------------------------------------------------------
15.What is the output of the following code
@FunctionalInterface
interface NIT
{
	void nit(String name);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String name) -> "";
		System.out.println(nit.nit("NARESHIT"));
		
	}
}
o/p:
error: incompatible types: lambda body is not compatible with a void functional interface
		NIT nit = (String name) -> "";
		                           ^
    (consider using a block lambda body, or use a statement expression instead)
FunctionalInterfaceExample.java:19: error: 'void' type not allowed here
		System.out.println(nit.nit("NARESHIT"));
		                          ^
2 errors
-----------------------------------------------
16.What is the output of the following code
@FunctionalInterface
interface NIT
{
	String nit(String name);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String name) -> "Welcome to ";
		System.out.println(nit.nit("NARESHIT"));		
	}
}
o/p:
Welcome to
---------------------------------------------------------
17.What is the output of the following Snippet
@FunctionalInterface
interface NIT
{
	String str(String nit);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
	NIT nit = (String nit) -> nit +"";
	}
}
o/p:
error: variable nit is already defined in method main(String[])
	NIT nit = (String nit) -> nit +"";
	                  ^
1 error
------------------------------
18.What is the output of the following code
interface NIT
{
	String nit(String name);
}
public class FunctionalInterface
{
	public static void main(String[] args) {
		NIT nit = (String name) -> "Welcome to " + name;
		System.out.println(nit.nit("NARESHIT"));		
	}
}
o/p:
Welcome to NARESHIT
------------------------------------
19.Simple Functional Interface without using Lambda function
@FunctionalInterface
interface NIT
{
	String nit(String name);
}
public class FunctionalInterfaceExample implements NIT
{
	public static void main(String[] args) {
		FunctionalInterfaceExample nit = new FunctionalInterfaceExample();
		System.out.println(nit.nit("Welcome to "));
	}	
	@Override
	public String nit(String name) {
		return name+"NARESHIT";
	}
}
O/P:
Welcome to NARESHIT
----------------------------------------------------
20.What is the output of the following code
@FunctionalInterface
interface NIT
{
	String nit(String name);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String name) -> {
			return name;
		};
		
		NIT nit1 = (String name) -> name;
		
		System.out.println(nit.nit("Welcome to ")+nit1.nit("NARESHIT"));
	}
}
O/P:
Welcome to NARESHIT
==================================================================

Ques-1
___________
Consumer Interface:
Scenario: You are working on an e-commerce application, and you want to implement a shopping cart feature that calculates the total price of the items and applies discounts if applicable.

Implement a Consumer interface that calculates the total price of the items in the cart.
Use the Consumer interface to apply a discount of 10% to the total price if the
totalPrice is above 1000000.

Requirements : 
-----------------

Class Name : CartItem
Artributes : private String name,private double price, private int quantity;
Constructor: parameterzed constructor to initialize CarItem fields
method     : double getTotalPrice() which returns total price as per quantity.
             String toString()

Class name : ShoppingCart
Atributes  : private CartItem items ;
Constructor: parameterized constructor to initialize ShoppingCart field
method     : setter and getter , toString();

Class name : Tester 
// Implement a Consumer interface to calculate the discount from total price . Print all the details.
void accept(ShoppingCart sc);
-----------------------------

BLC CLASS
CartItem5.JAVA
--------------
package com.interfaces;

public class CartItem5 {
private String name;
private double price;
private int quantity;
public CartItem5(String name, double price, int quantity) {
	super();
	this.name = name;
	this.price = price;
	this.quantity = quantity;
}
public double getTotalPrice() {
	double TotalPrice=quantity*price;
	return TotalPrice;
}
@Override
public String toString() {
	return "CartItem5 [name=" + name + ", price=" + price + ", quantity=" + quantity + "]";
}

}
----------------------
BLC CLASS
ShoppingCart5.JAVA
-----------------
package com.interfaces;

public class ShoppingCart5 {
private CartItem5 item;

public ShoppingCart5(CartItem5 item) {
	super();
	this.item = item;
}
public CartItem5 getItem() {
	return item;
}
public void setItem(CartItem5 item) {
	this.item = item;
}
@Override
public String toString() {
	return "ShoppingCart5 [item=" + item + "]";
}

}
---------------------------
ELC CLASS
Tester5.JAVA
------------
package com.interfaces;

import java.util.function.Consumer;
public class Tester5{
	public static void main(String[] args) {
	CartItem5 c=new CartItem5("ravali",60,2);
	ShoppingCart5 s=new ShoppingCart5(c);
	Consumer<ShoppingCart5> sc=st->{
		double price=s.getItem().getTotalPrice();
		if(price>1000000)
			price=price-(price*0.1);
			System.out.println(price);
		System.out.println(s.getItem().toString());
	};
sc.accept(s);
	
}
}
================================================
Ques-2
_____________
Function Interface:
Scenario: You are developing a weather application that provides temperature conversion functionality.

Implement a Function interface that converts a temperature in Celsius to Kelvin.
Use the Function interface to convert a temperature in Fahrenheit to Celsius.

Function : Double apply (Double d);

---------------------
FunctionalInterface6.JAVA
-------------------------
package com.interfaces;

import java.util.Scanner;
import java.util.function.Function;
public class FunctionalInterface6 {
public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.print("Enter the temperature:");
	double t=sc.nextDouble();
Function<Double,Double> c=temp->temp-32*(5.0/9);
Function<Double,Double> f=temp->(9/5)temp+32;
Function<Double,Double> k=temp->temp+273.15;
System.out.println("Temperature from Fahrenheit to Celsius:"+c.apply(t));
System.out.println("Temperature Celsius to Fahrenheit:"+f.apply(t));
System.out.println("Temperature from Celsius to Kelvin:"+k.apply(t));
}
}
======================================

1.What is the output of the following code?
interface NIT
{
	public int myInterface(int a);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> a*5;
		int i = nit.myInterface(6);
		System.out.println(i);
	}
}

o/p:30
----------------------------
2.What is the output of the following code?
interface NIT
{
	public int myInterface(int a);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (String a) -> a*5;
		int i = nit.myInterface(6);
		System.out.println(i);
	}
}

o/p:error: bad operand types for binary operator '*'
		NIT nit = (String a) -> a*5;
		                         ^
  first type:  String
  second type: int
Java8.java:15: error: incompatible types: incompatible parameter types in lambda expression
		NIT nit = (String a) -> a*5;
		          ^
2 errors
-----------------------------------------------------


3.What is the output of the following code?
interface NIT
{
	void myInterface(int a);
	
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> System.out.println(a+5);
	}
}
o/p:
No output

----------------------------------------------

4.What is the output of the following code?
interface NIT
{
	void myInterface(int a);
	
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> System.out.println(a+5);
		nit.myInterface(15);
	}
}
o/p:
20
-------------------------------


5.What is the output of the following code?
interface NIT
{
	void myInterface(int a);
	void defalutFunction() 
	{
		System.out.println("Naresh I Technologies");
	}
	
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> System.out.println(a/5);
		nit.myInterface(15);
	}
}
o/p:
error: interface abstract methods cannot have body
	{
	^
Java8.java:20: error: incompatible types: NIT is not a functional interface
		NIT nit = (int a) -> System.out.println(a/5);
		          ^
    multiple non-overriding abstract methods found in interface NIT
2 errors
------------------------------------------------

6.What is the output of the following code?
interface NIT
{
	void myInterface(int a);
	default void defalutFunction() 
	{
		System.out.println("Naresh I Technologies");
	}
	
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> System.out.println(a/5);
		nit.myInterface(15);
	}
}
o/p:
3
---------------------------------------------------

7.What is the output of the following code?
public class Java8 {
	public static void main(String[] args) {
		String a = (a) -> {return "NareshITechnologies";};
	}
} 
o/p:
error: incompatible types: String is not a functional interface
		String a = (a) -> {return "NareshITechnologies";};
		           ^
Java8.java:11: error: variable a is already defined in method main(String[])
		String a = (a) -> {return "NareshITechnologies";};
		            ^
2 errors
-----------------------------------------------


8.What is the output of the following code?
interface NIT
{
	String myInterface();
}
public class Java8
{
  public static void main(String[] args) {
		NIT nit = () -> {return "NareshITechnologies";};		
	}
}
o/p:
No Output
-----------------------------------------

9. What is the output of the following code?
interface NIT
{
	String myInterface();
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = () -> {return "NareshITechnologies";};
		System.out.println(nit.myInterface());
	}
}
o/p:
NareshITechnologies
------------------------------------

10.What is the output of the following code?
interface NIT
{
	void myInterface(int a, int b);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a, int b) -> System.out.println(a+b);
		nit.myInterface(5, 10);
	}
}
o/p:
15
--------------------------------------------

11.	What is the output of the following code?
interface NIT
{
	int myInterface(int a, int b);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a, int b) -> System.out.println(a+b);
		nit.myInterface(5, 10);
	}
}
o/p:
error: incompatible types: bad return type in lambda expression
		NIT nit = (int a, int b) -> System.out.println(a+b);
		                                              ^
    void cannot be converted to int
1 error
-----------------------------------------------

12.	Is this code successfully compiled or not?
interface NIT
{
	int myInterface(int a, int b);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a, int b) ->
		{
			return a+b;
		};
	}
}
o/p:
No Output
-----------------------------------------------

13.	Is this code successfully compiled or not?
interface NIT
{
	int myInterface(int a, int b);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a, b) ->
		{
			int div = a/b;
			int addition = a+b;
			return addition;
		};
	}
}
o/p:
No Output
-------------------------------------------------

14.What is the output of the following code?
interface NIT
{
	int myInterface(int a,int b);
}
public class Java8 {
	int calculate(int i, int j, NIT nit)
	{
		return nit.myInterface(i,j);
	}
	public static void main(String[] args) {
		NIT addition = (a,b) -> a+b;
		NIT multiplication = (a,b) -> a*b;
		NIT division = (a,b) -> a/b;
		Java8 java = new Java8();
		int result = java.calculate(15, 5,multiplication);
		System.out.println(result);
	}
}
o/p:
75
-----------------------------------------------------
15.What is the output of the following code?
interface NIT
{
	int myInterface(int a, int b);
}
public class Java8 {
	int calculate(int i, int j, NIT nit)
	{
		return nit.myInterface(i,j);
	}
	public static void main(String[] args) {
		int result = 0;
		NIT addition = (a,b) -> a+b;
		NIT multiplication = (a,b) -> a*b;
		NIT division= (a,b) -> a/b;
		Java8 java = new Java8();
		result = java.calculate(15, 5, multiplication);
		System.out.println(result);
		result = java.calculate(result, result, addition);
		System.out.println(result);
		result = java.calculate(result, result, division);
		System.out.println(result);
	}
}
o/p:
75
150
1
---------------------------------------
16.What is the output of the following code?
public class Java8 {
	interface NIT 
	{
		int myInterface(int a, int b); 
	}
	
	public static void main(String[] args) {
		NIT nit = (int a, int b) -> a/b;
		int a = nit.myInterface(15, 110);
		System.out.println(a);
	}
}
o/p:
0
------------------------------------------

17.What is the output of the following code?
interface NIT
{
	String myInterface(String a);
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (a) -> {return a;};
		System.out.println(nit.myInterface("NIT"));
	}
}
o/p:
NIT
-----------------------------------------------

18.What is the output of the following code?
interface Calculate
{
	int myinterface(int a, int b);
}

interface NIT
{
	String myInterface(String a);
}
public class Java8 {
	public static void main(String[] args) {
		Calculate cal = (a) -> a+5;
		cal.myinterface(1, 5);
		NIT nit = (a) -> {return a;};
		System.out.println(nit.myInterface("NIT"));
	}
} 
o/p:
 error: incompatible types: incompatible parameter types in lambda expression
		Calculate cal = (a) -> a+5;
		                ^
1 error
--------------------------------------------

19.What is the output of the following code?
interface NIT
{
	String myInterface(String a);
}
public class Java8 {
	
	private void operation(int a, int b, Calculate cal) 
	{
		System.out.println(cal.myinterface(a, b));
	}
	
	public static void main(String[] args) {
		Java8 java = new Java8();
		Calculate cal = (a,b) -> a+b;
		java.operation(1, 5, cal);
		cal = (a,b) -> a*b;
		java.operation(17, 0, cal);
		NIT nit = (a) -> {return a;};
		System.out.println(nit.myInterface("NIT"));
	}
}
o/p:
error: cannot find symbol
	private void operation(int a, int b, Calculate cal) 
	                                     ^
  symbol:   class Calculate
  location: class Java8
Java8.java:22: error: cannot find symbol
		Calculate cal = (a,b) -> a+b;
		^
  symbol:   class Calculate
  location: class Java8
Java8.java:24: error: lambda expression not expected here
		cal = (a,b) -> a*b;
		      ^
3 errors
-----------------------------------


20.What is the output of the following code?
interface NIT
{
	String myInterface(String a);
}
public class Java8 {
	
	public static void main(String[] args) {
		
		//without parameter
		NIT nit = information -> System.out.println("Welcome to " + information);
		nit.myInterface("NIT");
	}
}
o/p:
error: incompatible types: bad return type in lambda expression
		NIT nit = information -> System.out.println("Welcome to " + information);
		                                           ^
    void cannot be converted to String
1 error
-----------------------------------------

21.What is the output of the following code?
interface NIT
{
	void myInterface(String a);
}
public class Java8 {
	
	public static void main(String[] args) {
		
		//without parameter
		NIT nit = information -> System.out.println("Welcome to " + information);
		nit.myInterface("NIT");
	}
}
o/p:
Welcome to NIT
==========================================================
Ques - 1
---------------
Given:
1. interface DoStuff2 {
2. float getRange(int low, int high); }
3.
4. interface DoMore {
5. float getAvg(int a, int b, int c); }
6.
7. abstract class DoAbstract implements DoStuff2, DoMore { }
8.
9. class DoStuff implements DoStuff2 {
10. public float getRange(int x, int y) { return 3.14f; } }
11.
12. interface DoAll extends DoMore {
13. float getAvg(int a, int b, int c, int d); }
What is the result?
A. The file will compile without error.
B. Compilation fails. Only line 7 contains an error.
C. Compilation fails. Only line 12 contains an error.
D. Compilation fails. Only line 13 contains an error.
E. Compilation fails. Only lines 7 and 12 contain errors.
F. Compilation fails. Only lines 7 and 13 contain errors.
G. Compilation fails. Lines 7, 12, and 13 contain errors.
Answer: A

Ques - 2
--------------
Given:
 11. interface DeclareStuff {
12. public static final int EASY = 3;
13. void doStuff(int t); }
14. public class TestDeclare implements DeclareStuff {
15. public static void main(String [] args) {
16. int x = 5;
17. new TestDeclare().doStuff(++x);
18. }
19. void doStuff(int s) {
20. s += EASY + ++s;
21. System.out.println("s " + s);
22. }
23. } What is the result?
A. s 14
B. s 16
C. s 10
D. Compilation fails.
E. An exception is thrown at runtime.
Answer: D

Ques - 3
-----------------
Given:
10. abstract class A {
11. abstract void a1();
12. void a2() { }
13. }
14. class B extends A {
15. void a1() { }
16. void a2() { }
17. }
18. class C extends B { void c1() { } } 
    and: A x = new B(); C y = new C(); A z = new C();
What are the valid examples of polymorphic method calls? (choose all posible answer)
A. x.a2();
B. z.a2();
C. z.c1();
D. z.a1();
E. y.c1();
F. x.a1();
Answer: A,B,D,F

Ques - 4
----------------
Given:
11. public interface A111 {
12. String s = "yo";
13. public void method1();
14. }
17. interface B { }
20. interface C extends A111, B {
21. public void method1();
22. public void method1(int x);
23. } What is the result?
A. Compilation succeeds.
B. Compilation fails due to multiple errors.
C. Compilation fails due to an error only on line 20.
D. Compilation fails due to an error only on line 21.
E. Compilation fails due to an error only on line 22.
F. Compilation fails due to an error only on line 12.
Answer: A

Ques - 5
--------------
Given:
3. interface Fish { }
4. class Perch implements Fish { }
5. class Walleye extends Perch { }
6. class Bluegill { }
7. public class Fisherman {
8. public static void main(String[] args) {
9. Fish f = new Walleye();
10. Walleye w = new Walleye();
11. Bluegill b = new Bluegill();
12. if(f instanceof Perch) System.out.print("f-p ");
13. if(w instanceof Fish) System.out.print("w-f ");
14. if(b instanceof Fish) System.out.print("b-f ");
15. }
16. }
What is the result?
A. w-f
B. f-p w-f
C. w-f b-f
D. f-p w-f b-f
E. Compilation fails.
F. An exception is thrown at runtime.

Ans : B

Ques - 6
-------------
Which of the following is a valid lambda expression in Java 8?

(a) () -> { System.out.println("Hello"); }

(b) (int x) -> { x++; }

(c) (String s, int x) -> { System.out.println(s + x); }

(d) All of the above

Ans : A

Ques - 7
---------------
Which is the mandatory condition to define a functional interface in Java 8?

(a) The interface should have @functionalInterface annotation on top of it

(b) The interface should have only one method

(c) The interface should have only one abstract method

(d) The interface should at least have one method

Ans : C

Ques - 8
-----------
What is the output of the following code
public class FunctionalInterfaceExample{
	public static void main(String[] args) {
		Predicate<Integer> grater = a -> a >15;
		
		Predicate<Integer> less = a -> a <10;
		
		boolean bool = grater.test(20);
		boolean bool1 = less.test(5);
		System.out.println(bool);
		System.out.println(bool1);		
		
	}
}

A. no output
B. True
   True
C. true
   false
D. true
E. true 
   true

Answer: E


Ques - 9
-----------
Is there any error in following code?
@FunctionalInterface
interface NIT
{
	String myInterface(String a); 
	int hashCode(); 
	String toString();	
}

A. The Code will compile
B. The code will give Compilation error\

Ans:  Code will compile

Ques - 10
-----------
What is the output of the following code
@FunctionalInterface
interface NIT 
{
	String nit(String courseName);
}
interface Course extends NIT
{
	String courseName();
	String facultyName();
	String duration();
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String course) -> course;
		System.out.println(nit.nit("Java"));
	}
}

A. course
B. JAVA
C. "Java"
D. Java
E. Compile time error

Ans :  Java

Ques - 11
-----------
interface NIT
{
	void myInterface(int a);
	default void defalutFunction() 
	{
		System.out.println("Naresh I Technologies");
	}
	
}
public class Java8 {
	public static void main(String[] args) {
		NIT nit = (int a) -> System.out.println(a/5);
		nit.myInterface(15);
	}
}

A. Naresh I Technologies 3
B. 3 Naresh I Technologies
C. a/5
D. 3
E. Compile time error

Ans : D

Ques - 12
-----------
What is the output of the following code
@FunctionalInterface
interface NIT
{
	int cal(int value);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (int value) -> value+75;		
		System.out.println("Result: "+nit.cal(25));
	}
}

A. 100
B. Result 100
C. value75
D. 2575
E. No output

Answer: Result 100(B)


Ques - 13
-----------
What is the output of the following code
@FunctionalInterface
interface NIT
{
	String nit(String name);
}
public class FunctionalInterfaceExample
{
	public static void main(String[] args) {
		NIT nit = (String name) -> "Welcome to ";
		System.out.println(nit.nit("NARESHIT"));		
	}
}
A. Welcome to NARESHIT
B. NARESHIT Welcome to
C. No output
D. Compile time error
E. Welcome to

Ans:  E

Ques - 14
-----------
interface NIT {
	String meth();
}

public class TestMcq {
	public static void main(String[] args) {
		NIT nit = () -> "NareshITechnologies";
		nit.meth();
	}
}
A. Compile time error
B. NareshITechnologies
C. No Output
D. nareshItechnologies

Ans : C

Ques - 15
----------
interface Movie {
	String meth();
}

public class TestMcq {
	public static void main(String[] args) {
		Movie m = () -> return "Salar";
		System.out.println(m.meth());
	}
}

A. No output
B. Salar
C. salar
D. Movie
E. Compile time error

Ans : E

Ques - 16
-----------
interface NIT
{
	int m1(int a, int b);
}
public class TestMcq {
	public static void main(String[] args) {
		NIT nit = (int a, int b) -> System.out.println(a+b);
		nit.m1(5, 10);
	}
}

A. 50
B. 15
C. Compile time error
D. No Output

Ans : CE(C)

Ques - 17
-----------
interface I
{
	int myInterface(int a, int b);
}
public class TestMcq {
	public static void main(String[] args) {
		I i = (a, b) ->
		{
			int div = a/b;
			int addition = a+b;
			return addition;
		};
                i.myInterface(12, 3);
	}
}

A. 4
B. 15
C. 19
D. No output
E. Compile time error

Ans : No Output(D)

Ques - 18
-----------
interface I1 {
	void m1(int a);	
}
interface I2 {
	void m1(long b);
}
class A1 implements I1,I2 {
	@Override
	public void m1(int a) {
		System.out.println(a);
		
	}
	
}
The above code will compile fine.

A. true
B. false

Ans : B

Ques - 19
-----------
interface I1 {
	Object m1();	
}
interface I2 {
	String m1( );
}
class A1 implements I1,I2 {
	@Override
	public String m1() {
		System.out.println("m1");
		return "Done";
	}
	
}
public class TestMcq {
	public static void main(String[] args) {
         A1 a = new A1();
         a.m1();
	}
}

A. m1
B. m1 Done
C. Done m1
D. Compile time error

Ans : A

Ques - 20
-----------
interface I1 {
	Object m1();	
}
interface I2 {
	String m1( );
}
class A1 implements I1,I2 {
	@Override
	public Object m1() {
		System.out.println("m1");
		return new Object();
	}
	
}
public class TestMcq {
	public static void main(String[] args) {
         A1 a = new A1();
         a.m1();
	}
}

A. m1
B. m1 A1@123a3e
C. Compile time error
D. Runtime Error

Ans : C

Ques - 21
-----------
class Sample {
	public void meth() {
		System.out.println("Sample meth");
	}
}
interface I{
	public void meth();
}
class Example extends Sample implements I {
	public void m2() {
         System.out.println("m2");
        }
}
public class TestMcq {
	public static void main(String[] args) {
         Example e = new Example();
         e.meth();
         e.m2();
	}
}

A. Sample meth
B. Compile time error
C. Runtime Error
D. Sample meth 
   m2

Ans : A

Ques - 22
-----------
Which statements about the keywords extends and implements are true?
Select the two correct answers.
(a) The keyword extends is used to specify that an interface inherits from another interface.
(b) The keyword extends is used to specify that a class implements an interface.
(c) The keyword implements is used to specify that an interface inherits from another interface.
(d) The keyword implements is used to specify that a class inherits from an interface.
(e) The keyword implements is used to specify that a class inherits from another class

A. a, e
B. b, d
C. d, a
D. e, a
E. a, c

Ans : C

Ques - 23
-----------
Which of these field declarations are legal within the body of an interface?
Select the all correct answers.
(a) public static int answer = 42;
(b) int answer;
(c) final static int answer = 42;
(d) public int answer = 42;
(e) private final static int answer = 42;

A. a, b, c
B. a, c
C. a, c, d
D. a, d, e
E. a, b, d

Ans: C

Ques - 24
-----------
Which declaration can be inserted at (1) without causing a compilation error?
interface MyConstants {
int r = 42;
int s = 69;
// (1) INSERT CODE HERE
}
Select the two correct answers.
(a) final double circumference = 2 * Math.PI * r;
(b) int total = total + r + s;
(c) int AREA = r * s;
(d) public static MAIN = 15;
(e) protected int CODE = 31337;

A. a, d
B. a, b
C. b, e
D. c, a
E. b, c

Ans: D

Ques - 25
-----------
Given the following class definition:
1. public class Television {
2. private int channel = setChannel(7);
3.
4. public Television(int channel) {
5. this.channel = channel;
6. System.out.print(channel + “ “);
7. }
8.
9. public int setChannel(int channel) {
10. this.channel = channel;
11. System.out.print(channel + “ “);
12. return channel;
13. }
14.} 
what is the output of the following statement?
new Television(12); 
A. 12
B. 12 7 
C. 7 12 
D. 7 
E. The code does not compile.

Ans : C

Ques - 26
-----------
Given the following interface and class defined in a file named Traceable.java, what is the result of compiling this code? 
1. public interface Traceable {
2. public static int MAX_TRACE;
3. public void trace();
4. }
5.
6. class Picture implements Traceable {
7. public void trace() {
8. System.out.println(“Tracing a picture”);
9. }
10. } 

A. Compiler error on line 2 
B. Compiler error on line 3 
C. Compiler error on line 6 
D. Compiler error on line 7

Ans : A

Ques - 27
-----------
Given the following interface definitions: 
1. //Readable.java
2. public interface Readable {
3. public abstract void read();
4. }
 
1. //SpellCheck.java
2. public interface SpellCheck extends Readable {
3. public void checkSpelling();
4. } 
which of the following statements are true? (Select all that apply.) 
A. The SpellCheck interface does not compile. 
B. A class that implements Readable must override the read method. 
C. A class that implements SpellCheck inherits both the checkSpelling and read
methods. 
D. A class that implements SpellCheck only inherits the checkSpelling method. 
E. An interface cannot extend another interface. 

Ans : C

Ques - 28
-----------
What will be the output?
interface A{
 public void method1();
}

class One implements A{
  public void method1(){
   System.out.println("Class One method1");
  }
}

class Two extends One{
  public void method1(){
   System.out.println("Class Two method1");
  }
}

public class Test extends Two{
  public static void main(String[] args){
    A a = new Two();
    a.method1();
  }
}

A. Compilation Error
B. Class One method1
C. Class Two method1
D. Throws a NoSuchMethodException at runtime.
E. None of these

Answer - B

Ques - 29
-----------
import java.util.function.*;
class Example {
	int x;
	int y;

	public Example(int x, int y) {
		this.x = x;
		this.y = y;
	}
}

public class TestMcq {
	public static void main(String[] args) {
		Predicate<Example> p1 = (e)->e.x<e.y;
		System.out.println(p1.test(new Example(1, 2)));
		Predicate<Example> p2 = (e)->e.x>e.y;
		p2.test(new Example(1,2));
	}
}

A. true false
B. true
C. true true
D. false
E. No Output

Ans : (B)true

Ques - 30
-----------
1.@FunctionalInterface
2.interface I {
3.	abstract void m1();
4.}
5.@FunctionalInterface
6.interface J extends I {
7.
8.}
9.interface K extends J {
10.	void m1();
11.}
12.
13.public class TestMcq {
14.	public static void main(String[] args) {
15.		J j = () -> System.out.println("Hello");
16.		j.m1();
17.		K k = () -> System.out.println("Hii");
18.		k.m1();
19.	}
20.}

A. compilation fails due to line 5
B. compilation fails due to line 9
C. compilation fails due to line 15
D. compilation fails due to line 17
E. It will print Hello followed by Hii

Ans : Hello Hi
===================================================================
Q 1. what is the output of this program?

      class Test1 {
           public static void main (String[] args) {
              int x=20;
              System.out.println(x);
         }
         static {
              int x = 10;
              System.out.println(x+" ");
        }
      }
------------------------------------------------------

Q 2. What is the output of this below program ?
 class Test2 {
	static {
		System.out.println(“Test2 class Static Block”);
}
public static  void main(String[] args) {
	System.out.println(“Test2 class main method”);
} 
} 
------------------------------------------------------

Q 3. What is the output of this below program ?
class Test3 {
	public static  void  main(String[] args) {
	  	int a;
	System.out.println(“A : “+a);
} 
}
------------------------------------------------------

Q 4. Can we declare local variable as static if not what is the error?
	class Test4 {
		public static void main(String[] args) {
			static  int x =10;
			System.out.println(x);
		}
	}
 ------------------------------------------------------

 Q 5. Define a class having one static variable say  static int x=10 and invoke x variable 
	        in m1() and main(-)  what is the output ? 
	class Test5 {
		static int x = 10;
		void m1() {
			System.out.println("m1 X : "+x);
		}
		public static void main(String[] args) {
			System.out.println("main X : "+x);			
		}
	}
 ------------------------------------------------------


Q 6. Is it possible to access non-static variable in static method directly if not what is the   	        	error ?.

	class Test6 {
		int a = 10;
		public static void main(String[] args) {
			System.out.println("A  value :  "+a);
		}
	}
------------------------------------------------------

Q 7 . What are the different ways are there to call static variables ?
	class Test7 {
		//static variable a
		static int a = 20;
		public static void main(String[] args) {
			//write code here to access a variable with diff ways
		}
	}
------------------------------------------------------

Q 8. What are the different ways to call/invoke static methods from main method 
	class Test8 {
		static void m1() {
			System.out.println("Test8 : m1() called");
		}

		public static void main(String[] args) {
			//write code here
		}
	}
------------------------------------------------------

Q 9. What is the output of the below program ?
	class Test9 {
		static void m1() {
			System.out.println("Test9 : m1()");
		}
		static void m2() {
			System.out.println("Test9 : m2()");
		}

		public static void main(String[] args) {
			m1();
			m2();
		}
	}
------------------------------------------------------

Q 10. What is the output of the below program ?
	class Test10 {
		static{
			System.out.println("SB1");
		}
		static void m1() {
			System.out.println("m1()");
		}
		public static void main(String []args) {
			Test10.m1();
		}
	}
------------------------------------------------------


Q 11. Example on execution order of static members in same class?
	class Test11 {
		static int x=10;
		static int y=20;
		static {
			System.out.println("---Test11 SB1 called---");
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}
		static void m1(){
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}

		public static void main(String[] args) {
			m1();
		}
		static {
			System.out.println("---Test11 SB2 called---");
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}
	} 
------------------------------------------------------

Q 12 . Can we call static method inside static block if yes ,what is the output?
	class Test12 {
		static {	
			System.out.println("Test12 : SB1 called");
			m1();
		}
		static void m1() {
			System.out.println("Test12 : m1() called");
		}
		public static void main(String[] args) {
			//no operation
		}
	}
------------------------------------------------------

Q 13 . Is main method mandatory to execute java program if yes, what is the error ?
	class Test13 {
		static {
			System.out.println("Test13 : SB1 called");
		}
		static void m1() {
			System.out.println("Test13 : m1() called");
		}
	}
------------------------------------------------------

Q 14 . What is the  output below program ? 
	class Test14 {
		static int x =100;
		static {
			System.out.println("x :"+x);
			System.exit(0);
		}
	}
------------------------------------------------------

Q 15 . What is the output of the below program ?
	class Test15Super {
		int x =10;
		static void m1() {
			System.out.println("Test15Super : m1()");
		}
		static {
			System.out.println("Test15Super : SB1 called");
		}
	}
	class Test15Sub extends Test15Super {
		static int x =20;
		static {
			System.out.println("Test15Sub : SB1 called");
		}
		static void m2(){
			m1();
			System.out.println("Test15Sub : m2()");
		}
		public static void main(String[] args) {
			m2();
		}
	}
-----------------------------------------------------------------------
Q 16)
public class JVMArc {
	public static void main(String[] args) {
		System.out.println(JVMArc.class.getClassLoader());
		System.out.println(JVMArc.class.getClass());
	}
}

-----------------------------------------------------------------------
Q 17)
public class JVMArc {
	public static void main(String[] args) {
		System.out.println(JVMArc.class.getClassLoader());
		System.out.println(JVMArc.class.getClassLoader().getParent());
		System.out.println(JVMArc.class.getClassLoader().getParent().getParent());
		
	}
}

=================================================================
Ques-1
----------
public class Example {
	int a=10;
	static {
		System.out.print("SB ");
	}
	{
		System.out.print(" NSB");
	}
	Example(){
		System.out.print(" Const ");
		System.out.print(new Example().a);
	}
	public static void main(String[] args) {
		new Example();
	}
		
}

A. SB NSB Const 10
B. StackOverflowError
C. NSB Const NSB Const......StackOverflowError
D. Compiletime Error


Ques-2
----------
class A {
	static {
		System.out.print("2");
		new Main(3).main(new String[]{});
	}
}
public class Main {
	Main(int a){
		System.out.print(a);
	}
 public static void main(String[] args) {
	new A();
 }
 {
	 System.out.print(" 1 ");
 }
}

A. Compile time error
B. 2 1 3 1
C. 2 1 3
D. 2 1 3 2 1 3...StackOverflowError
E. 2 1 3 2



Ques-3
----------
package Batch_22_MCQ;

public class Example {
	static Example e= new Example();
 	int a=m1();
 	static {
		Example.e.a=Example.e.a*2;
	}
	{
		this.a=this.a*2;
	}
	Example(){
		System.out.println(this.a);
	}
	int m1() {
		return 8;
	}
	public static void main(String[] args) {
		Example e=new  Example();
		System.out.println(Example.e.a);
	}
		
}

A. 16
   16
   32
B. 16
   32
C. 32
   32
   32
D. Compile time error
E. 16
   16 
   16



Ques-4
----------
package Batch_22_MCQ;
class Sample {
	static {
		System.out.print("1 ");
	}
	Sample() {
		super();
		System.out.print("3 ");
		{
			System.out.print("2 ");
		}
		
	}
}
public class Example extends Sample{
 	static {
		System.out.print("4 ");
	}
	
	Example(){
		super();
		System.out.print("6 ");
		{
			System.out.print("5 ");
		}
		
	}
	public static void main(String[] args) {
		Example e=new  Example();
		
	}
		
}

A. 1 2 3 4 5 6
B. 1 4 3 2 6 5 
C. 1 3 2 4 6 5
D. 1 4 3 2 5 6
E. 1 4 2 3 5 6



Ques-5
----------
public class Example{
 	int a = 100;
 	Example(){}
 	Example(Example e){
 		e.a = 200;
 		System.out.println(this.a);
 	}
   void exchange(Example e) {
	   e.a=300;
	   System.out.println(e.a);
	   e=new Example(e);
	   System.out.println(e.a);
   }
 	
	public static void main(String[] args) {
		Example e=new  Example();
		e=new Example(e);
		System.out.println(e.a);
		e.exchange(e);
		
	}
		
}

A. 100
   100
   300
   100
   100

B. 200
   200
   300
   200
   200

C. 200
   100
   300
   100
   200

D. 100
   200
   300
   200
   100


Ques-6
----------
public class Example{
	int a;
	Example(){
		this(m1(m2()));
		this.a+=100;
	}
	Example(int a){
		this.a+=a;
	}
	static int m1(int a) {
		return 200;
	}
	 static int m2() {
		return 100;
	}
	public static void main(String[] args) {
		System.out.println(new Example().a);
	}
	{
		this.a=100;
	}
		
}

A. 300
B. 400
C. 200
D. 500



Ques-7
----------
class Right {
	int a;
	{
		a=010;
	}
}
public class Wrong {
  static Right r;
  static {
	  r=new Right();
	  System.out.println(r.a);
  }
  Wrong(){
     this.r.a=r.a+10;  
     System.out.println(this.r.a);
  }
  public static void main(String[] args) {
	Wrong w = new Wrong();
	System.out.println(w.r.a);
	System.out.println(Wrong.r.a);
}
}

A. 18 18 18 18
B. 8  18  8  8
C. 8  18 18 18
D. 18  8 18  8


Ques-8
----------
class Foo {
public int a = 3; 
public void addFive() { 
a += 5; System.out.print("f "); 
} 
} 
class Bar extends Foo {
public int a = 8; 
public void addFive() { 
this.a += 5; System.out.print("b " ); 
} 
} 
Invoked with:
Foo f = new Bar(); 
f.addFive(); 
System.out.println(f.a);
What is the result?
A. b 3 
B. b 8 
C. b 13 
D. f 3 
E. f 8 


Ques-9
----------
 class ClassA { 2. public int numberOfInstances; 
 protected ClassA(int numberOfInstances) { 
this.numberOfInstances = numberOfInstances; 
} 
 } 
 public class ExtendedA extends ClassA { 
 private ExtendedA(int numberOfInstances) { 
super(numberOfInstances); 
 } 
 public static void main(String[] args) { 
ExtendedA ext = new ExtendedA(420); 
 System.out.print(ext.numberOfInstances); 
 } 
} Which statement is true?
A. 420 is the output. 
B. An exception is thrown at runtime. 
C. All constructors must be declared public. 
D. Constructors CANNOT use the private modifier. 
E. Constructors CANNOT use the protected modifier.



Ques-10
----------
1. public class Batman { 
2. int squares = 81; 
3. public static void main(String[] args) {
4. new Batman().go();
5. } 
6. void go() { 
7. incr(++squares); 
8. System.out.println(squares); 
9. } 
10. void incr(int squares) { squares += 10; } 
11.} What is the result?

A. 81 
B. 82 
C. 91 
D. 92 
E. Compilation fails. 
F. An exception is thrown at runtime.



Ques-11
----------
 class Foo {
 static void alpha() { /* more code here */ }
 void beta() { /* more code here */ }
 } 

Which the statement is true? (Choose one.)

A. Foo.beta() is a valid invocation of beta().
B. this.alpha() is a valid invocation of alpha() from method beta().
C. this.beta() can be called from  method alpha().
D. Method alpha() can directly call method beta().


Ques-12
----------
Question: 01 Given:
1. public class GC {
2. private Object o;
3. private void doSomethingElse(Object obj) { o = obj; }
4. public void doSomething() {
5. Object o = new Object();
6. doSomethingElse(o);
7. o = new Object();
8. doSomethingElse(null);
9. o = null;
10. }
11. }
When the doSomething method is called, after which line does the Object created in line 5 become
available for garbage collection?
A. Line 5
B. Line 6
C. Line 7
D. Line 8
E. Line 9



Ques-13
----------
Given:
class CardBoard {
Short story = 5;
CardBoard go(CardBoard cb) {
cb = null;
return cb;
}
public static void main(String[] args) {
CardBoard c1 = new CardBoard();
CardBoard c2 = new CardBoard();
CardBoard c3 = c1.go(c2);
c1 = null;
// do Stuff
} }
When // doStuff is reached, how many objects are eligible for GC?
A. 0
B. 1
C. 2
D. Compilation fails.
E. It is not possible to know.


Ques-14
----------
public class MyFirst {  
      public static void main(String[] args) {  
         MyFirst obj = new MyFirst(n);  
 }  
 static int a = 10;  
 static int n;  
 int b = 5;  
 int c;  
 public MyFirst(int m) {  
       System.out.println(a + ", " + b + ", " + c + ", " + n + ", " + m);  
   }  
  
  {  
     b = 30;  
     n = 20;  
  }   
  static {  
          a = 60;  
     }   
 }  

10, 5, 0, 20, 0
10, 30, 20
60, 5, 0, 20
60, 30, 0, 20, 0



Ques-15
----------
What will be the output of the following Java program?

    class access
    {
        public int x;
 	static int y;
        void cal(int a, int b)
        {
            x +=  a ;
            y +=  b;
        }        
    }    
    class static_specifier 
    {
        public static void main(String args[])
        {
            access obj1 = new access();
            access obj2 = new access();   
            obj1.x = 0;
            obj1.y = 0;
            obj1.cal(1, 2);
            obj2.x = 0;
            obj2.cal(2, 3);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 1 2
b) 2 3
c) 3 2
d) 1 5




Ques-16
----------
class access
    {
       static int x;
       void increment()
       {
           x++;
       }   
     }   
    class static_use 
    {
        public static void main(String args[])
        {
            access obj1 = new access();
            access obj2 = new access();
            obj1.x = 0;   
            obj1.increment();
            obj2.increment();
            System.out.println(obj1.x + " " + obj2.x);
         }
   }
a) 1 2
b) 1 1
c) 2 2
d) Compilation Error


Ques-17
----------
 What will be the output of the following Java program?

    class static_out 
    {
        static int x;
 	static int y;
        void add(int a , int b)
        {
            x = a + b;
            y = x + b;
        }
    }    
    class static_use 
    {
        public static void main(String args[])
        {
            static_out obj1 = new static_out();
            static_out obj2 = new static_out();   
            int a = 2;
            obj1.add(a, a + 1);
            obj2.add(5, a);
            System.out.println(obj1.x + " " + obj2.y);     
        }
   }
a) 7 7
b) 6 6
c) 7 9
d) 9 7



Ques-18
----------
class Sample {
	static int a =10;
	static int b=assign();
	static {
		System.out.println(a);
	}
	
	public static int assign() {
		System.out.println(a);
		return 20;
	}
}
public class Example{
	static int a =30;
	public static void main(String[] args) {
		System.out.println(a+Sample.a);
	}
	static {
		System.out.println(a);
	}
	
		
}

A. 30 10 40
B. 10 30 40
C. 30 10 10 40
D. 30 10 20 40



Ques-19
----------
class Sample {
	static int a =10;
	static int b;
	static {
		System.out.println(a);
	}
	
	public  void add(int a ,int b) {
		System.out.println(a+b);
	}
	static {
		b=20;
		a=30;
	}
}
public class Example{
	static int a=50;
	public static void main(String[] args) {
		new Sample().add(Sample.a,Sample.b);
	}
	static {
		System.out.println(a);
	}
	
		
}

A.50 50 10
B.50 10 50 
C.50 10 10
D.10 50 50

==========================================================================

Q 1. what is the output of this program?

      class Test1 {
           public static void main (String[] args) {
              int x=20;
              System.out.println(x);
         }
         static {
              int x = 10;
              System.out.println(x+" ");
        }
      }
o/p:
10 20
------------------------------------------------------

Q 2. What is the output of this below program ?
 class Test2 {
	static {
		System.out.println(“Test2 class Static Block”);
}
public static  void main(String[] args) {
	System.out.println(“Test2 class main method”);
} 
} 

o/p:
Test2 class Static Block
Test2 class main method
------------------------------------------------------
class Test2 {
	static {
		System.out.println(“Test2 class Static Block”);
}
public static  void main(String[] args) {
          int a;
          System.out.println(a);
	System.out.println(“Test2 class main method”);
} 
} 
o/p:
Test2 class Static Block
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	The local variable a may not have been initialized

	at com.classloader.Static.main(Static.java:8)
-----------------------------------------------------

Q 3. What is the output of this below program ?
class Test3 {
	public static  void  main(String[] args) {
	  	int a;
	System.out.println(“A : “+a);
} 
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	The local variable a may not have been initialized

	at com.classloader.Static.main(Static.java:8)
------------------------------------------------------

Q 4. Can we declare local variable as static if not what is the error?
	class Test4 {
		public static void main(String[] args) {
			static  int x =10;
			System.out.println(x);
		}
	}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Illegal modifier for parameter x; only final is permitted

	at com.classloader.Static.main(Static.java:5)
Reason:
In Java, a static variable is a class variable (for whole class). So if we have static local variable (a variable with scope limited to function), it violates the purpose of static. Hence compiler does not allow static local variable.
 ------------------------------------------------------

 Q 5. Define a class having one static variable say  static int x=10 and invoke x variable 
	        in m1() and main(-)  what is the output ? 
	class Test5 {
		static int x = 10;
		void m1() {
			System.out.println("m1 X : "+x);
		}
		public static void main(String[] args) {
			System.out.println("main X : "+x);			
		}
	}
o/p:
main X:10

 ------------------------------------------------------


Q 6. Is it possible to access non-static variable in static method directly if not what is the   	        	error ?.

	class Test6 {
		int a = 10;
		public static void main(String[] args) {
			System.out.println("A  value :  "+a);
		}
	}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Cannot make a static reference to the non-static field a

	at com.classloader.Static.main(Static.java:7)

------------------------------------------------------

Q 7 . What are the different ways are there to call static variables ?
	class Test7 {
		//static variable a
		static int a = 20;
		public static void main(String[] args) {
			//write code here to access a variable with diff ways
                                System.out.println(a);//directly using variable name
				System.out.println(Static.a);//class.variable name
				System.out.println(new Static().a);//through object creation
				Static s=new Static();
				System.out.println(s.a);//through object reference
		}
	}
------------------------------------------------------

Q 8. What are the different ways to call/invoke static methods from main method 
	class Test8 {
		static void m1() {
			System.out.println("Test8 : m1() called");
		}

		public static void main(String[] args) {
			//write code here
                m1();
		Static.m1();
		new Static().m1();
		Static s=new Static();
		s.m1();
		}
	}
------------------------------------------------------

Q 9. What is the output of the below program ?
	class Test9 {
		static void m1() {
			System.out.println("Test9 : m1()");
		}
		static void m2() {
			System.out.println("Test9 : m2()");
		}

		public static void main(String[] args) {
			m1();
			m2();
		}
	}
o/p:
Test9 : m1()
Test9 : m2()
------------------------------------------------------

Q 10. What is the output of the below program ?
	class Test10 {
		static{
			System.out.println("SB1");
		}
		static void m1() {
			System.out.println("m1()");
		}
		public static void main(String []args) {
			Test10.m1();
		}
	}
o/p:
SBI
m1()
------------------------------------------------------


Q 11. Example on execution order of static members in same class?
	class Test11 {
		static int x=10;
		static int y=20;
		static {
			System.out.println("---Test11 SB1 called---");
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}
		static void m1(){
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}

		public static void main(String[] args) {
			m1();
		}
		static {
			System.out.println("---Test11 SB2 called---");
			System.out.println("X : "+x);
			System.out.println("y : "+y);
		}
	} 
o/p:
---Test11 SB1 called---
X:10
y:20
---Test11 SB2 called---
X:10
y:20
X:10
y:20
------------------------------------------------------

Q 12 . Can we call static method inside static block if yes ,what is the output?
	class Test12 {
		static {	
			System.out.println("Test12 : SB1 called");
			m1();
		}
		static void m1() {
			System.out.println("Test12 : m1() called");
		}
		public static void main(String[] args) {
			//no operation
		}
	}

o/p:
Test12 : SB1 called
Test12 : m1() called
------------------------------------------------------

Q 13 . Is main method mandatory to execute java program if yes, what is the error ?
	class Test13 {
		static {
			System.out.println("Test13 : SB1 called");
		}
		static void m1() {
			System.out.println("Test13 : m1() called");
		}
	}
o/p:
Error: Could not find or load main class com.classloader.Static
Caused by: java.lang.ClassNotFoundException: com.classloader.Static

------------------------------------------------------

Q 14 . What is the  output below program ? 
	class Test14 {
		static int x =100;
		static {
			System.out.println("x :"+x);
			System.exit(0);
		}
	}
o/p:
Error: Could not find or load main class com.classloader.Static
Caused by: java.lang.ClassNotFoundException: com.classloader.Static

------------------------------------------------------

Q 15 . What is the output of the below program ?
	class Test15Super {
		int x =10;
		static void m1() {
			System.out.println("Test15Super : m1()");
		}
		static {
			System.out.println("Test15Super : SB1 called");
		}
	}
	class Test15Sub extends Test15Super {
		static int x =20;
		static {
			System.out.println("Test15Sub : SB1 called");
		}
		static void m2(){
			m1();
			System.out.println("Test15Sub : m2()");
		}
		public static void main(String[] args) {
			m2();
		}
	}
o/p:
Test15Super : SB1 called
Test15Sub : SB1 called
Test15Super : m1()
Test15Sub : m2()
-----------------------------------------------------------------------
Q 16)
public class JVMArc {
	public static void main(String[] args) {
		System.out.println(JVMArc.class.getClassLoader());
		System.out.println(JVMArc.class.getClass());
	}
}
o/p:
jdk.internal.loader.ClassLoaders$AppClassLoader@659e0bfd
class java.lang.Class
-----------------------------------------------------------------------
Q 17)
public class JVMArc {
	public static void main(String[] args) {
		System.out.println(JVMArc.class.getClassLoader());
		System.out.println(JVMArc.class.getClassLoader().getParent());
		System.out.println(JVMArc.class.getClassLoader().getParent().getParent());
		
	}
}

o/p:
jdk.internal.loader.ClassLoaders$AppClassLoader@659e0bfd
jdk.internal.loader.ClassLoaders$PlatformClassLoader@4617c264
null


//Read the notes for your next Mock interview

========================================================================================

Create the program on vehicle System :-



create an abstract class Vehicle with attributes :-

brand and model.

Include an abstract method displayInfo() to display basic information about the vehicle.



Define an interface Engine with a method startEngine() to simulate starting the vehicle's engine.



Define one more interface SafetyFeatures with a method activateAirbags() to simulate activating the vehicle's airbags.



Create a class Car that extends the Vehicle class and implements both the Engine and SafetyFeatures interfaces.

Include specific attributes:-

 such as numDoors and fuelType.(you can take more attributes according to you)



in this implimented car class Override the displayInfo() method in the Car class to display information about the car, including its brand, model, number of doors, and fuel type.

Implement the startEngine() method in the Car class to simulate starting the car's engine.

Implement the activateAirbags() method in the Car class to simulate activating the car's airbags.

Main Program (VehicleDemo):



Create an Factory Class having main method.

instantiate the implimented class and call all the behaviours of this class. 

Call the displayInfo() method to display information about the car.

Call the startEngine() method to simulate starting the car's engine.

Call the activateAirbags() method to simulate activating the car's airbags.


======================
Random Number Generation:



Implement a Supplier named randomSupplier that generates and returns a random number using Math.random().

Print the generated random number to the console.




==========================
Designing a system that models different actors and their chances of getting roles based on their connections.(Nepotism)



Define an abstract class Actor with attributes:-

 name(String) and experience(int).

Include an abstract method displayInfo() to display basic information about the actor.



Define an interface FilmRoles with a method getFilmRoles() to simulate the actor getting film roles.



Define an interface Nepotism with a method influenceChances() to simulate the influence of nepotism on the actor's chances.



Create a class FilmIndustryActor that extends the Actor class and implements both the FilmRoles and Nepotism interfaces.

Include specific attributes for an actor, such as filmography and familyConnection.



Override the displayInfo() method in the FilmIndustryActor class to display information about the actor, including their name, experience, filmography, and family connection.

Implement the getFilmRoles() method in the FilmIndustryActor class to simulate getting film roles.

Implement the influenceChances() method in the FilmIndustryActor class to simulate the influence of nepotism on the actor's chances.

Main Program (FilmIndustryDemo):



Create instances of the FilmIndustryActor class in the main program, considering actors with and without family connections.

instatiate the implimented class object.

Call the displayInfo() method to display information about each actor.

Call the getFilmRoles() method to simulate the actor getting film roles.

Call the influenceChances() method to simulate the influence of nepotism on the actor's chances.


===============
Designing a system to model different tourist places around the world. 



Create an abstract class TouristPlace 

 Attributes:-

 name and location.(String)

one abstract method displayInfo() to display basic information about the tourist place.



Devlop an interface Attractions with a method exploreAttractions() to simulate exploring attractions within the tourist place.



Devlop an interface Services with a method availServices() to simulate availing services offered by the tourist place.



Create a class BeachResort that extends the TouristPlace class and implements both the Attractions and Services interfaces.

Include specific attributes for a beach resort, such as beachType and waterSports.



Override the displayInfo() method in the BeachResort class to display information about the beach resort, including its name, location, beach type, and available water sports.

Implement the exploreAttractions() method in the BeachResort class to simulate exploring attractions like beaches.

Implement the availServices() method in the BeachResort class to simulate availing services like water sports.



Take an main class as TouristPlaceDemo

Create an instance of the BeachResort class in the main program.

Set attributes for the beach resort, such as name, location, beach type, and water sports.

Call the displayInfo() method to display information about the beach resort.

Call the exploreAttractions() method to simulate exploring attractions.

Call the availServices() method to simulate availing services.





Batch 27 [ 24 - 01 - 24 ]

============================
Square of Random Number:



Add another Consumer to the existing program that takes the generated random number from randomSupplier.

Square the random number and print the result to the console.

Ensure that you are reusing the randomSupplier to get the number.

Note: Feel free to modify the existing code and add necessary statements to accomplish the tasks. Your solutions should adhere to good programming practices.


===============================================
Ques - 1
-------------
Given:
1. class X {
2. X() { System.out.print(1); }
3. X(int x) {
4. this(); System.out.print(2);
5. }
6. }
7. public class Y extends X {
8. Y() { super(6); System.out.print(3); }
9. Y(int y) {
10. this(); System.out.println(4);
11. }
12. public static void main(String[] a) { new Y(5); }
13. }
What is the result?
A. 13
B. 134
C. 1234
D. 2134
E. 2143
F. 4321
Answer: C
Ques - 2
-------------
Given:
11. class Snoochy {
12. Boochy booch;
13. public Snoochy() { booch = new Boochy(this); }
14. }
15.
16. class Boochy {
17. Snoochy snooch;
18. public Boochy(Snoochy s) { snooch = s; }
19. }
And the statements:
21. public static void main(String[] args) {
22. Snoochy snoog = new Snoochy();
23. snoog = null;
24. // more code here
25. }
Which statement is true about the objects referenced by snoog, snooch, and booch
immediately after line 23 executes?dsdsdf
A. None of these objects are eligible for garbage collection.
B. Only the object referenced by booch is eligible for garbage collection.
C. Only the object referenced by snoog is eligible for garbage collection.
D. Only the object referenced by snooch is eligible for garbage collection.
E. The objects referenced by snooch and booch are eligible for garbage collection.
Answer: E

Ques - 3
-------------
Given:
3. interface Animal { void makeNoise(); }
4. class Horse implements Animal {
5. Long weight = 1200L;
6. public void makeNoise() { System.out.println("whinny"); }
7. }
8. public class Icelandic extends Horse {
9. public void makeNoise() { System.out.println("vinny"); }
10. public static void main(String[] args) {
11. Icelandic i1 = new Icelandic();
12. Icelandic i2 = new Icelandic();
13. Icelandic i3 = new Icelandic();
14. i3 = i1; i1 = i2; i2 = null; i3 = i1;
15. }
16. }
When line 15 is reached, how many objects are eligible for the garbage collector?
A. 0
B. 1
C. 2
D. 3
E. 4
F. 6
Answer: E

Ques - 4
-------------
Given that: Gadget has-a Sprocket and Gadget has-a Spring and Gadget is-a Widget and
Widget has-a Sprocket Which two code fragments represent these relationships? (Choose two.)
A. class Widget { Sprocket s; } class Gadget extends Widget { Spring s; }
B. class Widget { } class Gadget extends Widget { Spring s1; Sprocket s2; }
C. class Widget { Sprocket s1; Spring s2; } class Gadget extends Widget { }
D. class Gadget { Spring s; } class Widget extends Gadget{ Sprocket s; }
E. class Gadget { } class Widget extends Gadget{ Sprocket s1; Spring s2; }
F. class Gadget { Spring s1; Sprocket s2; } class Widget extends Gadget{ }

Answer: A,C

Ques - 5
-------------
class B {
	static {
		B.x = 10;
		
	}
	static int x;//x=10
	{
		this.y = 20;
	}
	final int y;//20
	B(){
		System.out.println(x+y);//30
	}
}
class F extends B {
	
	static B b;//b=null->1000x
	static {
		F.b = new B();
	}
}
public class TestMcq {
	public static void main(String[] args) {
		System.out.println(F.b.x);//10

	}
}

Ans : 10

Ques - 6
-------------
class B {
	static {
		int a = 10;//a=40
		a = B.a;
		new B(a);
	}
	static int a = 40;
	{
		int a = 20;
		b = a;//b=20
		B.a = a;//B.a=20
		System.out.println(B.a);//20
	}
	int b = 10;

	B(int a) {
		System.out.println(this.a + a);//20+40
		this.b = B.a;//
		A();
	}

	void A() {
		System.out.println(b);
	}

}

public class TestMcq {
	public static void main(String[] args) {
         System.out.println(B.a);
	}
}

Ans : 20
20
20
40

Ques - 7
----------
3 Given the following class, which of these static initializer blocks can be inserted at
(1)?
public class MyClass {
 private static int count = 5;
 final static int STEP = 10;
 boolean alive;
 // (1) INSERT STATIC INITIALIZER BLOCK HERE
}
Select the three correct answers.
(a) static { alive = true; count = 0; }
(b) static { STEP = count; }
(c) static { count += STEP; }
(d) static ;
(e) static {;}
(f) static { count = 1; }

ans)c,e,f

QUes - 8
----------
What will be the result of compiling and running the following program?
public class MyClass {
 public static void main(String[] args) {
 MyClass obj = new MyClass(n);
 }
 static int i = 5;
 static int n;
 int j = 7;
 int k;
 public MyClass(int m) {
 System.out.println(i + ", " + j + ", " + k + ", " + n + ", " + m);
 }/';lkjhgfdtrew
 { j = 70; n = 20; } // Instance Initializer Block
 static { i = 50; } // Static Initializer Block
}
Select the one correct answer.
(a) The code will fail to compile because the instance initializer block tries to
assign a value to a static field.
(b) The code will fail to compile because the field k will be uninitialized when it is
used.
(c) The code will compile and print 50, 70, 0, 20, 0, when run.
(d) The code will compile and print 50, 70, 0, 20, 20, when run.
(e) The code will compile and print 5, 70, 0, 20, 0, when run.
(f) The code will compile and print 5, 7, 0, 20, 0, when run.

ans)c

Ques - 9
----------
Given the following class, which instance initializer block inserted at (1) will allow
the class to be compiled?
public class MyClass {
 static int gap = 10;
 double length;
 final boolean active;
 // (1) INSERT CODE HERE
}
Select the one correct answer.
(a) instance { active = true; }
(b) MyClass { gap += 5; }
(c) { gap = 5; length = (active ? 100 : 200) + gap; }
(d) { ; }
(e) { length = 4.2; }
(f) { active = (gap > 5); length = 5.5 + gap;}
o/p:
d,e

Ques - 10
----------
What will be the result of compiling and running the following program?
public class Initialization {
 private static String msg(String msg) {
 System.out.println(msg); return msg;
 }
 public Initialization() { 
   m = msg("1"); 
 }
 { 
   m = msg("2");
 }
 String m = msg("3");
 public static void main(String[] args) {
 Object obj = new Initialization();
 }
}
Select the one correct answer.
(a) The program will fail to compile.
(b) The program will compile, and print 1, 2, and 3, when run.
(c) The program will compile, and print 2, 3, and 1, when run.
(d) The program will compile, and print 3, 1, and 2, when run.
(e) The program will compile, and print 1, 3, and 2, when run.
o/p:
2
3
1

Ques - 11
----------
What will be the result of compiling and running the following program?
public class Initialization {
 private static String msg(String msg) {
 System.out.println(msg); return msg;
 }
 static String m = msg("1");
 { m = msg("2"); }
 static { m = msg("3"); 
o/p:
1
3
2
Ques - 12
----------
 public static void main(String[] args) {
 Object obj = new Initialization();
 }
}
Select the one correct answer.
(a) The program will fail to compile.
(b) The program will compile and print 1, 2, and 3, when run.
(c) The program will compile and print 2, 3, and 1, when run.
(d) The program will compile and print 3, 1, and 2, when run.
(e) The program will compile and print 1, 3, and 2, when run(ans)

Ques - 13
----------
Which of the labeled lines in the following code can be uncommented by removing
the // characters and still allow the code to compile correctly?
class GeomInit {
//int width = 14; /* Line A */
 {
// area = width * height; /* Line B */
 }
 int width = 37;
 {
// height = 11; /* Line C */
 }
 int height, area;
//area = width * height; /* Line D */
 {
// int width = 15; /* Line E */
 area = 100;
 }
};
Select the two correct answers.
(a) Line A
(b) Line B
(c) Line C
(d) Line D
(e) Line E

Ques - 14
----------
class Foo {
	static int x = 10;
	static Foo f;//null->
	int y = m1();//20
	static {
		f = new Foo();//2000x
	}
	{
		System.out.println(y);//20
	}

	int m1() {
		System.out.println("m1");
		return 20;
	}

}

public class TestMcq {
	public static void main(String[] args) {
		System.out.println("Main start");
          Foo f  = new Foo();//1000x
	}
}

Ans : Main start
m1
20
m1
20

Ques - 15
----------
class Ex {
	static {
		a = 10;
	}
	static int a ;
	static {
		b = 20;
	}
	static int b;
	{
		c = 30;
	}
	int c;
	void m1() {
		System.out.println(a+b+c);
	}
}
public class TestMcq {
	public static void main(String[] args) {
		Ex e = new Ex();
		e.m1();
	}
}

Ans : 60


Ques - 16
----------
Given:
1. interface DoStuff2 {
2. float getRange(int low, int high); }
3.
4. interface DoMore {
5. float getAvg(int a, int b, int c); }
6.
7. abstract class DoAbstract implements DoStuff2, DoMore { }
8.
9. class DoStuff implements DoStuff2 {
10. public float getRange(int x, int y) { return 3.14f; } }
11.
12. interface DoAll extends DoMore {
13. float getAvg(int a, int b, int c, int d); }
What is the result?
A. The file will compile without error.
B. Compilation fails. Only line 7 contains an error.
C. Compilation fails. Only line 12 contains an error.
D. Compilation fails. Only line 13 contains an error.
E. Compilation fails. Only lines 7 and 12 contain errors.
F. Compilation fails. Only lines 7 and 13 contain errors.
G. Compilation fails. Lines 7, 12, and 13 contain errors.
Answer: A

Ques - 17
----------

interface A { }

class C { }

class D extends C { }

class B extends D implements A { }

public class Test extends Thread{//Thread is the predefined class
public static void main(String[] args){
B b = new B();
if (b instanceof A)System.out.println("b is an instance of A");
if (b instanceof C)System.out.println("b is an instance of C");
}
}

a.nothing
b.b is an instance of A
c.b is an instance of C
d.b is an instance of A
  b is an instance of C

Ans:d

Ques - 18
----------

abstract class MyClass{ //line 1
      private int a, b;

      public void call(int a, int b){
            this.a = a;
            this.b = b;
            System.out.print(a+b);
      }
}

public class Test{
      public static void main(String args[]){
            MyClass m = new MyClass(); //line 2
            m.call(12,25);
      }
}

a.sucessful run and print 37
b.Compilation error due to line 1
c.Compilation error due to line 2
d.Runtime error

Ans:c

Ques - 19
----------
interface Test{
      int p = 10; //line 1
      public int q = 20; //line 2
      public static int r = 30; //line 3
      public static final int s = 40; //line 4
}


a.1
b.2
c.3
d.None of these
Ans:d

Ques - 20
----------

interface Base{
      boolean m1 ();
      byte m2(short s);
}

1. interface Base2 implements Base {}

2. abstract class Class2 extends Base
    { public boolean m1(){ return true; }}

3. abstract class Class2 implements Base {}

4. abstract class Class2 implements Base
    { public boolean m1(){ return (7 > 4); }}

5. abstract class Class2 implements Base
    { protected boolean m1(){ return (5 > 7) }}


a. 1 and 2
b. 2 and 3
c. 3 and 4
d. 1 and 3

Ans:c
Ques - 21
----------

Which of these packages contains abstract keyword?

A. java.lang
B. java.util
C. java.io
D. java.system

Ans:A

Ques - 22
----------

What will be output for the folllowing code?

         
abstract class Bank {

  private abstract void withdraw(); // Line 1
  abstract void deposit();
  public void balance(){} //Line 2
}
class office extends Bank{ // Line 3

  void deposit() { // Line 4
    // TODO Auto-generated method stub

  }
}

A. Compilation error in Line 1(abstract method cannot be private)
B. Compilation error in Line 2(abstract class cannot have concrete method)
C. Compilation error in Line 3(abstract class cannot be extended)
D. Compilation error in Line 4(deposit method should have public access modifier)

Ans: A

Ques - 23
----------
What will be output for the folllowing code?

abstract class Bank 
{

    private String bankName;

    Bank(String bankName) 
    {
        this.bankName = bankName;
    }

    public String getBankName() 
    {
    return bankName;
    }
}

class office extends Bank {

  office() {
    super("Axis Bank");
  }

  public static void main(String[] args) {
    Bank bank = new office();
    System.out.println(bank.getBankName());
  }

}

A. Compilation error will occur because ""abstract class cannot have constructor""
B. Compilation error will occur because ""abstract class must have an abstract method""
C. Compilation error will occur while invoking the super class constructor
D. Code will be compiled successfully

Ans:D

Ques - 24
----------
public abstract interface Frobnicate { public void twiddle(String s) ; } Which is a correct class? (Choose all that apply.)

A.
Public abstract class Frob implements Frobnicate { public abstract void twiddle(String s){} }


B.
Public abstract class Frob implements Frobnicate { }

C.
Public class Frob extends Frobnicate { public void twiddle(Integer i) { } }

D.
Public class Frob implements Frobnicate { public void twiddle(Integer i) { } }

E.
Public class Frob implements Frobnicate { public void twiddle(String i) { } public void twiddle(Integer s) { } }

Ans:B
Ques - 25
----------

Which type of inheritance ,when done continuously, is similar to a tree structure?
 multilevel
 hierarchical and multiple
 hierarchical
 multiple

Ans:3

Ques - 26
----------
interface Count { 
short counter = 0; 
void countUp();
}
public class TestCount implements Count {
public static void main(String [] args) {
TestCount t = new TestCount(); 
t.countUp();
}
public void countUp() {
for (int x = 6; x>counter; x--, ++counter)
{
System.out.print(" " + counter);
}
}
}
o/p:
TestCount.java:19: error: cannot assign a value to final variable counter
for (int x = 6; x>counter; x--, ++counter)
                                  ^
1 error
----------------
a. 0 1 2 
b. 0 1 2 3
c.compile time error
d.0 1 2
e. 1 2
Ques - 27
----------
interface ABC {
void methodOne();
}
interface PQR extends ABC {
void methodTwo(int i);
}
abstract class XYZ implements PQR {
public void methodOne() {
methodTwo(2);
}
}
class EFG extends XYZ {
public void methodTwo(int i) {
System.out.println(Math.pow(i, 2));
}
}
class Main {
public static void main(String[] args) {
ABC abc = new EFG();
abc.methodOne();
}
}

a.4
b.compile time error
c.no output
d.4.0(because math.pow() will returns double value thus the output is 4.0
Ans: 4.0

Ques - 28
----------
Why would you use an abstract class over an interface?
 a.Can provide additional methods with code already implemented
 b.You have multiple subclasses which need to perform the smae implementation of a task
 c.Both of the above
 d.none of the above

Ans:c

Ques - 29
----------

Which of the following is not true about interfaces ?

 a.Interfaces contain abstract methods without bodies.
 b.Class implementing an interface should implement all the methods.
 c.Methods in interface can be of any access specifier.
 d.Used to achieve Multiple inheritance in Java.

Ans:c

Ques - 30
----------
interface Interface {
public void method1();
public void method2();
}
class InterfaceSample implements Interface {
public void method1() {
System.out.println(“Method is executed”);
}
}
class Test {
public static void main ( String args [ ] )
{
InterfaceSample i = new InterfaceSample();
i.method1();
}
}

a.All the interface methods are not implemented.
b.Method is executed
c.compiletime error 

Ans:b


========================================================================

1) What is the output of the following Java program?

public class ExceptionExample {
    public static void main(String[] args) {
        try {
            String str = null;
            System.out.println(str.length());
        } catch (NullPointerException e) {
            System.out.println("NullPointerException occurred.");
        } finally {
            System.out.println("End of program.");
        }
    }
}
A) NullPointerException occurred. End of program.
B) End of program.
C) The program will terminate with an error.
D) NullPointerException occurred.

o/p:
A
------------------------------------------------------------------------------
2) What is the output of the following Java program?

public class ExceptionExample {
    public static void main(String[] args) {
        try {
            int[] nums = {1, 2, 3};
            System.out.println(nums[3]);
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("ArrayIndexOutOfBoundsException occurred.");
        } finally {
            System.out.println("End of program.");
        }
    }
}
A) ArrayIndexOutOfBoundsException occurred. End of program.
B) End of program.
C) The program will terminate with an error.
D) ArrayIndexOutOfBoundsException occurred.

o/p:
A
-------------------------------------------------------------------------------
3) What is the output of the following Java program?

public class ExceptionExample {
    public static void main(String[] args) {
        try {
            int num1 = Integer.parseInt(args[0]);
            int num2 = Integer.parseInt(args[1]);
            int result = num1 / num2;
            System.out.println("The result is: " + result);
        } catch (ArithmeticException e) {
            System.out.println("Cannot divide by zero.");
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Please provide two integers as command-line arguments.");
        } catch (NumberFormatException e) {
            System.out.println("Please provide valid integers as command-line arguments.");
        } finally {
            System.out.println("End of program.");
        }
    }
}
What will be the output of the program if it is executed with the command java ExceptionExample 5 0?

A) Cannot divide by zero. End of program.
B) Please provide two integers as command-line arguments. End of program.
C) Please provide valid integers as command-line arguments. End of program.
D) The program will terminate with an error.

o/p:
A
--------------------------------------------------------------------------------------------------
4) What is the output of the following Java program?

public class ExceptionExample {
    public static void main(String[] args) {
        try {
            int num = Integer.parseInt("abc");
            System.out.println("The number is: " + num);
        } catch (NumberFormatException e) {
            System.out.println("NumberFormatException occurred.");
        } finally {
            System.out.println("End of program.");
        }
    }
}
A) NumberFormatException occurred. End of program.
B) End of program.
C) The program will terminate with an error.
D) NumberFormatException occurred.

o/p:
A
------------------------------------------------------------------------------------------
5) What is the output of the following Java program?

public class ExceptionExample2 {
    public static void main(String[] args) throws Exception {
        int num = 10;
        if (num > 5) {
            throw new Exception("Invalid number.");
        }
        System.out.println("End of program.");
    }
}
A) Invalid number.
B) End of program.
C) The program will terminate with an error.
D) Invalid number. End of program.

O/P;
C
(Exception in thread "main" java.lang.Exception: Invalid number.
	at Exception.ExceptionExample2.main(ExceptionExample2.java:7))
---------------------------------------------------------------

6) What is the output of the following Java program?
public class Main {
    public static void main(String[] args) {
        try {
            int[] arr = new int[5];
            arr[10] = 15;
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Exception caught: " + e.getMessage());
        } finally {
            System.out.println("Finally block executed.");
        }
    }
}
o/p:
Exception caught:Index 10 out of bounds for length 5
Finally block executed
------------------------------------------------------

7) What is the purpose of this program?
A. To create an array of integers
B. To set the value of the 10th element in an array to 15
C. To catch an ArrayIndexOutOfBoundsException if it occurs
D. To execute a finally block after the try and catch blocks

o/p:
C

8) What is an exception in Java?
A. A condition that occurs when a program runs successfully
B. A condition that occurs when a program fails to compile
C. A condition that occurs when a program runs into an error or unexpected situation
D. A condition that occurs when a program is executed in debug mode

Answer: C

9) What is the purpose of the try block in this program?
A. To define the code that may throw an exception
B. To define the code that should always be executed
C. To define the code that should be executed if an exception is caught
D. To define the code that should be executed regardless of whether an exception is caught or not
Answer: A

10) What is the purpose of the finally block in this program?
A. To define the code that may throw an exception
B. To define the code that should always be executed
C. To define the code that should be executed if an exception is caught
D. To define the code that should be executed regardless of whether an exception is caught or not
Answer: D

CODING PROGRAMS :
-----------------
EXCEPTION HANDLING LAB EXERCISE STAGE-1
========================================
1. Exception and Messages 
a. Write a program to create a class  SimpleExceptionDemo  ,which implements main method.
b. This program should read two integer numbers for the variables a and b from console using Scanner class.
c. If you enter any other character except number (0 - 9 ) then the error is caught by InputMisMatchException object.
d. After that using following methods print the information about the error occurring causes in the console. getMessages() printStackTrace() println() toString()

package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class SimpleExceptionDemo4 {

	public static void main(String[] args) {
		try {
			Scanner sc=new Scanner(System.in);
			System.out.println("enter a and b values from console");
			int a=sc.nextInt();
			int b=sc.nextInt();
		}
		catch(InputMismatchException e) {
			System.out.println("ERRROR"+e.getMessage());
		    System.out.println("---------");
			e.printStackTrace();
		    System.out.println("--------------");
	        System.out.println(e.toString());
			}
	}

}

----------------------------------------------------------------------
2. ArrayIndexOutOfBoundException 
a. Write a program to create a class  ArrayIndexExceptionDemo  which implements main method.
b. Inside main method create an array of int type as follows.
int a[] = new int[2];
c. Now try to print the value of a[3] in the console where handle the Exceptions coming from this line using try catch.
d. In the catch block handle this exception using ArrayIndexOutOfBound Exception and print appropriate message in the console from this Exception.

package Exception;

public class ArrayIndexExceptionDemo5 {

	public static void main(String[] args) {
		int a[]=new int[2];
		try {
			a[3]=10;
			System.out.println(a[3]);
		}
		catch(ArrayIndexOutOfBoundsException e) {
			System.out.println("Index is out of it range");
		}
	}

}

----------------------------------------------------------------------
3. IllegalStateException 
a. Write a program to create a class  IllegalStateExceptionDemo  which implements a method as follows static void throwIllegalException( ) { try{ throw new IllegalStateException("MyException"); } catch(IllegalStateException objA){ System.out.println("caught:" +objA); } }
b. Implement the main method, and from main method call the above method.
c. Check the output of the program.
package Exception;

public class IllegalStateExceptionDemo6 {
		 static void throwIllegalException( )
		 {
			 try{ 
				 throw new IllegalStateException("MyException"); 
				 }
			 catch(IllegalStateException objA)
			 {
				 System.out.println("caught:" +objA);
				 }
			 }
		 public static void main(String[] args) {
			 throwIllegalException();
		 }
	 }

------------------------------------------------------------------------
4. ClassNotFoundException 
a. Write a program to create a class  ClassNotFoundExpDemo  which implements default constructor as follows ,
public ClassNotFoundExpDemo { Class c; try { c = Class.forName("TestClass"); } catch (ClassNotFoundException e) { // deal with the exception here ... e.printStackTrace(); } }
b. Implement the main method and inside main method create an object of ClassNotFoundExpDemo class.
c. Now check the O/P.

package Exception;

public class ClassNotFoundException7 {
		public ClassNotFoundException7() 
		{ 
			Class c;
		try 
		{ 
			c = Class.forName("TestClass"); 
			}
		catch (ClassNotFoundException e) { // deal with the exception here ... 
			e.printStackTrace();
			} 
		}
	public static void main(String[] args) {
		ClassNotFoundException7 x=new ClassNotFoundException7();
	}

}
==================================

package Exception;

public class ClassNotFoundException7 {
		public ClassNotFoundException7() 
		{ 
			Class c;
		try 
		{ 
			c = Class.forName("Exception.P");
			System.out.println(c);
			}
		catch (ClassNotFoundException e) { // deal with the exception here ... 
			e.printStackTrace();
			} 
		}
	public static void main(String[] args) {
		ClassNotFoundException7 x=new ClassNotFoundException7();
	}
}
class P{
	
}
 
======================================================

1. Arithimatic Exception Example
Create a class ExceptionDemo and define a non static method as Follow
public void checkException()
{
try
int num1=30,num2=0;
int operation=num1/num2;
Sysout("Result:"+Operation);
}
catch(ArithmeticException e)
{
Sysout("You Shouldn't divide a number by zero");
} 
}

pgm:
----
package Exception;

public class ExceptionDemo {
public void checkException() {
	try {
	int num1=30,num2=0;
	int operation=num1/num2;
			System.out.println("Result:"+operation);
	}

catch(ArithmeticException e){
	System.out.println("you shouldn't divide a number by zero");
}
}
public static void main(String[] args) {
	new ExceptionDemo().checkException();
}
}

---------------------------------------------------------------------

2. ArrayIndexOutOfBoundsException
Create a class ExceptionDemo and define a non static method as follow public void checkException()
try
{
int a[]=new int [50];
a[6]=20;
}
catch (ArrayIndexOutOfBoundsException a)
{
Sysout("Array Index Out Of Bounds");
}
}

Call the above method from main method and observe the Output.

package Exception;

import java.util.Scanner;

public class ExceptionDemo9 {
public void checkException() {
	try {
		int a[]=new int[50];
		Scanner sc=new Scanner(System.in);
		System.out.println("enter array element:");
		a[6]= sc.nextInt();
		System.out.println(a[6]);
	}
	catch(ArrayIndexOutOfBoundsException a) {
		System.out.println("Array index out of bounds");
	}
}
public static void main(String[] args) {
new ExceptionDemo9().checkException();
}
}

o/p;
no output
---------------------------------------------------------------------
3. NumberFormatException

Create a class ExceptionDemo and define a method as Follow
public void checkException()
{
try
{
int num=Integer.parseInt("xyz");
Sysout(num);
}
catch (NumberFormatException e)
{
Sysout(Number Format Exception Occured");
}
}
Call the above method from main method and observe the Output.

package Exception;

import java.util.Scanner;

public class ExceptionDemo10 {
public void checkException() {
	try {
//		Scanner sc=new Scanner(System.in);
//		System.out.println("enter the String");
//		int n=sc.nextInt();
		int num=Integer.parseInt("xyz");
		System.out.println(num);
	}
	catch(NumberFormatException e) {
		System.out.println("number format exception occured");
	}
}
public static void main(String[] args) {
	new ExceptionDemo10().checkException();
}
}

----------------------------------------------------------------------
4. StringIndexOutOfBoundsException

Create a class ExceptionDemo and define a method as Follow
public void checkException()
{ 
 try
 {
String Str = "Hello World"
Sysout(str.length());
char c=str.charAt(0);
c=str.charAt(40);
Sysout(c);
}
catch(StringIndexOutOfBoundsException s)
{ 
Sysout("String Index Out Of Bounds Exception !");
}
}
Call the above method from main method and observe the Output.

package Exception;

import java.rmi.StubNotFoundException;

public class ExceptionDemo11 {
public void checkException() {
	try {
		String str="hello world";
		System.out.println(str.length());
		char c=str.charAt(0);
		System.out.println(c);
		c=str.charAt(40);
		System.out.println(c);
	}
	catch(StringIndexOutOfBoundsException s) {
		System.out.println("String index out bound exception");
	}
}
	public static void main(String[] args) {
		new ExceptionDemo11().checkException();
	}

}

o/p:
11
h
String index out of bound exception
----------------------------------------------------------------------
5. NullPointerException 

Create a class ExceptionDemo and define a method as Follow
public void checkException()
{
try
{
String str=null;
Sysout(str.length());
}
catch(NullPointerException e)
{
Sysout("Null Pointer Exception");
}
}
Call the above method from main method and observe the Output.

package Exception;

import java.util.Scanner;

public class ExceptionDemo12 {
public void checkException() {
	try {
		Scanner sc=new Scanner(System.in);
		String str=sc.next();
		//String str=null;
		System.out.println(str.length());
	}
	catch(NullPointerException e) {
		System.out.println("Null pointer exception");
	}
}
public static void main(String[] args) {
	new ExceptionDemo12().checkException();
}
}

----------------------------------------------------------------------
6. How to Resolve Null Pointer Excetion.
Write a Program to Create a class with name " HandleNullPointerException".

* Define a parameterised method and name it as dispaly.What ever value you will pass as argument,within
the method print the argument .

*)Define the main method and write the following code
HandleNullPointerException h=null;
h.display();

Now see the console, You will get NullPointerException.
Now how to handle the above the exception or for handling the above exception,design you main method
in the below manner

HandleNullPointerException h= null;
if (h==null)
{
h= new HandleNullPointerException();
h.display();
}
else
{
h.display();
}

pgm
---
package Exception;

public class HandleNullPointerException13 {
public void display(String s) {
	System.out.println(s);
}
public static void main(String[] args) {
	HandleNullPointerException13 h=null;
	h.display("xyz");
}

}
o/p:
Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Exception.HandleNullPointerException13.display(String)" because "h" is null
	at Exception.HandleNullPointerException13.main(HandleNullPointerException13.java:9)
--------------------------------------------
package Exception;

public class HandleNullPointerException13 {
public void display(String s) {
	System.out.println(s);
}
public static void main(String[] args) {
	HandleNullPointerException13 h= null();
	if (h==null)
	{
	h= new HandleNullPointerException13();
	h.display("a");
	}
	else
	{
	h.display("b");
	}

}

}

o/p:
a
----------------------------------------------------------------------
7. When We will get StackOverFlowError
Write a Program To Create a Class StackOverFlowErrorDemo and define a method display and design as follows.
public void display()
{
Sop(" I am StackOverFlow");
display();
}
Now call this within main method and Observe the Output.

pgm
---:
package Exception;

public class StackOverFlowErrorDemo14 {
public void display() {
	System.out.println("Iam stackoverflow");
	display();
}
	public static void main(String[] args) {
		new StackOverFlowErrorDemo14().display();
	}

}

----------------------------------------------------------------------
8. Try with Resources
Create a class with name MyAutoClosable
which implements AutoClosable interface and Override close() of AutoClosable
Now Define a method with name display() and design the method as below
public void display(string str)
{
if (str==null)
{
throw new RuntimeException();
}
else
{
Sop("Yeh,I don't have exception");
}
}
Define main method and call the above method using catch Block.
If you want to use try with resource Concept in the above program,then you need to design Your main methid as follow.
public static void main(String args[])throws Exception
{
MyAutoClosable m = new MyAutoClosable();
try (m)
{
m.dispaly(null);
}
Now call the Some method by passing Some appropriate message and Observe the output.

pgm
---
package Exception;

public class MyAutoClosable15 implements AutoCloseable{

	@Override
	public void close() throws Exception {
		// TODO Auto-generated method stub
		
	}
public void display(String str) {
	if(str==null) {
		throw new RuntimeException();
	}
	else {
		System.out.println("yes , i don't have exception");
	}
}
public static void main(String[] args) {
	MyAutoClosable15 m=new MyAutoClosable15();
	try(m){
		m.display(null);
		System.out.println("iiii");
	}
	catch(Exception e) {
		System.out.println("---------");
		e.printStackTrace();
	}
}
}

----------------------------------------------------------------------
9. Multiple Catch Block
Create a Class with Multiple catch block and define one method with name multiCatch () and design
the method as follow.

int a[]=new int[2];
try
{
a [4]=10/2;
}
catch(ArrayIndexOutOfBoundsException e){
e.printStackTrace();
}
catch (ArithmeticException e) {
e.printStackTrace();
} 

Call the above method in the main method and Observe the output.
Change in the above method 10/2 into 10/0 and observe the output.

pgm
---
package Exception;

public class MultiCatchBlocks16 {
int a[]=new int[2];
public void multipleCatch() {
try {
	a[4]=10/0;
}
catch(ArrayIndexOutOfBoundsException e) {
	e.printStackTrace();
}
catch(ArithmeticException e) {
	e.printStackTrace();
}
}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new MultiCatchBlocks16().multipleCatch();
	}

}

----------------------------------------------------------------------
10. Multiple Catch Statement:
In the above eg.instead of Writing Multiple Catch block We can One catch block witmmultipleException as follow.
/*catch(ArrayIndexOutOfBoundsException|ArithmeticException |NumberFormatException e){
e.printStackTrace();
}*/*
Now observe the output.

package Exception;

public class MultiCatchBlocks16 {
int a[]=new int[2];
public void multipleCatch() {
try {
	a[4]=10/0;
}
catch(ArrayIndexOutOfBoundsException|ArithmeticException|NumberFormatException e) {
	e.printStackTrace();
}
//catch(ArithmeticException e) {
//	e.printStackTrace();
//}
}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		new MultiCatchBlocks16().multipleCatch();
	}

}

---------------------------------------------------------------------
11) Try with Resources :

Create two classes which are as follows :

a) class NetworkResource, which implements from AutoCloseable and 
   override close method to write some message that network resource
   closed.

b) class KeyboardResource, which implements from Closeable and override 
   close method to write some message that keyboard resource closed.

Create one ELC class which contains main method, Write try with resources in java 9 style to call close method of NetworkResource class
and KeyboardResource class.

Write one catch block for try with resources block which is handling AE, in the first line of try block write sysout(10/0);

-----------------------------------
package Exception;
public class Mian17 {

	public static void main(String[] args) throws Exception{
		NetworkResource17 n=new NetworkResource17();
		KeyboardResource17 k=new KeyboardResource17();
			try {
				try(n;k){
					System.out.println(10/0);
				}
				catch(ArithmeticException e) {
					System.out.println("Divide by Zero");
}
			}catch (Exception e) {
				e.printStackTrace();
			}
}
}
----------------------------------------
package Exception;

import java.io.Closeable;
import java.io.IOException;

class NetworkResource17 implements AutoCloseable{

	@Override
	public void close() throws Exception {
		System.out.println("network resource closed");
	}
}

----------------------------------
package Exception;

import java.io.Closeable;
import java.io.IOException;

public class KeyboardResource17 implements Closeable{

	@Override
	public void close() throws IOException {
		System.out.println("keyboard Resource closed");
	}

}

=======================================================================================================

Que-1)

public class ExcProgram01
{
public int m1(int a) 
{
System.out.println("m1 started");
while(a==5) 
{ 
try 
{
++a;
//return 10;
// break;
//continue;
}
finally 
{
// break; continue;
}
}
return 20;
}
public static void main(String[] args) 
{ 
   ExcProgram01 e3=new ExcProgram01(); 
   System.out.println(e3.m1(5));
}
}

o/p:
m1 started
20

Que-2)


public class ExcProgram02 
{
public int m1(int a)
{
while(a==5)
{
try
{
  try 
  {
    a=10;
  }

finally 
{ 
a=20;
} 
a=30;
return a;
}
finally 
{ 
if(a==30) 
{
continue;
}
}
}
return 40;
 
public static void main(String[] args) 
{ 
   ExcProgram02 e4=new ExcProgram02(); 
   System.out.println(e4.m1(5));
}
}
o/p:
40

Que-3)

public class ExcProgram03 
{
public void addLogic(int a,int b) 
{ 
   if(a<0||b<0) 
   {
     throw new IllegalArgumentException("don’t pass the -ve number");
   }
   else
   {
	int c=a+b;
	System.out.println("addition of the no:"+c);
    }
}

public static void main(String[] args) 
{
   Scanner sc=new Scanner(System.in); 
   System.out.println("enter the 2 number"); int a=sc.nextInt();
   int b=sc.nextInt();
   ExcProgram03 e5=new ExcProgram03();
   // e5.addLogic(a,b); 
      try 
      {
         e5.addLogic(a, b);
      }
      catch(IllegalArgumentException e) 
      {
         System.out.println(e.getMessage());
       }

   }

}
o/p:
+ve numbers will prints sum
-ve number will gives msg like (don’t pass the -ve number)


Que-4)

public class ExcepProgram04
{
public static void main(String[] args) 
{ 
  System.out.println(1);
  try 
  {
     System.out.println(2); 
     System.out.println(3); 
     System.out.println(4/0);
 
//catch(NullPointerException ne) 
   }
  catch(ArithmeticException e) 
  { 
    System.out.println(5); 
    System.out.println(6/0); 
    System.out.println(7);
   }
   System.out.println(8);
}
}

o/p:
1
2
3
5
Exception

after solving
-------------
package Exception;

import java.util.Scanner;

public class Excpgm18 {
	
	public static void main(String[] args)  
	{ 
	  System.out.println(1);
	  try 
	  {
	     System.out.println(2); 
	     System.out.println(3); 
	     System.out.println(4/0);
	 
	//catch(NullPointerException ne) 
	   }
	  catch(ArithmeticException e) 
	  { 
	    System.out.println(5);
	    try {
	    System.out.println(6/0);
	    }
	    catch(ArithmeticException a) {
	    	System.out.println(6);
	    }
	    System.out.println(7);
	   }
	  
	   System.out.println(8);
	}

}

o/p:
1
2
3
5
6
7
8		

Que-5)

import java.util.*;

public class ExcepProgram05 
{
public static void main(String[] args) 
{
   try 
   {
       Scanner sc=new Scanner(System.in);
       System.out.println("enter the number for a and b"); 
       int a=sc.nextInt();
       int b=sc.nextInt(); 
       int result=a/b;
       System.out.println("The result is :"+result);
    }
catch(ArithmeticException e) {
System.out.println(" don’t divide the number with 0");
}
catch(InputMismatchException ne) {
System.out.println("don’t enter anything apart from int");
}
catch(Exception e) 
{
System.out.println("Exception raised");
}
}

}

o/p-1
enter the number for a and b
1
0
 don’t divide the number with 0

o/p -2:
enter the number for a and b
1
s
don’t enter anything apart from int


Que-6)

public class ExcepProgram06 
{
public static void main(String[] args) 
{
System.out.println("main start"); 
System.out.println(m1()); 
System.out.println("main end");
}
static public int m1() 
{
   try 
   {
     System.out.println("In try"); return 10;
 
      catch(ArithmeticException e) 
       { 
          System.out.println("In catch"); 
	  return 20;
       }
       finally 
       {
          System.out.println("In finally");
	  return 30;
       }
      }

}


o/p:
we should not write catch inside the try block

after debugging
---------------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	public static void main(String[] args) 
	{
	System.out.println("main start"); 
	System.out.println(m1()); 
	System.out.println("main end");
	}
	static public int m1() 
	{
	   try 
	   {
	     System.out.println("In try"); return 10;
	     
	   }
	 
	      catch(ArithmeticException e) 
	       { 
	          System.out.println("In catch"); 
		  return 20;
	       }
	       finally 
	       {
	          System.out.println("In finally");
		  return 30;
	       }
	   }
	}

o/p:
main start
In try
In finally
30
main end
------------------------------------------------------------
	
		
Que-7)

public class ExcepProgram07
{
public static void main(String[] args)
 { 
    System.out.println("main start");
    System.out.println(m1());
    System.out.println("main end");
  }
static public int m1() 
{
   try 
   {
      System.out.println("In try"); 
      int a=10;
      int b=0;
      int result=a/b; return result;
   }
   catch(ArithmeticException e) 
   { 
      System.out.println("In catch"); return 20;
   }
   finally 
   {
     System.out.println("In finally"); return 30;
   }
}

}

o/p:
main start
in try
in catch
in finally
30
main end
-----------------------------------------------

Que-8)

public class ExcepProgram08 
{
public static void main(String[] args) 
{ 
   System.out.println("main start"); 
   System.out.println(m1()); 
   System.out.println("main end");
}
static public int m1() 
{ 
   try 
   { 
	System.out.println("In try"); int a=10;
	int b=0;
	int result=a/b; 
	return result;
    }
    catch(NumberFormatException e) 
    {
       System.out.println("In catch"); 
       return 20;
    }
    finally 
    {
       System.out.println("In finally"); return 30;
    }
}

}

o/p:
main start
in try
in finally
30
main end

after debugging
---------------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	public static void main(String[] args) 
	{
		
		
		System.out.println("main start"); 
		   System.out.println(m1()); 
		   System.out.println("main end");
		}
		static public int m1() 
		{ 
		   try 
		   { 
			System.out.println("In try"); int a=10;
			int b=0;
			int result=a/b; 
			return result;
		    }
		    catch(NumberFormatException e) 
		    {
		       System.out.println("In catch"); 
		       return 20;
		    }
		    finally 
		    {
		       System.out.println("In finally"); 
		       //return 30;
		    }
		
		}

		}
		
o/p:
main start
In try
In finally
Exception in thread "main" java.lang.ArithmeticException: / by zero
	at Exception.Excpgm18.m1(Excpgm18.java:22)
	at Exception.Excpgm18.main(Excpgm18.java:13)

-----------------------------------

Que-9)

public class ExcepProgram09 
{
public static void main(String[] args) 
{
   System.out.println("main start"); 
   System.out.println(m1()); 
   System.out.println("main end");

}
static public int m1() 
{ 
try 
{
System.out.println("In try"); 
int a=10;
int b=0;
int result=a/b; 
return result;
}
catch(NumberFormatException e) 
{ 
 System.out.println("In catch"); return 20;
}
finally 
{
System.out.println("In finally"); 
int [] a=new int [-10];
return 10;
}
}

}
o/p:
main start
in try
in finally
NegativeArraysizeException

after debugging
-----------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	public static void main(String[] args) 
	{
		
		
		   System.out.println("main start"); 
		   System.out.println(m1()); 
		   System.out.println("main end");

		}
		static public int m1() 
		{ 
		try 
		{
		System.out.println("In try"); 
		int a=10;
		int b=0;
		int result=a/b; 
		return result;
		}
		catch(NumberFormatException e) 
		{ 
		 System.out.println("In catch"); return 20;
		}

		finally 
		{
		System.out.println("In finally"); 
		try {
		int [] a=new int [-10];
		}
		catch(NegativeArraySizeException e) {
			System.out.println("-ve");	
			}
		return 10;
		}
		
		}

		}
		
o/p:
main start
In try
In finally
-ve
10
main end
-------------------------------------
		

 Que-10)
public class ExcepProgram10 
{
public static void main(String[] args) 
{
   System.out.println("main start"); 
   System.out.println(m1(5)); 
   System.out.println("main end");
}
public static int m1(int a) 
{
while(a==5) 
{
   try 
   {
      return 10;
   }
   finally 
   { 
      break;
   }
}
  return 20;
}
}

o/p:
main start
20
main ended
------------------------------

Que-11)

public class ExcepProgram11
{
public static void main(String[] args) 
{ 
   System.out.println("main start"); 
   System.out.println(m1(5)); 
   System.out.println("main end");
}
public static int m1(int a) 
{
   while(a==5) 
   {
     try 
     {
        return 10;
     }
     finally 
     { 
     continue;
    } 
}
return 20;
}
}

o/p:
Error: Unable to initialize main class Exception.Excpgm18
Caused by: java.lang.VerifyError: Instruction type does not match stack map
Exception Details:
  Location:
    Exception/Excpgm18.m1(I)I @5: if_icmpeq
  Reason:
    Current frame's stack size doesn't match stackmap.
  Current Frame:
    bci: @5
    flags: { }
    locals: { integer }
    stack: { integer, integer }
  Stackmap Frame:
    bci: @5
    flags: { }
    locals: { integer }
    stack: { }
  Bytecode:
    0000000: a700 031a 089f 0000 1014 ac            
  Stackmap Table:
    same_frame(@3)
    same_frame(@5)

------------------------------------------------------

Que-12)

public class ExcepProgram12 
{
    public static void main(String[] args) 
    { 
       System.out.println("main start"); 
       System.out.println(m1(5)); 
       System.out.println("main end");
}
public static int m1(int a){
while(a++==5) 
{
try 
{
return 10;
}
finally 
{
continue;
}
}
return 20;
}
}


o/p:
main start
20
main end

pgm
---
public class ExcepProgram12 
{
    public static void main(String[] args) 
    { 
       System.out.println("main start"); 
       System.out.println(m1(5)); 
       System.out.println("main end");
}
 public static int m1(int a){
while(++a==5) 
{
try 
{
return 10;
}
finally 
{
continue;
}
}
return 20;
}
}
o/p:
main start
20
main end
-----------------------------------------------------

13) Find the output of the Program

class  ExceptionTest
{
	public static void main(String[] args) 
	{
	    Exception e1 = new ArithmeticException("Number is divided by zero");
		System.out.println(e1);

         Exception e2 = new ArrayIndexOutOfBoundsException("Array is out of limit");
		System.out.println(e2);

	}
}
o/p:

java.lang.ArithmeticException: Number is divided by zero
java.lang.ArrayIndexOutOfBoundsException: Array is out of limit

t0String of throwable
-------------------------
public String toString() {
        String s = getClass().getName();
        String message = getLocalizedMessage();
        return (message != null) ? (s + ": " + message) : s;
    }
---------------------------------------------------------

14) Find the output of the Program

public class a87 {
  public static void main(String[] argv) 
  {
    try 
    {
      throw new OutOfMemoryError();
      System.out.println("Success");
    }
    catch (Exception e) 
    {
      System.out.println("General exception");
    } 
    finally
    {
      System.out.println("Doing finally part");
    }
    System.out.println("Carrying on");

  }
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Unreachable code

	at Exception.a87.main(a87.java:14)

after debugging
--------------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	public static void main(String[] args) 
	{
		
		 try 
		    {
		      throw new OutOfMemoryError();
		      //System.out.println("Success");
		    }
		    catch (Exception e) 
		    {
		      System.out.println("General exception");
		    } 
		    finally
		    {
		      System.out.println("Doing finally part");
		    }
		    System.out.println("Carrying on");

			}
		}
o/p:
Doing finally part
Exception in thread "main" java.lang.OutOfMemoryError
	at Exception.Excpgm18.main(Excpgm18.java:13)

Note:OutOfMemoryError is not a child of Exception Class

----------------------------------

15) Find the output of the Program

public class a103 
{
      static String s = "";
      public static void main(String[] args) 
      {
            try 
            {
                 s += "1";
                 throw new Exception();
            } catch (Exception e) 
            {
                 s += "2";
            } 
            finally 
            { 
                  s += "3";
                  doStuff(); 
                  s += "4";
            }
            System.out.println(s);
       }
       static void doStuff() 
       { 
            int x = 0; 
            int y = 7/x; 
       }
}

o/p:
Exception in thread "main" java.lang.ArithmeticException: / by zero
	at Exception.Excpgm18.doStuff(Excpgm18.java:30)
	at Exception.Excpgm18.main(Excpgm18.java:22)

after debugging
---------------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	static String s = "";
    public static void main(String[] args) 
    {
          try 
          {
               s += "1";
               throw new Exception();
          } catch (Exception e) 
          {
               s += "2";
          } 
          finally 
          { 
                s += "3";
                doStuff(); 
                s += "4";
          }
          System.out.println(s);
     }
     static void doStuff() 
     { 
          int x = 0; 
          try {
        	  int y = 7/x;  
          }
          catch(ArithmeticException e) {
        	  System.out.println("ar");
          }
           
     }
		}
		
o/p:
ar
1234
--------------------------------------------------------------------

16) Find the output of the Program

 public class a105
{
      static String s = "-";
      public static void main(String[] args) 
      {
            try 
            {
                 throw new Exception();
            } 
            catch (Exception e) 
            {
                 try 
                 {
                      try 
                      {
                           throw new Exception();
                      } 
                      catch (Exception ex)
                      {
                           s += "ic ";
                      }
                      throw new Exception();
                  } 
                  catch (Exception x) 
                  {
                       s += "mc ";
                  } 
                  finally 
                  {
                       s += "mf ";
                  }
            } 
            finally 
            {
                  s += "of ";
            }
            System.out.println(s);
     }
}
o/p:
-ic mc mf of
-------------------------------------

17) Find the output of the Program

public class a110 
	{
    public static void main(String[] args) 
	{
        try {
            throw new java.io.IOException();
        } 
		catch (java.io.IOException exc) {
            System.err.println("In catch IOException: "+exc.getClass());
            throw new RuntimeException();
        }
		catch (Exception exc) {
            System.err.println("In catch Exception: "+exc.getClass());
        }
		finally {
            System.err.println("In finally");
        }
    }
}
o/p:
In catch IOException:class java.io.IOException
In finally
Exception in thread "main" java.lang.RuntimeException
	at Exception.Excpgm18.main(Excpgm18.java:16)

after debugging
---------------
package Exception;

import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	
    public static void main(String[] args) 
    {
    	try {
            throw new java.io.IOException();
        } 
		catch (java.io.IOException exc) {
            System.err.println("In catch IOException: "+exc.getClass());
            try {
            throw new RuntimeException();
            }
            catch (Exception ex) {
                System.err.println("In catch Exception: "+exc.getClass());
            }
        }
		
		finally {
            System.err.println("In finally");
        }
     }
		}
	
o/p:
In catch IOException: class java.io.IOException
In catch Exception: class java.io.IOException
In finally
---------------------------------------------

18) Find the output of the Program

import java.io.FileNotFoundException;
public class a60
{
       public static void main(String[] argv) throws Exception 
       {
             try 
             {
                    throw new FileNotFoundException("");
             } 
			 catch (FileNotFoundException ex) 
               {
                    System.out.println("book list not found!");
                    throw ex;
               }
       }
}
o/p:
book list not found!
Exception in thread "main" java.io.FileNotFoundException: 
	at Exception.Excpgm18.main(Excpgm18.java:14)
---------package Exception;

import java.io.FileNotFoundException;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Excpgm18 {

	public static void m1() throws FileNotFoundException {
		try 
        {
               throw new FileNotFoundException(" this is first message");
        } 
		 catch (FileNotFoundException ex) 
          {
			 System.out.println(ex.getMessage());
               //System.out.println("book list not found!");
               
               	throw new FileNotFoundException("this is second msg");
               
               	
               }
	}
	
    public static void main(String[] args) throws FileNotFoundException 
    {
    	
    	try {
    		m1();
    	}catch(Exception e) {
    		System.out.println(e.getMessage());
    	}
    	 
    }

           
     }
		
o/p:
this is first message
this is second msg

--------------------------------------------

19) Find the output of the Program

class InnerTry 
{
	public static void main(String[] args) 
	{
		try
		{
			String s=null;
			System.out.println(s.length());
		}
		catch (NullPointerException np)
		{
			System.out.println("Null Problem");
			try
			{
				String s="xyz";
				int no=Integer.parseInt(s);
				System.out.println(no);
			}
			catch (NumberFormatException nf)
			{
				System.out.println("Number Format Problem");
			}
		}
		System.out.println("Completed");
	}
}

o/p:
Null problem
NumberFormatException
completed

===========================================================================

1.What is the output of the following program
public class ExceptionHandling 
{
	static void nit(int marks) 
	{
		if(marks<0||marks>50)
		{
			throw new IllegalArgumentException(Integer.toString(marks));
		}
	}
	public static void main(String[] args) {
		nit(55);
	}
}

Answer: IllegalArgumentException(Integer.toString : 55
------------------------------------
2.What is the output of the following program
class InvalidPassword extends Exception
{
	InvalidPassword(String str) {
		super(str);
	}
}

public class ExceptionHandling 
{
	static void nit(String password) throws InvalidPassword
	{
		if(password.length()<5)
			throw new InvalidPassword("Invalid Password");
		else 
		{
			System.out.println("Valid Password");
		}
	}
	public static void main(String[] args) {
		try {
			nit("NareshIT");
		} catch (InvalidPassword e) {
			System.out.println("Exception "+e);
		}
		
	}
}
Answer: Valid Password
--------------------------------------------------------

3.What is the output of the following program
public class ExceptionHandling {
	public static void main (String[] args) {
		int a=20;
		for(int i=0;i<a;i++)
		   try{
		     System.out.println(a/i);  
		   }
	}
}
Answer: Compile time error
----------------------------------------------

4.What is the output of the following program
class Age extends Exception
{
	Age(String str) {
		super(str);
	}
}
public class ExceptionHandling 
{
	static void nit(int age) throws Age
	{
		if(age<18)
			throw new Age("Not for Vote");
		else 
		{
			System.out.println("Vote");
		}
	}
	public static void main(String[] args) {
		try {
			nit(15);
		} catch (Age e) {
			System.out.println("Exception "+e);
		}		
	}
}
Answer: Exception : Not for Vote
-----------------------------------------

5.What is the output of the following program
class Age extends Exception
{
	
}

public class ExceptionHandling 
{
	public static void main(String[] args) {
		try {
			throw new Age();
		} catch (Age e) {
			System.out.println("Exception "+e.getMessage());
		}
		
	}
}
Answer: Exception null
--------------------------------------------

6.What is the output of the following program
class Age extends Exception
{
	Age(String str) {
		super(str);
	}
}
public class ExceptionHandling 
{
	static void nit(int age) throws Age
	{
		if(age<18)
			throw new Age("Not for Vote");
		else 
		{
			System.out.println("Vote");
		}
	}
	public static void main(String[] args) {
		try {
			nit(19);
		} catch (Age e) {
			System.out.println("Exception "+e);
		}finally {
			System.out.println("Vote count");
		}
	}
}
Answer: 
Vote
Vote count
----------------------------------------------

7.What is the output of the following program
class Student{    
	void message()throws ArithmeticException {  //line 1
		System.out.println("Hai Student");  
		}    
	}    
class Faculty extends Student{    
	void message()throws Exception {  // line 2
		System.out.println("hai faculty");  
		}
}
public class ExceptionHandling 
{
	public static void main(String args[]) {    
	   Student nit = new Faculty();    
	     
	   try {    
	   nit.message();    
	   }  
	   catch (Exception e){}   
	  
	  }    
}     
Answer: Exception is not compatible with throws clause in Student.message() at line 2
----------------------------------------------------------------------------------------

8.What is the output of the following program
class Student{    
	void message(){  // line 1
		System.out.println("Hai Student");  
		}    
	}    
	    
class Faculty extends Student{    
	void message()throws Exception {  // line 2
		System.out.println("hai faculty");  
		}
}

public class ExceptionHandling 
{
	public static void main(String args[]) {    
	   Student nit = new Faculty();    
	     
	   try {    
	   nit.message();    
	   }  
	   catch (Exception e){}   
	  
	  }    
}
Answer: Exception is not compatible with throws clause in Student.message() at line 2
--------------------------------------------------------------------------------------------

9.What is the output of the following program
class Student{    
	void message(){  //line 1
		System.out.println("Hai Student");  
		}    
	}    
	    
class Faculty extends Student{    
	void message()throws ArithmeticException {  // line 2
		System.out.println("hai faculty");  
		}
}
public class ExceptionHandling 
{
	public static void main(String args[]) {    
	   Student nit = new Faculty();    
	     
	   try {    
	   nit.message();    
	   }  
	   catch (Exception e){
}   
	 
	  }    
}
Answer: hai faculty
---------------------------------------------------

10.What is the output of the following program
class Student{    
	void message() throws Exception{  // line 1
		System.out.println("Hai Student");  
		}    
	}    
class Faculty extends Student{    
	void message()throws Exception {  // line 2
		System.out.println("hai faculty");  
		}
}

public class ExceptionHandling 
{
	public static void main(String args[]) {    
	   Student nit = new Faculty();    
	     
	   try {    
	   nit.message();    
	   }  
	   catch (Exception e){}   
	  
	  }    
}
Answer: hai faculty
---------------------------------------------------

11.What is the output of the following program
class Student{    
	void message() throws Exception{  // line 1
		System.out.println("Hai Student");  
		}    
	}    
	    
class Faculty extends Student{    
	void message() {  // line 2
		System.out.println("hai faculty");  
		}
}

public class ExceptionHandling 
{
	public static void main(String args[]) {    
	   Student nit = new Faculty();    
	     
	   try {    
	   nit.message();    
	   }  
	   catch (Exception e){}   
	  
	  }    
}
Answer: hai faculty
----------------------------------------------------

12.What is the output of the following program
public class ExceptionHandling  {  
    public static void main(String args[])  
    {           
        try {  
            try {  
                try {  
                    int arr[] = { 5,7,89,7,54,22,35,144,587,4,25,33,698,541,2,44,5,74,4 };  
                    System.out.println(arr[35]);  
                } catch (ArithmeticException e) {  
                    System.out.println("Arithmetic exception");  
                }  
            }catch (ArrayIndexOutOfBoundsException ar) {  
                System.out.println(" ArrayIndexOutOfBoundsException ");  
            }  
        }  
        catch (Exception e) {  
            System.out.print("Exception");  
        }  
    }  
}  
Answer: ArrayIndexOutOfBoundsException
------------------------------------------------------------------------

13.What is the output of the following program
public class ExceptionHandling  {
	void nit()  
	{
		throw new java.io.IOException();
	}
	public static void main(String[] args) {
		ExceptionHandling nit = new ExceptionHandling();
		nit.nit();
		System.out.println("Executed");
	}
}
Answer: Compile time error at IOException in nit() method
--------------------------------------------------------------------

14.What is the output of the following program
class NIT
{
	static void nit() throws IOException  
	{
		throw new IOException("IOException");
	}
}
public class ExceptionHandling  {
	
	public static void main(String[] args) {
		try {
			NIT.nit();
		} catch (IOException e) {
			System.out.println("Exception in catch");
		}
		System.out.println("Executed");
	}
}
Answer: 
Exception in catch
Executed
----------------------------------------------------

15.What is the output of the following program
class NIT
{
	static void nit() throws IOException  
	{
		throw new IOException("Input Output Exception");
	}
}

public class ExceptionHandling  {
	public static void main(String[] args) throws IOException {		
			NIT.nit();
	}
} 
Answer: 
java.io.IOException: Input Output Exception
-------------------------------------------------------

16. What is the output of the following program
public class ExceptionHandling {
	static void nit(int a,int b) {
		   System.out.println(10/a); 
		   int[] arr={25,54,22,141,22,141,22,35};
		   System.out.println(arr[b]);
	}
	public static void main (String[] args) {
		try{
			nit(10, 0);
			nit(10, 15);
		    		    
    		}catch(ArithmeticException e){
    		   System.out.println("can't divide by zero");
    		}catch(ArrayIndexOutOfBoundsException e){
    		   System.out.println("Out of bounds!");
    		}
		}
   }
Answer: 
1
25
1
Out of bounds!
-----------------------------------------------

17.What is the output of the following program
public class ExceptionHandling
{
        public static void main(String[] args)
        {
                try
                {
                        Exception arithmetic = new Exception("Exception");
                        arithmetic.initCause(new ArithmeticException("ArithmeticException"));
                        throw arithmetic;
                }
                catch (Exception e)
                {
                        System.out.println(e.getCause());
                }
                try
                {
                        NumberFormatException numberFormat = new NumberFormatException("NumberFormatException");
                        numberFormat.initCause(new NullPointerException("NullPointerException"));
                        throw numberFormat;
                }
                catch(NumberFormatException numberFormat)
                {
                        System.out.println(numberFormat.getCause());
                }
        }
}
Answer:
java.lang.ArithmeticException: ArithmeticException
java.lang.NullPointerException: NullPointerException
----------------------------------------------------------------------------------------


18.What is the output of the following program
public class ExceptionHandling
{
	static void nit1() throws ArithmeticException
	{
		System.out.println("nit1");
		throw new ArithmeticException("Throws ArithmeticException nit1");
	}
    static void nit2() throws NullPointerException
    {
    	System.out.println ("nit2");
        throw new NullPointerException ("Throws NullPointerException nit2");
     }
     public static void main(String args[])
     {
    	 try
         {
    		 nit2();
         }
         catch (NullPointerException npe)
         {
        	 System.out.println (npe);
         }
         try
         {
        	 nit1();
         }
         catch(ArithmeticException ae)
         {
        	 System.out.println(ae);
         }
     }
}
Answer:
nit2
java.lang.NullPointerException: Throws NullPointerException nit2
nit1
java.lang.ArithmeticException: Throws ArithmeticException nit1
=============================================================================
_______________  Set A ____________________

Ques - 1)
Create a class named NumericParser with a method parseAndPrint(String input).

Inside the parseAndPrint method:

* Print the length of the passed String.
* Parse the String to an integer and print the parsed integer.
* If the passed String is null, throw a NullPointerException with an appropriate error message.

Create another class named Main with the main method:

Instantiate the NumericParser class.
Demonstrate the usage of NumericParser by calling the parseAndPrint method with the following scenarios:
A non-null string containing alphanumeric characters.
A non-null string containing non-numeric characters (to trigger NumberFormatException).
A null string (to trigger NullPointerException).
Handle the exceptions at the time of calling parseAndPrint and print informative messages in case of errors.


Ques - 2)
TemperatureExceededException:

This exception class extends the Exception class, indicating that it is a checked exception.
It provides a constructor that accepts a message string, which is passed to the superclass constructor using super(message).

LowFuelException:
Similar to TemperatureExceededException, this exception class extends the Exception class.
It also provides a constructor accepting a message string and passes it to the superclass constructor.

Car class:

This class represents a simple model of a car with attributes for temperature(int) and fuel level(int).
The constructor initializes the temperature and fuel level of the car.
It provides methods for driving (distance) and setting the temperature (setTemperature), both of which may throw custom exceptions.

-> driving method:
This method simulates driving the car by subtracting the distance traveled from the fuel level.If the substraction result is greater than 0 then print a message like (e.g Car successfully driven for 20 units of distance.)

It throws a LowFuelException if the fuel level becomes insufficient for the distance to be traveled when the substraction result is less than 0 by providing appropriate message.

-> setTemperature method:
This method allows setting the temperature of the car. If the temperature is below 100 then 
print a message (e.g Temperature successfully set to 90 degrees.)
It throws a TemperatureExceededException by providing appropriate message. If the  temperature exceeds a safe limit (in this case, 100 degrees).

Main Class:

The Main class should contain the logic to create an instance of the Car class, perform driving operations, and set the temperature.
Utilize try-catch blocks to handle potential exceptions that may occur during driving or temperature setting operations.
Provide both inputs that lead to normal behavior (no exceptions raised) and inputs that trigger the custom exceptions defined in the Car class.


_______________  Set B ____________________

Ques - 1)
Develop a Java class named AdvancedCalculator with a method performCalculation(String input). In this method:
* Print the length of the passed String.
* If the passed String is null then raise NullPointerException.
* Parse the given String into Integer and devide it with a number.
* If the number is 0 then raise ArithmeticException.

In the Main class:

Instantiate the AdvancedCalculator class.
Call performCalculation method by passing different inputs and Catch any NumberFormatException during parsing and print an informative message.
Handle ArithmeticException , NullPointerException and print an appropriate error message.
-----------------
package Exception;

import java.util.Scanner;

public class AdvancedCalculator19 {
public static void performCalculation(String input) {
	System.out.println(input.length());
	if(input==null) {
		try {
		throw new NullPointerException();
		}
		catch(NullPointerException e) {
			System.out.println("NullPointerException");
		}
	}
	else {
		System.out.println(input);
	}
	try {
	int x=Integer.parseInt(input);
	int res=x/0;
	}
	catch(NumberFormatException e) {
		System.out.println("NumberFormatException");
	}
	catch(ArithmeticException e) {
		e.printStackTrace();
		//System.out.println("divide by zero");
	}
}
public static void main(String[] args){
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter the String");
	String str=sc.nextLine();
	performCalculation(str);
}
}
------------------------------
Ques - 2)
Custom Exception

InsufficientQuantityException:
Extends RuntimeException to indicate an exceptional condition regarding insufficient quantity during order processing.
Provides a constructor that accepts a message string and passes it to the superclass constructor using super(message).

InvalidAmountException:
Extends Exception to indicate an exceptional condition regarding an invalid payment amount during order processing.
Provides a constructor that accepts a message string and passes it to the superclass constructor using super(message).

Product Class:
The Product class represents a product with the following attributes:
name: Represents the name of the product.
availableQuantity: Represents the available quantity of the product.
price: Represents the price of the product.

The class provides a constructor to initialize the product with the specified attributes.

Develop a method processOrder(int quantity, double amount) method to include the following condition:
Check if the payment amount matches the total price calculated based on the ordered quantity and the product price.
If the payment amount does not match the total price, throw an InvalidAmountException with an appropriate message.
If the payment amount matches, proceed with order processing and update the available quantity accordingly.

If the ordered quantity is more than the available quantity, throw an InsufficientQuantityException with an appropriate message.

If the quantity is available, proceed the order and print some message.(e.g Order placed for 5 units of laptop. Remaining quantity: 5)

Main Class:
Demonstrates the usage of the Product class by creating an instance (laptop) and placing orders by passing diffferent inputs.

Utilizes try-catch blocks to catch potential exceptions thrown during order processing.
Specifically catches InsufficientQuantityException, InvalidAmountException, InvalidAmountException.

Product20.java
----------------
package Exception;

public class Product20 {
String name;
int quantity;
double price;

public Product20(String name, int quantity, int amt) {
	super();
	this.name = name;
	this.quantity = quantity;
	this.price = price;
}

public void processOrder(int orderedQuantity,double paymentAmt)  {
	//double totAmt=orderedQuantity*price;
	double totAmt=600;
	System.out.println(totAmt);
	if(totAmt==paymentAmt) {
		if(orderedQuantity>quantity) {
			try {
				throw new InsufficientQuantityException20("InsufficientQuantityException");
			}
			catch(InsufficientQuantityException20 e) {
				System.out.println(e.getMessage());
			}
		}
		else {
			System.out.println("order is placed for"+orderedQuantity+"orders");
		}
	}
	
	else {
		try {
		throw new InvalidAmountException20("InvalidAmountException");
		}
		catch(InvalidAmountException20 e) {
			System.out.println(e.getMessage());
		}
	}
	}
}

InvalidAmountException20.java
------------------------------
package Exception;

public class InvalidAmountException20 extends Exception{
public InvalidAmountException20(String s) {
	super(s);
}
}

InsufficientQuantityException20.java
-------------------------------
package Exception;

public class InsufficientQuantityException20 extends RuntimeException{
public InsufficientQuantityException20() {
	
}
public InsufficientQuantityException20(String s) {
	super(s);
}
}

Main20.java
----------
package Exception;

public class Main20 {

	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		Product20 s=new Product20("ravali", 5, 100);
		s.processOrder(5,500);
		
	}

}

_______________  Set C ____________________

Ques - 1)
You are tasked with designing a Java program that analyzes a given string according to specific criteria. This program should be encapsulated within a class named DataAnalyzer. The DataAnalyzer class should contain a method named analyzeData(String data) which performs the following operations:

Print Length: Print the length of the provided string data.

Numeric Value conversion: Convert numeric values from the String data into Integer and print it. These numeric values can be interspersed within the String with non-numeric characters.

Exception Handling:
Handle NumberFormatException during the parsing of numeric values. If parsing fails for any numeric value, print an appropriate error message indicating the failure.
Throw ArithmeticException if the numeric values exceeds a predefined threshold (e.g., 1000). If the data exceeds the threshold, provide a message indicating the issue.


In the Main class : 

Instantiate DataAnalyzer and call analyzeData method by Passing following inputs 
* The input String data can contain alphanumeric characters, spaces, and special characters to cause NumberFormatException.
* The input String data can contain only numeric characters more than 1000 to cause ArithmeticException.Numeric values are considered to be integers .
* The input String data can contain only numeric character less than 1000 for normal execution.

Handle the ArithmeticException with some appropriate message while calling the method.
-------------------------------

package Exception;

public class DataAnalyzer21 {
	public static void analyzeData(String data) {
		System.out.println(data.length());
		try {
		int x=Integer.parseInt(data);
		if(x>1000) {
			try {
		int res=x/0;
			}
			catch(ArithmeticException e) {
			System.out.println("ArithmeticException");	
			}
		}
		else {
			System.out.println("character less than 1000 ");
		}
		}
		catch(NumberFormatException e) {
			System.out.println("NumberFormatException");
		}
		
	}
}


DataAnalyzer_21.java
---------------------
package Exception;

public class DataAnalyzer_21 {

	public static void main(String[] args) {
		DataAnalyzer21.analyzeData("abc@_5");
		DataAnalyzer21.analyzeData("2000");
		DataAnalyzer21.analyzeData("500");
	}

}

====================================================================

Ques - 2)
The provided code consists of a class SBIATM, which models an ATM machine for the State Bank of India (SBI), along with two custom exceptions (InvalidAccountNumberException and InvalidBankNameException) to handle exceptional conditions related to the account number and bank name. Additionally, a Main class demonstrates the usage of the SBIATM class by creating an instance and performing operations such as withdrawal and balance inquiry.

Custom Exception Classes:

InvalidAccountNumberException: Extends Exception and handles situations where the account number length is not 12 digits.

InvalidBankNameException: Extends RuntimeException and handles situations where the bank name is not "sbi" (case-insensitive).


SBIATM Class:
Create a class SBIATM for the State Bank of India.
Take three Instance Variable:
String accountNumber, String bankName, double balance

Constructor: Initializes the SBIATM with a valid account number and bank name, throwing exceptions if the provided account number or bank name is invalid.(accountNumber must be 12 digit and Check if the bank name is "sbi" (case-insensitive).

withdrawal Method: Allows withdrawing funds from the ATM, throwing exceptions if the withdrawal amount is non-positive or exceeds the available balance with IllegalArgumentException.

checkBalance Method: Retrieves the current balance of the ATM.

Private Helper Methods (accountNumberChecker and bankNameChecker): 
accountNumberChecker :
The account number must have exactly 12 digits.If not then throw InvalidAccountNumberException
with appropriate message.

bankNameChecker:
The bank name must be "sbi" (case-insensitive).
Only the bank name "sbi" is supported, If not then throw InvalidBankNameException with appropriate message.

Main Class:

Demonstrates the usage of the SBIATM class by creating an instance and performing operations.
Utilizes try-catch blocks to catch potential exceptions thrown during ATM operations.
-------------------------------
package Exception;

public class Main27 {

	public static void main(String[] args) throws InvalidAccountNumberException27 {
		SBIATM27 s=new SBIATM27("45746783748","Sbi",8000);
		s.accountNumberChecker("45746783748");
		s.bankNameChecker("atm");
		double totBal=s.withdrawl(5000,1000);
		s.checkBalance(totBal);
	}

}
----------------
package Exception;

public class SBIATM27 {
String accountNumber;
String bankName;
double balance;
public SBIATM27(String accountNumber,String bankName,double balance) {
	this.accountNumber=accountNumber;
	this.bankName=bankName;
	this.balance=balance;
}
public static double withdrawl(double balance,double amt) {
	if(amt<=0||amt>balance)
		throw new IllegalArgumentException("non-positive or exceeds the available balance ");
	else
		return balance-amt;
}
public  void checkBalance(double bal) {
	System.out.println(bal);
}
public  void accountNumberChecker(String accountNumber)throws InvalidAccountNumberException27 {
	if(accountNumber.length()!=12) 
		throw new InvalidAccountNumberException27("Invalid Account Number");
}
public  void bankNameChecker(String bankName) {
	if(bankName!="sbi")
		throw new InvalidBankNameException27("Invalid Bank Name");	
}
}
----------------
package Exception;

public class InvalidBankNameException27 extends RuntimeException{
public InvalidBankNameException27(String s) {
	super(s);
}
}
----------------------
package Exception;

public class InvalidAccountNumberException27 extends Exception{
public InvalidAccountNumberException27(String s) {
	super(s);
}
}

===============================================================================================

Program 01 :
------------
We have Two class named as Test and Handling
For Handling class
Instance Variables:
No Instance Variables
Methods:
nit(int) : void : static
nit1(int) : void: static

For method nit(int):
In try block print ‘Naresh’ and call nit1(int) method pass same parameter as nit(int) method then after print ‘I’.

In catch block need to pass Exception as a parameter print the message.

For method nit1(int):
nit1() method must throws the Exception

In try block need to check arithmetic operation (division), any value divided by parameter value then print ‘Completed’ 

For example pass the value is zero from parameter it throws ArithmeticException so we need to catch or throw the customize exception
For example parameter value is 10 it throw the Exception
Catch Block
We need to catch ArithmeticException to print message
Finally block
In this print ‘Finally’ message

For Test class
This class is given to you with a main method
Use this class to test your solution's classes and methods
Need to check the test cases like 0, 1, 10, 15 as input and write the output

Handling22.java
--------------
package Exception;

public class Handling22 {
public  static void nit(int a) {
	try {
		System.out.println("Naresh");
		nit1(a);
		System.out.println("I");
	}
	catch(Exception e) {
		System.out.println(e.getMessage());
	}
}
public  static void nit1(int b) {
	try {
	System.out.println(10/b);
        System.out.println("completed");
	}
	catch(ArithmeticException e) {
		System.out.println("ArithemeticException");
	}
	finally {
		System.out.println("finally");
	}
}
}

Test22.java
------------
package Exception;

public class Test22 {

	public static void main(String[] args) {
		Handling22.nit(0);
		System.out.println("------");
		Handling22.nit(1);
		System.out.println("------");
		Handling22.nit(10);
		System.out.println("------");
		Handling22.nit(15);
	}

}


Program 02 :
------------
We have Four classes named as CarStopped, CarPuncture, CarHeat and CarTest
For CarStooped: extends Exception
This class is used for raise the exception if any reason except puncture and heat the car 
Instance Methods:
No Instance methods
Methods:
Parameterized Construstor with String as parameter
For CarPuncture: extends Exception
This class is used for raise the exception if car is punctured
Instance Methods:
No Instance methods
Methods:
Parameterized Construstor with String as parameter
Parameterized Construstor with String as parameter
For CarHeat: extends Exception
This class is used for raise the exception if the car engine is more than 50 degrees celcious
Instance Methods:
No Instance methods
Methods:
Parameterized Construstor with String as parameter
For  CarTest class
Instance Variables:
No Instance Variables
Methods:
Stop(String): void: static
This class throws CarStopped. If the string is “stop” throw new exception and get the message or else message is Car not stall
For  CarPuncture class
Instance Variables:
No Instance Variables
Methods:
puncture(String): void: static
This class throws CarPuncture. If the string is “puncture” throw new exception and get the message line “Car is Punchred” or else message is Car not stall.
For  CarPuncture class
Instance Variables:
No Instance Variables
Methods:
carHeat(int): void: static
This class throws CarHeat. If the car heat is more than 50 degrees calicoes it throw new exception and get the message line “Car is heated more the 50 degrees” or else message is Car not stall.
This class is given to you with a main method
Use this class to test your solution's classes and methods

CarStooped23.java
-------------------
package Exception;

public class CarStooped23 extends Exception{
public CarStooped23(String str) {
	super(str);
}
}

CarHeat23.java
---------------
package Exception;

public class CarHeat23 extends Exception{
public CarHeat23() {
	super();
}
}

CarTest23.java
--------------
package Exception;

public class CarTest23 {
public static void stop(String s) throws CarStooped23{
	if(s=="stop") {
		throw new CarStooped23("car is stoped");
	}
	else {
		System.out.println("car not stall");
	}
}
}


CarPuncture23.java
--------------------
package Exception;

public class CarPuncture23 extends Exception{
public CarPuncture23(String str) {
	super(str);
}
public static void puncture(String s) throws CarPuncture23 {
	if(s=="puncture") {
		
			throw new CarPuncture23("Car is punctured");
		
	}else {
		System.out.println("Car not Stall");
	}
}
public static void carHeat(int a) throws CarHeat23 {
	if(a>50) {
		throw new CarHeat23();
	}
		else{
			System.out.println("Car not Stall");
		}
	}
public static void main(String[] args) throws CarPuncture23, CarHeat23, CarStooped23 {
	CarPuncture23.puncture("punctured");
	CarPuncture23.carHeat(50);
	CarTest23.stop("stop");
}
}

==========================================================================================================

1) Write a program to create user-defined un-checked exception which will accept an aadhar Number from the user String, if the aadhar Number length is not equal to 12 then throw the user-defined exception that is InvalidAadharException with proper message.

AdharCardValidation24.java
---------------------------
package Exception;

import java.util.Scanner;

public class AdharCardValidation24 {

	public static void main(String[] args)  {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the Adharcard number:");
        String aadharNo=sc.next();
		if(aadharNo.length()==12) 
			System.out.println("valid aadhar number  "+aadharNo);
		else
			throw new InvalidAadharException24("Invalid aadhar number");
	}

}
---------------------

InvalidAadharException24.java
--------------------------
package Exception;

public class InvalidAadharException24 extends RuntimeException{
public InvalidAadharException24(String s) {
	super(s);
}
}
==============================================================

2) Write a program to create user-defined checked exception which will accept only vowels character from the user, if the character is not vowel then it should throw InvalidCharacerException with proper message.


VowelOrNot25.java
-----------------
package Exception;

import java.util.Scanner;

public class VowelOrNot25 {

	public static void main(String[] args) throws InvalidCharacerException25 {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the character:");
		char ch=sc.next().charAt(0);
		if(ch=='A'||ch=='E'||ch=='I'||ch=='O'||ch=='U')
		ch+=32;
		if(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u') 
			System.out.println("given charcter is a vowel "+ch);
		else
			throw new InvalidCharacerException25("Characer is not a vowel");
	}

}
---------------------

InvalidCharacerException25.java
------------------------------
package Exception;

public class InvalidCharacerException25 extends Exception{
	public InvalidCharacerException25(String s) {
   super(s);
	}
}

==========================================================
3) Write a program to create user-defined checked exception which will accept balance from the user, if the balance is not sufficient to withdraw the amount then it should throw LowBalanceException with proper message.

WithdrawAmount26.java
---------------------
package Exception;

import java.util.Scanner;

public class WithdrawAmount26 {
public static void main(String []args)throws  LowBalanceException26{
	Scanner sc=new Scanner(System.in);
	System.out.println("enter the balance:");
	int bal=sc.nextInt();
	System.out.println("enter the amount to withdraw:");
	int amount=sc.nextInt();
	if(bal>=amount) 
	System.out.println("withdraw is successful and balace is:"+(bal-amount));
	else
		throw new LowBalanceException26("Insufficient balance");
}
}
----------------------------------
LowBalanceException26.java
-------------------------
package Exception;

public class LowBalanceException26 extends Exception{
public LowBalanceException26(String s) {
	super(s);
}
}
===========================================================================================

1.Choose the correct output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("/");
		System.out.println(file.canRead());
		System.out.println(file.canExecute());
	}
}
A.	false true
B.	true false
C.	true true
D.	fasle false
Answer: C

doubt:


-----------------------------------------------
2.Choose the correct output of the following code
public class FilesAndIO {
	public static void main(String[] args)
	{
		File file = new File("\");
		System.out.println(file.canRead());
		System.out.println(file.canExecute());
	}
}
A.	false true
B.	Compile time error
C.	run time error
D.	fasle false
Answer: B
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	String literal is not properly closed by a double-quote

	at com.FileHandling.FileandIO8.main(FileandIO8.java:8)
-------------------------------------------------------------------------

3.Choose the correct output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\No Class.txt");
		System.out.println(file.isFile());
	}
}
A.	true
B.	false
C.	compile time error
D.	Run time error
Answer: A
-------------------------------------------------------

4.What is the output of the following program
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:/Users/nit/Desktop\No Class.txt");
		System.out.println(file.isFile());
	}
}
A.	true
B.	false
C.	compile time error
D.	Run time error
Answer: C

Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Invalid escape sequence (valid ones are  \b  \t  \n  \f  \r  \"  \'  \\ )

	at com.FileHandling.FileandIO8.main(FileandIO8.java:8)

--------------------------------------------------------

5.Choose the correct output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\Users\nit\Desktop\No Class.txt");
		System.out.println(file.getAbsolutePath());
	}
}
A.	false
B.	compile time error
C.	Run time error
D.	true
Answer: B
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Invalid escape sequence (valid ones are  \b  \t  \n  \f  \r  \"  \'  \\ )

	at com.FileHandling.FileandIO8.main(FileandIO8.java:8)

--------------------------------------------------------------
6.What is the output of the following program
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\hai.txt");
		System.out.println(file.getAbsolutePath());
	}
}
A.	C:\\Users\\nit\\Desktop\\hai.txt
B.	C:/Users/nit/Desktop/hai.txt
C.	C://Users//nit//Desktop//hai.txt
D.	C:\Users\nit\Desktop\hai.txt
Answer: D
---------------------------------------------

7.What is the output of the following program
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\hai.txt");
		System.out.println(file.getName());
	}
}
A.	hai.txt
B.	C:\\Users\\nit\\Desktop\\hai.txt
C.	true
D.	false
Answer: A
------------------------------------------------------

8.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) throws AccessException {
		File file = new File("hai.txt");
		boolean result = file.createNewFile();
		System.out.println(result);
	}
}
A.	Run time exception
B.	Compile time exception
C.	true
D.	false
Answer: B

Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Unhandled exception type IOException

	at com.FileHandling.FileandIO8.main(FileandIO8.java:11)



-------------------------------------------------------
9.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args)throws IOException  
	{
		File file = new File("hai.txt");
		boolean result = file.createNewFile();
		System.out.println(result);
	}
}
A.	Run time exception
B.	Compile time exception
C.	true
D.	false
Answer: C
---------------------------------------------------------
10.What is the correct statement for exists() method in the following code
public class FilesAndIO {
	public static void main(String[] args)  
	{
		File file = new File("hai.txt");
		boolean result = file.exists();
		System.out.println(result);
		
	}
}
A.	If the file or directory is available in system it return true and donated by this interface pathname exists
B.	If the file or directory is available in system it return true and donated by this abstract pathname exists
C.	If the file or directory is available in system it return false and donated by this abstract pathname exists
D.	If the file or directory is available in system it return false and donated by this interface pathname exists
Answer: B
------------------------------------------------------------------------------
11.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args)
	{
		File file = new File("/hai.txt");
		boolean result = file.exists();
		System.out.println(result);	
	}
}
A.	true
B.	compile time error
C.	hai.txt
D.	false
Answer: D
---------------------------------------------------
12.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args)
	{
		File file = new File("hai.txt");
		boolean result = file.exists();
		System.out.println(result);
	}
}
A.	true
B.	compile time error
C.	hai.txt
D.	false
Answer: A
----------------------------------------------------------
13.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\hai.txt");
		System.out.println(file.getParent());
	}
}
A.	C:\\Users\\nit\\Desktop\\hai.txt
B.	C:\\Users\\nit\\Desktop\\
C.	C:\Users\nit\Desktop
D.	C:/Users/nit/Desktop/
E.	C:\Users\nit\Desktop\
Answer: C
---------------------------------------------------------------------------
14.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("\\");
		System.out.println(file.getParent());
	}
}
A.	Compile time error
B.	Run time error
C.	null
D.	None of the above
Answer: C
--------------------------------------------
15.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\hai.txt");
		System.out.println(file.getPath());
	}
}
A.	C:\\Users\\nit\\Desktop\\hai.txt
B.	C:\\Users\\nit\\Desktop\\
C.	C:\Users\nit\Desktop
D.	C:/Users/nit/Desktop/
E.	C:\Users\nit\Desktop\hai.txt
Answer: E
-------------------------------------------
16.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		File file = new File("C:\\Users\\nit\\Desktop\\hai.txt");
		System.out.println(file.getParentFile());
	}
}
A.	C:\\Users\\nit\\Desktop\\hai.txt
B.	C:\\Users\\nit\\Desktop\\
C.	C:/Users/nit/Desktop/
D.	C:\Users\nit\Desktop
E.	C:\Users\nit\Desktop\
Answer: D
--------------------------------------------------
17.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		int i = System.in.read();
		System.out.println(i);
	}
}
A.	It return first ascii value
B.	Compile time error
C.	It return last ascii value
D.	Run time error
Answer: A
-----------------------------------------------
18.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		
		OutputStream out = new OutputStream() {
			
			@Override
			public void write(int b) throws IOException {
				System.out.println(b);
			}
		};
		out.write('a');
	}
}
A.	98
B.	97
C.	65
D.	71
Answer: B
-------------------------------------------
19.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) throws FileAlreadyExistsException {
		FileOutputStream file = new FileOutputStream("\\hai.txt");
		System.out.println(file.getFD);
	}
}
A.	hai.txt
B.	java.io.FileDescriptor
C.	Compile time error
D.	No output
Answer: C
------------------------------------------------------------
20.What is the output of the following snippet
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		FileOutputStream file = new FileOutputStream("\\hai.txt");
		System.out.println(file.getFD());
	}
}
A.	hai.txt
B.	java.io.FileDescriptor
C.	Compile time error
D.	No output
Answer: B
========================================================================

1.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		OutputStream file = new FileOutputStream("\\hai.txt");
		System.out.println(file.getClass());
	}
}
Answer: class java.io.FileOutputStream
----------------------------------------------------------------
2.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		InputStream file = new FileInputStream("\\hai.txt");
		System.out.println(file.getClass());
	}
}
Answer: class java.io. FileInputStream
---------------------------------------------------
3.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) throws FileNotFoundException {
		String str = "Welcome to NareshIT";
		FileOutputStream file = new FileOutputStream("/google.txt");
		byte[] by = str.getBytes();
		file.write(by);
		file.close();
		System.out.println("Completed");
	}
}
Answer: Compile time error because FileNotFoundException only for FileOutputStream not for write() and close().
for write() and read() which throws IOException
----------------------------------------------------
4.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) throws IOException  {
		String str = "Welcome to NareshIT";
		FileOutputStream file = new FileOutputStream("/google.txt");
		byte[] by = str.getBytes();
		file.write(by);
		file.close();
		System.out.println("Completed");
	}
}
Answer: Completed
-----------------------------------------------------------

5.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		String str = "Welcome to NareshIT";
		try {
			FileOutputStream file = new FileOutputStream("/google.txt");
			byte[] by = str.getBytes();
			file.write(by);
			file.close();
			System.out.println("Completed");
		}catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}
}
Answer: Completed
------------------------------------------------------------
6.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		try {
			String str = "Welcome to NareshIT";
			FileOutputStream fileOut = new FileOutputStream("D:\\hai.txt");
			byte[] by = str.getBytes();
			fileOut.write(by);
			fileOut.close();
			FileInputStream fileIn = new FileInputStream("D:\\hai.txt");
			System.out.println(fileIn.read());
			fileIn.close();
		}catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}
}
Answer: 87
-------------------------------------------------------------
7.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		try {
			String str = "Welcome to NareshIT";
			FileOutputStream fileOut = new FileOutputStream("D:\\hai.txt");
			byte[] by = str.getBytes();
			fileOut.write(by);
			fileOut.close();
			FileInputStream fileIn = new FileInputStream("D:\\hai.txt");
			int i = fileIn.read();
			System.out.println((char)i);
			fileIn.close();
		}catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}
}
Answer: W

package com.FileHandling;

import java.io.BufferedInputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;

public class FileandIO8 {

	public static void main(String[] args)  {
		
		try {
		String str = "Welcome";
		FileOutputStream fileOut = new FileOutputStream("C:/javalabpgms//File1.txt");
		byte[] by = str.getBytes();
		fileOut.write(by);
		//fileOut.close();
		FileInputStream fileIn = new FileInputStream("C:/javalabpgms//File1.txt");
		
		int i=0;
		while(true) {
			i=fileIn.read();
		if(i==-1) 
			break;
		System.out.print((char)i);
		
		}
		}
	catch (FileNotFoundException e) {
		System.out.println(e.getMessage());
	}catch (IOException e) {
		System.out.println(e.getMessage());
	}
	}
}



---------------------------------------------------------------------------------
8.What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		BufferedOutputStream buffer = new BufferedOutputStream(new FileOutputStream("D:\\hai.txt"));
		String str = "Welcome to NareshIT";
		buffer.write(str.getBytes());
		buffer.close();
		System.out.println("Completed");
	}
}
Answer: Completed
----------------------------------------------------------
9.Which data stored into hai.txt file
public class FilesAndIO
{
    public static void main(String args[])throws IOException
    {
        FileOutputStream fileOut = new FileOutputStream("D:\\hai.txt");
          
        BufferedOutputStream bufferOut = new BufferedOutputStream(fileOut);
  
        for(int i = 70; i < 80; i++)
        {
            bufferOut.write(i);
        }
        bufferOut.flush();
        bufferOut.close();
        fileOut.close();
        System.out.println("Completed");
    }
}
Answer: Ascii values 
FGHIJKLMNO
-------------------------------------------------------------------
10.Write the output of the following code if empty file available in system
public class FilesAndIO {
	public static void main(String[] args) throws IOException {
		InputStream fin = new FileInputStream("D:\\hai.txt"); 
		System.out.println(fin.available());
	}
}
Answer: 0

public int available() throws IOException {
        return 0;
    }

-------------------------------------------------------------------------

11.	What is the output of the following code
public class FilesAndIO {
	public static void main(String[] args) {
		try {
			String str = "Welcome to NareshIT";
			FileOutputStream fileOut = new FileOutputStream("D:\\hai.txt");
			byte[] by = str.getBytes();
			fileOut.write(by);
			fileOut.close();
			FileInputStream fileIn = new FileInputStream("D:\\hai.txt");
			int a = 0;
			while((a = fileIn.read())!=-1) 
			{
				System.out.print((char)a);
			}
			fileIn.close();
		}catch (FileNotFoundException e) {
			System.out.println(e.getMessage());
		}catch (IOException e) {
			System.out.println(e.getMessage());
		}
	}
}
Answer: Welcome to NareshIT
-----------------------------------------------
12.What is the output of the following code
public class FilesAndIO {
	public static void nit() throws IOException
	{
		ByteArrayOutputStream arrayOut = new ByteArrayOutputStream();
		BufferedOutputStream bout = new BufferedOutputStream(arrayOut);
		String str = "Welcome to NareshIT";
		byte b[] = str.getBytes();
		bout.write(b);
		bout.flush();
		
		for(byte bite : arrayOut.toByteArray()) 
		{
			char ch = (char)bite;
			System.out.print(ch);
		}
	}
	public static void main(String[] args) throws IOException {
		
		nit();
	}
}
Answer: Welcome to NareshIT
-------------------------------------------------------------------

13.Write is the final Output stored into file
public class FilesAndIO {
	public static void nit() {
		try {
			OutputStream file = new FileOutputStream("D:\\hai.txt");
			DataOutputStream data = new DataOutputStream(file);
			data.writeBytes("NareshIT");
			data.flush();
			data.close();
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void nit1() {
		try {
			OutputStream file = new FileOutputStream("D:\\hai.txt");
			DataOutputStream data = new DataOutputStream(file);
			data.writeChars("Welcome to NareshIT");
			data.flush();
			data.close();
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void nit2() {
		try {
			OutputStream file = new FileOutputStream("D:\\hai.txt");
			DataOutputStream data = new DataOutputStream(file);
			data.writeUTF("Hai NareshIT");
			data.writeBoolean(true);
			data.flush();
			data.close();
		}catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public static void main(String[] args) {
		nit();
		nit1();
		nit2();
	}
}
Answer: 
Hai NareshIT
---------------------------------------------------
14.What is the output of the following program
public class FilesAndIO {
	public static void nit() throws IOException {
		String str = "NareshIT";
		OutputStream fout = new FileOutputStream("D:\\hai.txt");
		byte b[] = str.getBytes();
		fout.write(b,0,6);
		fout.flush();		
		fout.close();
	}
	
	public static void nit1() throws IOException {
		InputStream fin = new FileInputStream("D:\\hai.txt");
		int count = fin.available();
		System.out.println(count);
		byte b[] = new byte[count];
		
		DataInputStream din = new DataInputStream(fin);
		din.read(b); 
		for(byte bite : b) 
		{
			System.out.print((char)bite);
		}
	}
	public static void main(String[] args) throws IOException {
		nit();
		nit1();
	}
}
Answer:
6
Naresh

=============================================================================

Program 01 :
-----------
Perform Serialization and De-Serialization.

Create a BLC class Customer with following attributes :
private Integer customerId
private String customerName
private Double customerBill

Create a parameterized Constructor to initialize all fields

Create a Method getCustomerObject() to get Customer Object from end user
Name of the Method : getCustomerObject()
Modifiers : public and static
Return type : Customer

In this Method take the user input from Scanner class to initialize the 
instance variable.

Generate toString(), getter and setter.


Create another class StoreCustomerObject which will store customer object into a file called CustomerObject.txt.

The number of Customer object you want to store in a file must be taken from end user through Scanner class.

Create another class called RetrieveCustomerObject which will read the 
Customer object from file and print the customer data through toString()
method.


Program 02
----------
Create a Program to write the data of of a file into multiple files using ByteArrayOutputStream class.
=====================================================================================================================

Problem: Serialization and Deserialization



You are tasked with implementing a Java program to serialize and deserialize Person objects.



Part 1: Serialization

Implement the Person class as provided in the starter code. Ensure it implements the Serializable interface.

Write a SerializationExample class with a main method.

Inside the main method:

Create a Person object with the following details:

Name: "John Doe"

Age: 30

Email: "john.doe@example.com"

Serialize the Person object into a file named "person.ser". Handle any potential IOException that may occur during serialization.

Print "Person object serialized successfully." upon successful serialization.

Part 2: Deserialization

Implement the deserialization part in the same main method.

Deserialize the Person object from the "person.ser" file.

Handle potential IOException and ClassNotFoundException during deserialization.

Upon successful deserialization:

Print "Person object deserialized successfully."

Print the details of the deserialized Person object using its toString method.

Constraints

Ensure that the Person class and serialization logic remain intact as provided in the starter code.

Handle any potential exceptions gracefully.



Person object serialized successfully.

Person object deserialized successfully.

Deserialized Person details: Person{name='John Doe', age=30, email='john.d



package test_7_fb;

import java.io.Serializable;

public class Person implements Serializable
{
	String name;
	int age;
	String Email;
	
	public Person(String name, int age, String email) {
		super();
		this.name = name;
		this.age = age;
		Email = email;
	}
//	public static String getPerson() {
//		return name+age+Email;
//	}

	@Override
	public String toString() {
		return "Person [name=" + name + ", age=" + age + ", Email=" + Email + "]";
	}
	
	

}
------------------------------------------------------------------------------------

package test_7_fb;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;

import SerializationDeserialization.Employee;

public class SerializationExample {

	public static void main(String[] args)throws IOException {
 FileOutputStream fout=new FileOutputStream("c:\\batch27\\person.ser");
ObjectOutputStream  oos=new ObjectOutputStream(fout);
   Person p=new Person("John Doe",30,"john.doe@example.com");
	
	try(fout;oos){
		Person obj=p;
		oos.writeObject(obj);
	}
	catch(IOException e) {
		System.err.println("exception");
	}
	System.out.println("Person object serialized successfully.");

}
}
------------------------------------------------------------------------------------------------------------------------
package test_7_fb;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.ObjectInputStream;

import SerializationDeserialization.Employee;

public class DeserializationExample {

	public static void main(String[] args) throws Exception{
        	
		FileInputStream fin=new FileInputStream("C:\\Batch27\\Empdata.txt");
		ObjectInputStream ois=new  ObjectInputStream(fin);
		Person p=null;
		try(fin;ois){
    	while((p=(Person)ois.readObject())!=null) {
    		System.out.println(p);
    	}
    }
    	catch(EOFException e) {
    		System.err.println("end of file reached");
    	}
      System.out.println("successfully read");
	}
}

========================================================

Write a Java program to read file content line by line.
package test_7_fb;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class ReadingData {

	public static void main(String[] args) throws IOException {
		//String str="hello welcome to java";
				var fr = new FileReader("c:\\batch27\\intro.txt"); 
		 var br = new BufferedReader(fr);

		 try(fr ; br)
		 {
        while(true)
        {
             int i = br.read();
             if(i == -1)
                  break;
             System.out.print((char)i);
        }
		 }
		 catch(IOException e)
		 {
			  e.printStackTrace();
		 }         
   }
	}
=============================================================
We have four classes named as MakeDirectory, MakeFile, DeleteFile and Test
For MakeDirectory
Instance Variables:
dirName: String
file: File
Methods:
MakeDirectory(String) Parameterized Constructor 
Initialize dirName variable
dir() : String
Initialize file variable include path of the file.
We pass the condition, if folder / directory is created by using mkdir() and the condition is
true then return variable dirName otherwise it return null.
For MakeFile class
In MakeFile class must be create an file extension is .txt 
Instance Variables:
fileName: String 
file: File
Methods:
MakeFile(String) one argument Constructor
Initialize fileName variable

makeFile() : String : throws IOException



Initialize file variable with new keyword and the path must be your folder \\+fileName+".txt"



if file is created by using createNewFile() is true then return variable fileName or else it return null.



For DeleteFile class



Instance Variables



fileName: String



file: File



Methods:



DeleteFile(String) One argument Constructor



Initialize file variable with new keyword and the path must be your folder \\+fileName+".txt"



if file is deleted by using delete() is true then return variable fileName or else it return null.



For Test class



Instance Variables:



No Instance Variables



Methods:



This class having main() method to test all the Solution's classes and methods



If file or folder is created it prints File or folder is created including name of file or folder otherwise it prints ''File or Folder filed to create" include name of file or folder. 



It catches exception and print message



For Delete file, if the file is available and deleted then print 'file is deleted (include file name)' otherwise file is not available it catches 'FIleNotFoundException' then print 'Failed to delete file'.

==========================================================================================
Write a Java program to read the contents of a file into a byte array.
========================================================================
Ravali section for test
-----------------------
You are tasked with implementing a Java program for student data serialization and deserialization. 



The program should create a Student object, serialize it, and then deserialize it to display the student's information.



The Student class has the following attributes:



student_name (String): The name of the student.



student_id (int): The unique ID of the student.



emailId (String, transient): The email address of the student (marked as transient to exclude it from serialization)



Address (String): The address of the student.

You need to complete the following tasks:

Create a Student class with appropriate attributes, constructors, getters, setters, and serialization methods

as provided in the sample code.

Implement a Student_Serialization class with a main method that does the following:



Creates a Student object with sample data.



Serializes the Student object into a file named "studentData.txt".



Deserializes the Student object from the file.



Displays the student's details using the displayDetails method.



Your task is to complete the Student and Student_Serialization classes based on the provided code and requirements.



Note: Ensure that you handle exceptions appropriately by using try-catch blocks as demonstrated in the sample code.



Also after doing serialization and deserialization also write a logic to stop serilize a variable.

===============================================================================

Consider the following Java program FileCopyProgram which aims to copy the content of one text file to another. Review the code and answer the questions below:

Certainly! Here's a question based on the provided Java program:

Question:
Consider the following Java program FileCopyProgram which aims to copy the content of one text file to another. Review the code and answer the questions below:

What is the purpose of the FileCopyProgram Java program?

Explain the functionality of the copyFileContent method. How does it achieve the file copying operation?

What is the significance of the try-with-resources statement in the copyFileContent method?

Suppose the source.txt file contains the following content:

===========================================================================================


Find the output of the following code


Q1)
class Test extends Thread
{
	public void run()
	{
		for(int i=0; i<=10; i++)
		{
			System.out.println("Hello Welcome here.."+i);
		}
	}
}
class Test1 
{
	public static void main(String[] args) 
	{
		Test t = new Test();
		t.start();
		t.start();
	}
}

o/p:
Exception in thread "main" java.lang.IllegalThreadStateException
	at java.base/java.lang.Thread.start(Thread.java:802)
	at com.threads.Class1.main(Class1.java:8)
Hello Welcome here..0
Hello Welcome here..1
Hello Welcome here..2
Hello Welcome here..3
Hello Welcome here..4
Hello Welcome here..5
Hello Welcome here..6
Hello Welcome here..7
Hello Welcome here..8
Hello Welcome here..9
Hello Welcome here..10

-----------------------------------------------

Q2)
class Test
{
    public static void main(String []args)
    {
        Thread t = Thread.currentThread();
		System.out.println(t);
        System.out.println("Name of thread  : "+t.getName());
		System.out.println("Id of thread  : "+t.getId());

    } 
}
o/p:

Thread[main,5,main]
Name of thread  : main
Id of thread  : 1

--------------------------
 public String toString() {
        ThreadGroup group = getThreadGroup();
        if (group != null) {
            return "Thread[" + getName() + "," + getPriority() + "," +
                           group.getName() + "]";
        } else {
            return "Thread[" + getName() + "," + getPriority() + "," +
                            "" + "]";
        }
    }
--------------------------------------------------------

Q3) 
class Test
	{
 public static void main(String args[])
	{
    new Thread()
	{
    public void run()
	{
      System.out.println("task one");
    }
    }.start();

  new Thread()
  {
    public void run()
	{
      System.out.println("task two");
    }
  }.start();
  
 }
}
o/p:
task one
task two
-------------------------------------------

Q4)
class Test
	{
 public static void main(String args[])
	{
  Runnable r1=new Runnable()
  {
    public void run()
	{
      System.out.println("task one");
    }
  };

  Runnable r2=new Runnable()
  {
    public void run()
	{
      System.out.println("task two");
    }
  };
    
  Thread t1=new Thread(r1);
  Thread t2=new Thread(r2);

  t1.start();
  t2.start();
 }
}
o/p:
task one 
task two

parameterized Constructor of the Thread Class 
----------------------------------------------
public Thread(Runnable target) {
        this(null, target, "Thread-" + nextThreadNum(), 0);
    }
-----------------------------------------------------

Q5)
class SimpleThread extends Thread 
{
   public SimpleThread(String str) 
	{
	super(str);
    }
    public void run() 
	{
	for (int i = 0; i < 10; i++) 
	{
	System.out.println(i + " " + getName());
    try 
	{
	sleep((int)(Math.random() * 1000));
	}
	catch (InterruptedException e) {}
	}
	System.out.println("DONE! " + getName());
    }
}
class Test
{
public static void main (String args[]) 
    {
        new SimpleThread("J2EE").start();
        new SimpleThread("J2ME").start();
    }
}

o/p:
 public Thread(String name) {
        this(null, null, name, 0);
    }
--------------
0 J2ME
0 J2EE
1 J2ME
2 J2ME
3 J2ME
1 J2EE
2 J2EE
4 J2ME
3 J2EE
5 J2ME
6 J2ME
4 J2EE
7 J2ME
8 J2ME
5 J2EE
9 J2ME
6 J2EE
DONE! J2ME
7 J2EE
8 J2EE
9 J2EE
DONE! J2EE


-------------------------------------------------------------------

Q6)

import java.io.*;
import java.util.*;
class Prime extends Thread
{
	public void run()
	{
		try
		{
			for(int i=1;i<=10;i++)
			{
				if(i==2||i==3||i==5||i==7)
				{
					System.out.println ("Prime No.= "+i);
				}
				Thread.sleep(500);
			}
		}
		catch (Exception e){}
	}
}
class NotPrime extends Thread
{
	public void run()
	{
		try
		{
			for(int i=1;i<=10;i++)
			{
				if(i==4||i==6||i==8||i==9||i==10)
				{
					System.out.println ("Non-Prime No.= "+i);
				}
				Thread.sleep(500);
			}
		}
		catch (Exception e){}
	}
}
class Test
{
	public static void main(String args[])
	{
		new Prime().start();
		new NotPrime().start();
	}
}	
-----------------------------------
Q7)
public class Test21 extends Thread
{
	static Thread t;
	public static void main(String [] args)
	{
		try
		{
			t=new Thread(new Test21(),"Ravi");
			t.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}
	}
	public void run()
	{
		for(int i=1; i<5; i++)
		{
			try
			{
				System.out.print(Thread.currentThread().getName()+"");
				t.start();
			}
			catch (Exception e)
			{
				System.out.println(" will not botther about but "+e+" happened "+i+" times");
			}
		}
	}
}
o/p:
public Thread(Runnable target, String name) {
        this(null, target, name, 0);
    }

Ravi will not botther about but java.lang.IllegalThreadStateException happened 1 times
Ravi will not botther about but java.lang.IllegalThreadStateException happened 2 times
Ravi will not botther about but java.lang.IllegalThreadStateException happened 3 times
Ravi will not botther about but java.lang.IllegalThreadStateException happened 4 times

---------------------------------------------------------------
Q8)

class Test22 
{
	public static void main(String[] args) 
	{		
		try
		{
			Horse h = new Horse();
			Thread t1= new Thread(h,"MyHorse");
			Thread t2= new Thread(h,"YourHorse");
			new Test22().go(t2);
			t1.start(); t2.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}

		void go(Thread t)
		{
			t.start();
		}		
	}
	
}
class Horse implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}

o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problems: 
	The method go(Thread) is undefined for the type Class3
	Syntax error on token "void", record expected
	void is an invalid type for the variable go
	Syntax error on token "start", Identifier expected after this token

	at com.threads.Class3.main(Class3.java:12)


------------------------------------------------------------------------

Q9)

class Test23 
{
	public static void main(String[] args) 
	{
		try
		{
			Horse h = new Horse();
			Thread t1= new Thread(h,"MyHorse");
			Thread t2= new Thread(h,"YourHorse");
			new Test23().go(t2);
			t1.start(); t2.start();
		}
		catch (Exception e)
		{
			System.out.println(e);
		}
	}
	
		void go(Thread t)
		{
			t.start();
		}
	
	
}
class Horse implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}
o/p:
java.lang.IllegalThreadStateException
YourHorse 
MyHorse 
-----------------------------------------------------------------
Q10)

class Parrot implements Runnable
{
	public void run()
	{
		System.out.println(Thread.currentThread().getName()+" ");
	}
}
class Test26
{
	static Parrot p;

	static { p=new Parrot();}

	{Thread t1= new Thread(p,"Peacock"); t1.start();}

	public static void main(String [] args)
	{
		new Test26();

		new Thread( new Runnable()
		{
			public void run()
			{
				;
			}
		},"Koyal").start();

		new Thread(new Parrot(),"Parrot").start();
	}
	

	{
	  Thread t2 = new Thread(p,"Sparrow");t2.start();
	}

	}
o/p:
Peacock
Sparrow
parrot
-------------------------------------------------------------
Q11)
class MyThreadA extends Thread
{
	String s;
	public void run(String s) 
	{ 
		this.s=s;
		for (;;) 
		{
			System.out.println("s will be printed :"+s);
		}
	}
}
class MyThreadB extends Thread 
{
	String t;
	public void run(String t) 
	{ 
		this.t=t;
		for (;;) 
		{
			System.out.println("t will be printed :"+t);
		}
	}
}
public class Test31
{
public static void main(String [] args) 
{
  MyThreadA t1 = new MyThreadA();
  MyThreadB t2 = new MyThreadB();
		t1.start();
		t2.start();
		
	}
}
o/p:
no output
----------------------------------------------------

Q12)
public class Test44 extends Thread
{
public static void main(String argv[])
{
Test44 b = new Test44();
b.run();
b.start();
} 
public void start()
{
for (int i = 0; i < 10; i++)
{
System.out.println("Value of i = " + i); 
}  
}
}
o/p:
Value of i = 0
Value of i = 1
Value of i = 2
Value of i = 3
Value of i = 4
Value of i = 5
Value of i = 6
Value of i = 7
Value of i = 8
Value of i = 9

--------------------------------------------
Q13)
class Test58 
{
	public static void main(String[] args) 
	{
		
	}
	System.out.println("Hello World!");
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 

	at com.threads.Class3.main(Class3.java:5)
-------------------------------------------------
Q14)
class Test61
{
public static void main(String[] args) 
{
Runnable r1 = new Runnable() 
{
public void run() 
{
try 
{
while (true) 
{
System.out.println("Hello, world!");
Thread.sleep(1000);
}
} 
catch (InterruptedException iex) {}
}
};
Runnable r2 = new Runnable() 
{
public void run() 
{
try
{
while (true) 
{
System.out.println("Goodbye, " +" Beautiful world!");
Thread.sleep(2000);
}
} catch (InterruptedException iex) {}
}
};

Thread thr1 = new Thread(r1);
Thread thr2 = new Thread(r2);
thr1.start();
thr2.start();
}
}

o/p:
Hello, world! and Goodbye,  Beautiful world! printed infinity times

--------------------------------------------
Q15)
class Test extends Thread       
    {       
        static int k1, k2;          
              
        public void run()       
        {       
            while(true)       
            {       
                synchronized(Test.class)       
                {       
                    k1++;       
                    k2++;       
                      
                if(k1 <= k2)       
                {       
                    System.out.println("k1: " + k1 + " k2: " + k2);       
                    System.exit(0);       
                }  
               }     
            }       
        }
	}
	class demo10
	{          
        public static void main(String[] args)       
        {       
            new Test().start();       
            new Test().start();       
        }       
  }   

=========================================================================================

Find out the output of the following Program :

Q1)
class A implements Runnable 
{  
  public void run() 
  {
     System.out.print(Thread.currentThread().getName());
  }  
}  
class B implements Runnable
{  
  public void run() 
  {  
    new A().run();  
    new Thread(new A(),"T2").run();  
    new Thread(new A(),"T3").start();  
   }
}  
public class Test
{  
  public static void main (String[] args) 
  {  
    new Thread(new B(),"T1").start();  
  }
}
o/p:
t1
t1
t3
------------------------------------------------
Q2)
public class Test extends Thread 
{
static String name = "ravi";

public static void main(String args[]) 
{
Test t = new Test();
t.Test(name);
System.out.print(" " + name);
}

public void Test(String name) {
start();
System.out.print(" method");
}

public void run() {
System.out.print(" run");
}
}
o/p:
method
run
ravi
---------------------------------------------------------------
Q3)

class Job extends Thread 
{
    private Integer number = 0;
    public void run() 
    {
        for (int i = 1; i < 10; i++) 
	{
            number++;
        }
    }
    public Integer getNumber() 
    {
        return number;
    }
}
public class Test {
    public static void main(String[] args) {
        Job thread = new Job();
        thread.start();
		try
		{
			thread.join();
		}
		catch (Exception e)
		{
		}
        System.out.println(thread.getNumber());
    }
}

o/p:
9
-----------------------------------------------------
Q4)
class MyData extends Thread
{
private boolean request;
private String  data;
public void run()
	{
		storeMessage("Hello");
		String str=retrieveMessage();
		System.out.println(str);
	}
public synchronized void storeMessage(String data) 
  {
      request = true;
      this.data = data;
  }

  public synchronized String retrieveMessage() 
  {
    request = false;
    return data+" : "+request;
  }
 }
public class Test
{
	public static void main(String[] args) 
	{
		MyData md = new MyData();
		md.start();
        	
		
	}
}
o/p:
hello:false
----------------------------
Q5)
public class Test extends Thread {

    public static void main(String[] args) throws Exception {
    Test t = new Test();
    t.start();
    t.method();
    }

    public void run() {
    System.out.println("run");
    }

    public void method() {
	hello();
    System.out.println("method");
}

public void hello()
	{
	hello1();
	System.out.println("PR");
	}

	public void hello1()
	{
	
	System.out.println("RR");
	}
}
o/p:
run
RR
Pr
method
--------------------------------------------
Q6)
class Test 
{
	public static void main(String[] args) 
	{
 Runnable r = new Runnable() {
 public void run() {
 System.out.print("Cat");
 }
 };
 Thread t = new Thread(r) {
 public void run() {
 System.out.print("Dog");
 }
 };
 t.start();
		
	}
}
o/p:
dog
-------------------------------------
Q7)

class MyThread extends Thread
{
	public void run()
	{
		System.out.println("MyThread: run()");
	}

	public void start()
	{
		System.out.println("MyThread: start()");
	}
}

class MyRunnable implements Runnable
{
	public void run()
	{
		System.out.println("MyRunnable: run()");
	}

	public void start()
	{
		System.out.println("MyRunnable: start()");
	}
}

public class Test 
{
	public static void main(String args[])
	{
		MyThread myThread  =  new MyThread();
		MyRunnable myRunnable = new MyRunnable();
		Thread thread  =  new Thread(myRunnable);
		myThread.start();
		thread.start();
	}
}


o/p:
MyThread:start()
MyRunnable:run()

----------------------------------------
Q8)

class MyThread extends Thread
{
	String myName;

	MyThread(String name)
	{
		myName = name;
	}
	public void run()
	{
		for(int i=0; i<10;i++)
		{
			System.out.println(myName);
		}
	}
}
public class Test
{
	public static void main(String args[])
	{
		try
		{
			MyThread mt1 = new MyThread("mt1");
			MyThread mt2 = new MyThread("mt2");
			mt1.start();
			mt1.join();
			mt2.start();
		}
		catch(InterruptedException ex)
		{
		}
	}
}

o/p:
mt1
mt1
mt1
mt1
mt1
mt2
mt2
mt2
mt2
mt2
mt2
mt2
mt2
mt2
mt2

------------------------------------------------
Q9)
class MyThread implements Runnable
{
	String str;
	MyThread(String str)
	{
		this.str=str;
	}
	public void run()
	{
		for(int i=1; i<=10; i++)
		{
			System.out.println(str+ " : "+i);
			try
			{
				Thread.sleep(100);
			}
			catch (Exception e)
			{
				e.printStackTrace();
			}
		}
	}
}
public class Test
{
	public static void main(String [] args)
	{
	MyThread obj1 = new MyThread("Cut the Ticket");
	MyThread obj2 = new MyThread(" Show the Seat");

		Thread t1 = new Thread(obj1);
		Thread t2 = new Thread(obj2);

		t1.start();
		t2.start();

	}
}
o/p:
Show the Seat : 1
Cut the Ticket : 1
 Show the Seat : 2
Cut the Ticket : 2
 Show the Seat : 3
Cut the Ticket : 3
 Show the Seat : 4
Cut the Ticket : 4
 Show the Seat : 5
Cut the Ticket : 5
 Show the Seat : 6
Cut the Ticket : 6
 Show the Seat : 7
Cut the Ticket : 7
 Show the Seat : 8
Cut the Ticket : 8
 Show the Seat : 9
Cut the Ticket : 9
 Show the Seat : 10
Cut the Ticket : 10

-------------------------------------
Q10)
public class Test76 
{
public static void main(String[] args) 
{
 new Test76().go();
 }
 public void go() 
 {
 Runnable r = new Runnable()
 {
 public void run() 
 {
 System.out.println("foo");
 }};
  Thread t = new Thread(r);
  t.start();
  t.run();
 }
 }
o/p:
foo
foo
-----------------------------------------------------------------------------
Program 01:
----------
Write a program in java to show the drawback of Multithreading by booking Railway Reservation System.

In this scenario, only 1 seat is available and two threads are accessing this seat to book the ticket. 

Write a Program to show that both the thread will get the ticket.
package com.threads;


	class Customer implements Runnable
	{
		private int availableSeat = 1;
		private int wantedSeat;
		
		public Customer(int wantedSeat)
		{
			this.wantedSeat = wantedSeat; 
		}
		
		
		@Override
		public void run() 
		{
			String name = null;
			
			if(availableSeat >= wantedSeat)
			{
				name = Thread.currentThread().getName();
				System.out.println(wantedSeat +" seat is reserved for "+name);		
				availableSeat = availableSeat-wantedSeat;
			}
			else
			{
				name = Thread.currentThread().getName();
				System.err.println("Sorry!!"+name+" berth is not available");
			}
			
		}
		
	}

	public class RailWayReservation 
	{
		public static void main(String[] args)
		{
			Customer c1 = new Customer(1);
			
			Thread t1 = new Thread(c1,"Virat");
			Thread t2 = new Thread(c1,"Rohit");
			
			t1.start();  t2.start();

		}

	}



====================================================================================================
1.	What is the output of the following code
public class MultiThread implements Runnable
{
	public static void main(String[] args) throws InterruptedException {
		Thread thread = new Thread(new MultiThread());
		thread.start();
		System.out.print("nit ");
		thread.join();
		System.out.println("google ");
	}
	@Override
	public void run() {
		System.out.println("NareshIT");
	}
}
o/p:
nit google 
NareshIT
-----------------------------------
2.	What is the output of the following code
class Test extends Thread
{
	@Override
	public void run() {
		System.out.println("Run");
		super.run();
	}
	
	@Override
	public synchronized void start() {
		System.out.println("Start");
		super.start();
	}	
}
public class MultiThread
{
	public static void main(String[] args) {
		nit();
	}
	
	static public void nit() {
		Test test = new Test();
		test.start();
	}
}
o/p:
Start
run
---------------------
3.	What is the output of the following code
class Test extends Thread
{
	int a;
	public void run() {
		a++;
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test test = new Test();
		test.run();
		System.out.println(test.a);
		test.start();
		System.out.println(test.a);
		System.out.println(test.isAlive());
		System.out.println(test.getName());		
	}
}
o/p:
1
1
true
Thread-0

---------------------------------
4.	What is the output of the following code
public class MultiThread extends Thread
{
	public void run() {
		System.out.println(Thread.currentThread().getId());
	}
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.start();
		}
	}
}
o/p:
Exception in thread "main" 14
java.lang.IllegalThreadStateException
	at java.base/java.lang.Thread.start(Thread.java:802)
	at com.threads.Class12.main(Class12.java:13)

----------------------------------------------
5.	What is the output of the following code
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	public static void main(String[] args) {
		for(int i=0;i<10;i++)
		{
			MultiThread nit = new MultiThread();
			nit.start();
		}
	}
}
o/p:
14
15
16
17
18
19
20
21
22
23

------------------------------------------------------
6.	What is the output of the following code
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	
	@Override
	public void start() {
		System.out.print(Thread.currentThread().getName()+" ");
	}
	
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.start();
		}
	}
}

o/p;
main main main main main main main main main main 
-------------------------------------------------------
7.	What is the output of the following code
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	
	@Override
	public void start() {
		System.out.print(Thread.currentThread().getName()+" ");
	}
	
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.run();
		}
	}
}
o/p:
1 1 1 1 1 1 1 1 1 1 
-----------------------------

8.	What is the output of the following program
public class MultiThread implements Runnable
{
	Thread thread;
	public MultiThread() {
		thread = new Thread(this);
		thread.start();
	}
	public void run() {
		System.out.println(thread);
		
	}	
	public static void main(String[] args) {
		new MultiThread();
	}
}
o/p:
Thread[Thread-0,5,main]
--------------------------------
9.	What is the output of the following program
public class MultiThread implements Runnable
{
	Thread thread;
	public MultiThread() {
		thread = new Thread(this,"NareshIT");
		thread.setPriority(6);
		thread.start();
	}
	public void run() {
		System.out.println(thread);
		
	}
	public static void main(String[] args) {
		new MultiThread();
	}
}
o/p:
Thread[NareshIT,6,main]

----------------------------------------
10.What is the output of the following program
public class MultiThread extends Thread
{	
	public static void main(String[] args) {
		MultiThread m1 = new MultiThread();
		MultiThread m2 = new MultiThread();
		MultiThread m3 = new MultiThread();
		m1.start();
		m2.start();
		m3.start();
	}
	
public void run() {
		System.out.println(Thread.currentThread().getName());
	}
}
o/p:
Thread-0
Thread-1
thread-2

or

Thread-2
Thread-0
thread-1

------------------------------------------------
11.	What is the output of the following program
public class MultiThread extends Thread
{	
	public static void main(String[] args) {
		MultiThread m1 = new MultiThread();
		MultiThread m2 = new MultiThread();
		MultiThread m3 = new MultiThread();
		m1.start();
		m2.start();
		m3.start();
		
		for(int i=0;i<5;i++) 
		{
			m2.yield();
			System.out.println(Thread.currentThread().getName());
		}
	}
public void run() {
		System.out.println(Thread.currentThread().getName());
	}
}
o/p;
Thread-2
main
Thread-1
Thread-0
main
main
main
main

-----------------------------------------
12.	What is the output of the following code
class Test implements Runnable
{
	@Override
	public void run() {
		Thread thread = Thread.currentThread();
		System.out.println(thread.getState());
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test nit = new Test();
		nit.run();
	}
}
o/p:
RUNNABLE
------------------------------
13.	What is the output of the following snippet
class Test implements Runnable
{
	@Override
	public void run() {
		Thread thread = Thread.currentThread();
		thread.stop();
		System.out.println(thread.getState());
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test nit = new Test();
		nit.run();
	}
}
o/p:
no output
-------------------------------------------
14.	What is the output of the following code
class Test implements Runnable
{
	public void run() {
		Thread thread = Thread.currentThread();
		Thread nit = thread.currentThread();
		System.out.println(nit.getName());		
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test nit = new Test();
		Thread thread = new Thread(nit);
	}
}
o/p:
no out
----------------------------
15.	What is the output of the following code
class Test implements Runnable
{
	public void run() {
		Thread thread = Thread.currentThread();
		Thread nit = thread.currentThread();
		System.out.println(nit.getName());			
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test nit = new Test();
		Thread thread = new Thread(nit);
		thread.start();
	}
}
o/p:
Thread-0
-------------------------------------------------------
16.	What is the output of the following code
class Test implements Runnable
{
	public void run() {
		Thread thread = Thread.currentThread();
		Thread nit = thread.currentThread();
		System.out.println(nit.getName());
				
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test nit = new Test();
		Thread thread = new Thread(nit);
		thread.setName("NareshIT");
		thread.start();
	}
}
o/p:
NareshIT
-----------------------------------------------------
17.	What is the output of the following snippet
public class MultiThread 
{
	public static void main(String[] args) {
		Thread nit = new Thread();
		System.out.println(nit.MIN_PRIORITY+" "+nit.MAX_PRIORITY+" "+nit.NORM_PRIORITY);
	}
}
o/p:
1 10 5
-----------------------------------------------------

18.	What is the output of the following snippet
public class MultiThread 
{
	public static void main(String[] args) {
		Thread nit = new Thread();
		System.out.println(nit.MIN_PRIORITY+nit.MAX_PRIORITY+nit.NORM_PRIORITY);
	}
}
o/p:
16
------------------------------------------------------

19) class Test implements Runnable
{
	public void run()
	{{
		for(int i=0; i<2; i++)
		System.out.println(Thread.currentThread().getName()+" ");
	}
	System.out.println();
}}
class Test20
{
	public static void main(String[] args) 
	{
		Test t = new Test();
		Thread t1 = new Thread();
		Thread t2 = new Thread(t,"J2EE");
		Thread t3 = new Thread(t,"J2ME");
		t1.start();t2.start();t3.start();

	}
}
o/P:
J1EE 
J1EE 
J2ME 

J2ME 


--------------------------------------------------

20)public class Test27 extends Thread
{
	public static void main(String[] args) 
	{
		try
		{
			Thread t= new Thread(new Test27 (),"Rahul");
			Thread t1= new Thread(new Test27(),"Ravi");
			t.start(); t1.start();
		}
		catch (Exception e)
		{
			System.out.println("e");
		}
	}
	public void run()
	{
		for(int i=0; i<2; i++)
		{
			try
			{
				Thread.sleep(500);
			}
			catch (Exception e)
			{
				System.out.println("e2");
			}
			System.out.println(Thread.currentThread().getName()+" ");

		}
	}
}
o/p:
Rahul 
Ravi 
Rahul 
Ravi 
========================================================================================================

1.How to create anonymous a Thread of inner class Object 
public class Java8 
{
	public static void main(String[] args) {
		new Thread(new Runnable() {
			@Override
			public void run() {
				System.out.println("Naresh I Technologies");
			}
		}).start();
		System.out.println(new Thread().isAlive());
    }
}
o/p:
false
Naresh I Technologies

--------------------------------------------------------------


2.What is the output of the following code
class NIT extends Thread
{
	@Override
	public void run() {
		
		System.out.println("1st Thread");
	}
}

class NIT1 extends Thread
{
	@Override
	public void run() {
		
		System.out.println("2nd Thread");
	}
}

public class Java8 {
	public static void main(String[] args) {
		NIT thread = new NIT();
		NIT1 thread1 = new NIT1();
		thread.start();
		System.out.println(thread.getPriority());
		System.out.println(thread.isAlive());
		System.out.println(thread1.isAlive());
		thread1.start();
		System.out.println(thread1.getPriority());
		
    }
}
o/p:
5
true
false
1st Thread
2nd Thread
5

-------------------------------------------------------

3.Can Create Thread by using lambda function
public class Java8 {
	public static void main(String[] args) {
		new Thread(()-> 
		System.out.println("Naresh I Technologies")).start();
    }
}
o/p:
Naresh I Technologies
-----------------------------------------------

4.What is the output of the following program
class NIT implements Runnable 
{
	@Override
	public void run() {
		for(int a=0;a<10;a++)
		{
			System.out.println("NareshIT1");
			try {
				 Thread.sleep(2000);
			} catch (InterruptedException e) {
				System.out.println("NIT Thread failed");
			}
		}
	}
}
o/p:
Error: Main method not found in class com.threads.Class24, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

-----------------------------------------------------

class NIT1 implements Runnable
{
	@Override
	public void run() {
		for(int a =0;a<10;a++) 
		{
			System.out.println("NareshIT2");
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				System.out.println("NIT1 Thread failed");
			}
		}
		
	}
}

public class Java8 {
	public static void main(String[] args) {
		Runnable nit = new NIT();
		Runnable nit1 = new NIT1();
		
		Thread thread = new Thread(nit);
		Thread thread1 = new Thread(nit1);
		
		thread.start();
		thread1.start();
    }
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	NIT cannot be resolved to a type

	at com.threads.Class24.main(Class24.java:21)

----------------------------------------------

5. What is the output of the following code without override run() method using thread and setDaemon?
public class Java8 extends Thread {
	public static void main(String[] args) {
		if(Thread.currentThread().isDaemon()) 
		{
			System.out.println("Daemon thread Running");
		}
		else
			System.out.println("Normal Thread Running");
		
		Java8 java = new Java8();
		Java8 java1 = new Java8(); //setDaemon
		Java8 java2 = new Java8();
		Java8 java3 = new Java8();
		
		java1.setDaemon(true);
		
		java.start();
		java1.start();
		java2.start();
		java3.start();
		
    }
}
o/p:
Normal Thread Running
Initially isDaemon() is false
-----------------------------------------------

6.What is the output of the following code to override run() method using thread and setDaemon?
public class Java8 extends Thread {
	
	@Override
	public void run() {
		if(Thread.currentThread().isDaemon()) 
		{
			System.out.println("Daemon thread Running");
		}
		else
			System.out.println("Normal Thread Running");
	}
	
	public static void main(String[] args) {
		
		
		Java8 java = new Java8();
		Java8 java1 = new Java8(); //setDaemon
		Java8 java2 = new Java8();
		Java8 java3 = new Java8();
		
		java1.setDaemon(true);
		
		java.start();
		java1.start();
		java2.start();
		java3.start();
		
    }
}
o/p:
Normal Thread Running
Daemon thread Running
Normal Thread Running
Normal Thread Running

-------------------------------------------

7.What is the output of the following code?
public class Java8 extends Thread {
	
	public void display() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("display");
		}
	}
	
	public void display1() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("display1");
		}
	}
	
	public static void main(String[] args) throws InterruptedException {
		
		Java8 java = new Java8();
		java.start();
		java.display();
		java.wait();
		java.display1();
    }
}
o/p:
display
display
display
display
display
Exception in thread "main" java.lang.IllegalMonitorStateException: current thread is not owner
	at java.base/java.lang.Object.wait(Native Method)
	at java.base/java.lang.Object.wait(Object.java:338)
	at com.threads.Class24.main(Class24.java:24)

---------------------------------------------

8.	What is the output of the following code override without run() method and one class?
public class Java8 extends Thread {
	
	public void display() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("display");
		}
	}
	
	public void display1() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("display1");
		}
	}
	
	public static void main(String[] args) throws InterruptedException {
		
		Java8 java = new Java8();
		java.start();
		java.display();
		java.sleep(1000);
		java.display1();
    }
}
o/p:
display
display
display
display1
display1
display1
display1
display1

-------------------------------------------------

9.What is the output of the following code override without run() method and Serial Execution?
class NIT extends Thread
{
	public void display() throws InterruptedException {
		for(int a=0;a<5;a++) 
		{
			System.out.println("NIT Display");
			
			Thread.sleep(500);
		}
	}
}

class NIT1 extends Thread
{
	public void display1() throws InterruptedException {
		for(int a=0;a<5;a++) 
		{
			System.out.println("NIT Display1");
			
			Thread.sleep(1000);
		}
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT1 nit1 = new NIT1();
		
		nit.start();
		nit1.start();
		
		nit.display();
		nit1.display1();
    }
}

o/p:
NIT Display
NIT Display
NIT Display
NIT Display
NIT Display
NIT Display1
NIT Display1
NIT Display1
NIT Display1
NIT Display1

------------------------------------------------------
10. What is the output of the following code override run() method and Parallel Execution?
class NIT extends Thread
{
	@Override
	public void run() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("NIT Display");
			
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}

class NIT1 extends Thread
{
	@Override
	public void run() {
		for(int a=0;a<5;a++) 
		{
			System.out.println("NIT Display1");
			
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT1 nit1 = new NIT1();
		
		nit.start();
		nit1.start();
    }
}
o/p:
NIT Display
NIT Display1
NIT Display
NIT Display1
NIT Display
NIT Display
NIT Display1
NIT Display
NIT Display1
NIT Display1

---------------------------------------------

11.What is the output of the following code?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getId());
		System.out.println(currentThread().getName());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		nit.start();
		nit1.start();
		nit2.start();
    }
}
o/p:
15
Thread-0
14
Thread-1
16
Thread-2
------------------------------------------------

12.Write a program to get default priority of thread?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getName());
		System.out.println(currentThread().getPriority());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		nit.start();
		nit1.start();
		nit2.start();
    }
}
o/p:
Thread-0
5
Thread-1
5
Thread-2
5
------------------------------------------------

13.Write a program to get Normal priority of thread?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getName());
		System.out.println(currentThread().getPriority());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		
		nit.setPriority(Thread.NORM_PRIORITY);
		nit1.setPriority(Thread.NORM_PRIORITY);
		nit2.setPriority(Thread.NORM_PRIORITY);
		
		nit.start();
		nit1.start();
		nit2.start();
    }
}
o/p:
Thread-0
5
Thread-1
5
Thread-2
5
-------------------------------
14.Write a program to get Minimum priority of thread?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getName());
		System.out.println(currentThread().getPriority());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		
		nit.setPriority(Thread.MIN_PRIORITY);
		nit1.setPriority(Thread.MIN_PRIORITY);
		nit2.setPriority(Thread.MIN_PRIORITY);
		
		nit.start();
		nit1.start();
		nit2.start();
    }
}
o/p:
Thread-0
1
Thread-1
1
Thread-2
1
----------------------------------------------

15.Write a program to get Maximum priority of thread?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getName());
		System.out.println(currentThread().getPriority());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		
		nit.setPriority(Thread.MAX_PRIORITY);
		nit1.setPriority(Thread.MAX_PRIORITY);
		nit2.setPriority(Thread.MAX_PRIORITY);
		
		nit.start();
		nit1.start();
		nit2.start();
    }
}
o/p:
Thread-0
10
Thread-1
10
Thread-2
10
-------------------------------

16.What is the output of the following code?
public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		NIT nit1 = new NIT();
		NIT nit2 = new NIT();
		NIT nit3 = new NIT();
		
		nit.start();
		nit.setPriority(Thread.NORM_PRIORITY);
		nit1.start();
		nit.setPriority(Thread.MIN_PRIORITY);
		nit2.start();
		nit.setPriority(Thread.MAX_PRIORITY);
		nit3.start();
		
    }
}
O/P:
Exception in thread "main" java.lang.Error: Unresolved compilation problems: 
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type
	NIT cannot be resolved to a type

	at com.threads.Class24.main(Class24.java:7)
-----------------------------------------------------

17.What is the output of the following code?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getName());
		System.out.println(currentThread().getPriority());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		NIT nit = new NIT();
		nit.run();

    }1`	
}

O/P:
main
5

-------------------------------------------

18.What is the output of the following code?
class NIT extends Thread
{
	@Override
	public void run() {
		System.out.println(currentThread().getId());
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		for(int a=0;a<10;a++) 
		{
		  Thread newThread = new Thread(new NIT());
		  newThread.start();
		}
    }
}

o/p:
main
----------------------------------------
19.Write a program to Synchronized Thread in java?
class TestSync
{
	void display(int a) throws InterruptedException {
		synchronized (this) {
			System.out.println(a*5);
			Thread.sleep(500);
		}
	}
}

class NIT extends Thread
{
	TestSync test;
	@Override
	public void run() {
		try {
			test.display(Thread.MIN_PRIORITY);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	public NIT(TestSync test) {
		this.test = test;
	}
}
class NIT1 extends Thread
{
	TestSync test;
	@Override
	public void run() {
		try {
			test.display(MIN_PRIORITY);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
	public NIT1(TestSync test) {
		this.test = test;
	}
}

public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
	        TestSync test = new TestSync();
		NIT nit=new NIT(test);
		NIT1 nit1 = new NIT1(test);
		nit.start();
		nit1.start();
    }
}
o/p:
5
5
------------------------------------------
20. Write a program to static Synchronized Thread in java?
class TestSync
{
	public static synchronized void display(String name) {
		System.out.println("Congratulations Mr/Mrs "+name);
	}
}

class NIT extends Thread
{
	
	TestSync test;
	String name;
	@Override
	public void run() {
		test.display(name);
	}
	
	public NIT(TestSync test, String name) {
		this.test = test;
		this.name = name;
	}
}


public class Java8 {
	
	public static void main(String[] args) throws InterruptedException {
		TestSync test = new TestSync();
		NIT nit = new NIT(test,"Naresh");
		NIT nit1 = new NIT(test,"Ravi");
		nit.start();
		nit1.start();
    }
}
o/p:
Congratulations Mr/Mrs Naresh
Congratulations Mr/Mrs Ravi
================================================================
We have Three classes named as MovieTickets, Customer and Test

For MovieTickets class which is implemented by Runnable interface

Instance Variables:

ticketAvailable :int: default : Initialize to desire/ any number

customer: int: default

Methods:

movieTickets(int) : Constructor with one parameter

run(): override from Runnable interface

Local Variable:

customerName :String: Initialize the variable form getName() of thread

if the tickets are available it prints 'movie tickets are allotted to customerName' or else it prints 'movie tickets are not available'

For example 3 movie tickets are available for 3 members so, these three are allocated to particular persons using threads. If 3 tickets are available for 4 members so movie tickets are not

 allocated to anyone.

For Customer class

Create an object for MovieTickets class with pass the argument

Instance Variables:

thread1 : Thread

thread2 : Thread

thread3 : Thread

Methods:

movieExecute() : void

create an object for each Instance variable with new keyword and store the MovieTickets Object by using Thread(Runnable). 

we need to setNname() for each Thread variable

Then start all the Threads from this variable



For Test class

Test class having main method and create a method for Customer class

Use this class to test your solution's classes and methods.



package com.threads;
class MovieTicket implements Runnable{
int ticketAvailable=2;
int wantedSeats;
public MovieTicket(int wantedSeats) {
	this.wantedSeats=wantedSeats;
}
	@Override
	public void run() {
		String name;
		if(ticketAvailable>=wantedSeats) {
			name = Thread.currentThread().getName();
			System.out.println(wantedSeats +" seat is reserved for "+name);		
			ticketAvailable = ticketAvailable-wantedSeats;
		}
		else
		{
			name = Thread.currentThread().getName();
			System.err.println("Sorry!!"+name+" berth is not available");
		}
		
	}
}
class Customer{
	Thread thread1;
	Thread thread2;
	Thread thread3 ;
	public void movieExecute() {
		thread1=new Thread(new MovieTicket(2),"ravi");
		thread2=new Thread(new MovieTicket(2),"ravali");
		thread3=new Thread(new MovieTicket(2),"rassi");
		thread1.start();
		thread2.start();
		thread3.start();
	}

}
public class Test23 {

	public static void main(String[] args) {
		Customer c=new Customer();
		c.movieExecute();
	}

}
=============================================================================
We have two classes named as Bank and Test

For Bank class

Instance Variables:

initialBalnce: int : initialize to some number

Methods:

No Argument Constructor

withdraw(int): void 

check the condition if initial balance is greater than or equals to withdraw amount perform some operation to get new balance otherwise amount cannot withdraw  

For example Initial balance is 500 rupees and withdraw amount is 600 so we cannot withdraw amount.

In withdraw try to sleep the thread up to 1000 milliseconds because we need some operation internally from bank to customer.

deposit(int) : void

Update InitialBalance to InitialBalance + deposit from parameter and print final balance so, we need to keep some thread to sleep because of internal process of bank to customer and catch InterruptedException.

For class MultiThread:

This class contains main() method to test all the solutions for Bank class

package com.threads;

class Bank1 {
int initialBalnce=1000;
public Bank1() {
	
}
public synchronized void withdraw(int amount) {
	if(initialBalnce<amount) {
		System.out.println("waiting for deposit amount");
		try {
			wait();
		}
		catch(Exception e) {
			e.printStackTrace();
		}
	}
		System.out.println("withdraw is successful");
		initialBalnce-=amount;
		System.out.println("total amount:"+initialBalnce);
	
	
}
public synchronized void deposit(int amount) {
	initialBalnce+=amount;
	System.out.println("deposit successful and total amount"+initialBalnce);
}
}
public class Bank22{
	public static void main(String[] args) {
	Bank1 b=new Bank1();
	Thread t=new Thread() {
		@Override
		public void run() {
			b.withdraw(1000);
		}
	};
	
	Thread t1=new Thread() {
		@Override
		public void run() {
			b.deposit(1000);
		}
	};
	t.start();
	t1.start();
	
	}
}



========================================================================

A typical example of simultaneous threads is that of an online reservation system. Multiple users are trying to book seats at the same time. In this problem, we are writing a code for railway reservation system. 



A class Customer is given to you which is implemnting Runnable interface



Instance variables of Customer class:

availableSeat : int : private

wantedSeat : int : private 



Initialize the wantedSeat variable through Customer 



Override the run method to write the ticket booking logic so at a time only one person can book the ticket



Create another class TicketBooking which contains a main method, Create at-least two threads two book the railway ticket.


package com.threads;
class MovieTicket implements Runnable{
int ticketAvailable=2;
String name;
int wantedSeats;
public MovieTicket(int wantedSeats) {
	this.wantedSeats=wantedSeats;
}
	@Override
	public void run() {
		
		if(ticketAvailable>=wantedSeats) {
			name = Thread.currentThread().getName();
			System.out.println(wantedSeats +" seat is reserved for "+name);		
			ticketAvailable = ticketAvailable-wantedSeats;
		}
		else
		{
			name = Thread.currentThread().getName();
			System.err.println("Sorry!!"+name+" berth is not available");
		}
		
	}
}

public class Test23 {

	public static void main(String[] args) {
		MovieTicket m=new MovieTicket(3);
		Thread t=new Thread(m,"ravi");
		t.start();
	}

}


=======================================================================

Que-1)

Display a program to execute two task concurrently
* task 1- Display 1-10
* task 2-Display 10-20

package com.threads;
class Nit implements Runnable{

	@Override
	public void run() {
		for(int i=0;i<=10;i++) {
			System.out.println(i);
		}
		
	}
	
}
class Nit1 implements Runnable{

	@Override
	public void run() {
		for(int i=10;i<=20;i++) {
			System.out.println(i);
		}
		
	}
	
}
public class ExecuteTwoTaskConcurrently25 {

	public static void main(String[] args)  {
		Nit n=new Nit();
		Thread t=new Thread(n);
		
		Nit1 n1=new Nit1();
		Thread t1=new Thread(n1);
		t1.start();
		t.start();

	}

}
--------------------------------------


Que-2)

Display a program to execute three tasks concurrently
* task 1- Display 1-10
* task 2-Display 10-20
* task 3-Display 20-30

package com.threads;

public class ExecuteThreeTasksConcurrently26{

	public static void main(String[] args)  {
		Nit26 n=new Nit26();
		NIt26 n1=new NIt26();
		NIT26 n2=new NIT26();
		n.start();
		n1.start();
		n2.start();

	}

}
class Nit26 extends Thread{
	@Override
	public void run() {
		for(int i=0;i<=10;i++) {
			System.out.println(i);
		}
	}
}
class NIt26 extends Thread{
	@Override
	public void run() {
		for(int i=10;i<=20;i++) {
			System.out.println(i);
		}
	}
}
class NIT26 extends Thread{
	@Override
	public void run() {
		for(int i=20;i<=30;i++) {
			System.out.println(i);
		}
	}
}
-------------------------------------------------------------

Que-3)

Develop a program to display value 1-x from multiple threads concurrently
take x value from other programmer whoever starting the thread Executing different logic from multiple thread concurrently.

Que-4)

Develop a program to display value 10-x, 30-y from multiple threads
Concurrently take x value from other programmer whoever starting the thread Executing different logic from multiple thread concurrently with the same input or diff input.

Que-6)

A typical example of simultaneous threads is that of an online Movie ticket reservation system.
Multiple users are trying to book seats/products at the same time. In this problem, you are writing a Ticker Dispenser in a BOOK MY SHOW APPLICATION SYSTEM.

* A TicketDispenser class is given to you. This class can give out a maximum of 200 tickets.

* In this class the maximum seats is already declared and assigned to the value of 200. Do not allot seats greater than this.

* Declare an integer variable called allotedSeats. This variable holds the current seat that is alloted.

* Declare a method allotSeatNumber():
This method should return the alloted seat number to the caller.
This method should start allotting seat numbers from 1 and allot seats in the increasing order. If all 200 seats have been allotted, return -1.
If Multiple threads are trying to use this class for seat allotment,
this class should be able to handle the multiple threads such that there is no thread interference or error.


* Use the class Tester.java to test the TicketDispenser class and its methods. Make sure you test the class for single and multi-threaded operations.

Que-7)
A typical example of simultaneous threads is that of a bank account where two people could be operating at the same time.
In this problem, we are writing an Account class.
 
* An Account class is given to you. This class is used to deposit and withdraw from the account.
* Declare an integer variable called balance. This variable holds the current balance of the account.
* Declare a method deposit(int amount):
* This method should add the given amount to balance. There is no need to validate amount. This method returns void.
* Declare a method withdraw(int amount):
* This method should subtract the given amount from balance. There is no need to validate amount. This method returns void.
* If Multiple threads are trying to use this class for operating the account, this class should be able to hand le the multiple threads
Such that there is no thread interference or error in the balance.

* Use the class AccountTester.java to test the Account class and its methods. Make sure you test the class for single and multi-threaded operations.
===============================================================================================================

Problem Statement:
You are tasked with creating an education institute course enrollment system using Java. The system should provide courses and offers to students, allowing them to view available courses, ongoing offers, and enroll in their preferred courses.



Classes:
class Course:



Attributes:

-> id (int): Unique identifier for the course.

-> name (String): Name of the course.

-> fee (double): Fee for the course.



Methods:

-> Course(int id, String name, double fee): Constructor to initialize the course attributes.

-> getId(): Returns the course ID.

-> getName(): Returns the course name.

-> getFee(): Returns the course fee.



class Offer:



Attributes:

-> offerText (String): Description of the special offer provided by the education institute.



Methods:

-> Offer(String offerText): Constructor to initialize the offer description.

-> getOfferText(): Returns the offer description.



class EducationInstitute:



Attributes:

-> courses (Course[]): An array to store the available courses.

-> offers (Offer[]): An array to store ongoing offers.



Methods:

-> EducationInstitute(): Constructor to initialize courses and offers.

-> getCourses(): Returns the array of available courses.

-> getOffers(): Returns the array of ongoing offers.

-> enrollStudentInCourse(int courseId, String studentName): Simulates the enrollment process and prints a message when a student -> enrolls in a course.



class Student:

Attributes:

-> name (String): Name of the student.

-> institute (EducationInstitute): Reference to the education institute where the student interacts.



Methods:

-> Student(String name, EducationInstitute institute): Constructor to initialize the student with their name and the education institute reference.

-> viewCoursesAndFees(): Displays the available courses and their fees.

-> viewOffers(): Displays the ongoing offers.

-> enrollInCourse(int courseId): Enrolls the student in the specified course using the education institute's enrollment process.



class Main :



The EducationInstituteApp class is the main program that simulates concurrent student interactions using threads. It creates an education institute, initializes students, and allows them to view course details, ongoing offers, and enroll in courses concurrently without disturbing the execution flow of each thread.



Instructions for Students:

-> Implement the above classes and their methods following the given specifications.

-> Create an instance of EducationInstitute, and initialize courses and offers with hardcoded data for simplicity.

-> Create two students: "John" and "Alice". Allow them to view available courses, check ongoing offers, and enroll in their preferred courses concurrently using threads.

-> Use the Thread class to simulate concurrent student interactions. Ensure that the system provides a responsive user experience for multiple students.

-> Test your program with multiple executions and verify that students can view course details, offers, and enroll without conflicts.

-> Feel free to enhance the program with additional features or error handling to further improve its functionality.



[Note : Include appropriate comments and use meaningful variable names to make your code more readable and understandable.]



Sample Output :



Available Courses:

1. Mathematics - Fee: Rs.1000.0

2. Science - Fee: Rs.1200.0

3. English - Fee: Rs.900.0

Ongoing Offers:

Special discount: Get 20% off on all courses!

Limited time offer: Enroll in any two courses and get one course free!

Virat has enrolled in the course: Mathematics



Available Courses:

1. Mathematics - Fee: Rs.1000.0

2. Science - Fee: Rs.1200.0

3. English - Fee: Rs.900.0

Ongoing Offers:

Special discount: Get 20% off on all courses!

Limited time offer: Enroll in any two courses and get one course free!

Dhoni has enrolled in the course: Science


5 files :
---------
Course.java
------------
package com.ravi.lab;

public class Course {
	private int courseId;
	private String courseName;
	private double courseFee;

	public Course(int courseId, String courseName, double courseFee) {
		super();
		this.courseId = courseId;
		this.courseName = courseName;
		this.courseFee = courseFee;
	}

	public int getCourseId() {
		return courseId;
	}

	public String getCourseName() {
		return courseName;
	}

	public double getCourseFee() {
		return courseFee;
	}

	@Override
	public String toString() {
		return "Course [courseId=" + courseId + ", courseName=" + courseName + ", courseFee=" + courseFee + "]";
	}
	
	

}

Offer.java
----------

package com.ravi.lab;

public class Offer {
	private String offerText;

	public Offer(String offerText) {
		super();
		this.offerText = offerText;
	}

	public String getOfferText() {
		return offerText;
	}

}

EducationInstitute.java
-------------------------

package com.ravi.lab;

public class EducationInstitute {
	private Course[] courses;
	private Offer[] offers;

	public EducationInstitute(Course[] courses, Offer[] offers) {
		super();
		this.courses = courses;
		this.offers = offers;
	}

	public Course[] getCourses() {
		return courses;
	}

	public Offer[] getOffers() {
		return offers;
	}
	
	public void enrollStudentInCourse(int courseId, String studentName)
	{
		for(int i=0; i<courses.length; i++)
		{
			if(courseId == courses[i].getCourseId())
			{
				System.out.println(studentName+" enrolled in :"+courses[i].getCourseName());
			}
		}
		
	}

}

Student.java
------------
package com.ravi.lab;

public class Student {
	private String studentName;
	private EducationInstitute educationInstitute;

	public Student(String studentName, EducationInstitute educationInstitute) {
		super();
		this.studentName = studentName;
		this.educationInstitute = educationInstitute;
	}

	public void viewCoursesAndFees()
	{
		Course[] courses = educationInstitute.getCourses();
		for(Course course : courses)
		{
			System.out.println(course.getCourseId()+" : "+course.getCourseName()+" : "+course.getCourseFee());
		}
	}
	
	public void viewOffers()
	{
		Offer[] offers = educationInstitute.getOffers();
		
		for(Offer offer : offers)
		{
			System.out.println(offer.getOfferText());
		}
		
		
	}
	
	public void enrollInCourse(int courseId)
	{
		educationInstitute.enrollStudentInCourse(courseId, studentName);
	}	
}

Main.java
---------

package com.ravi.lab;

public class Main {

	public static void main(String[] args) throws InterruptedException 
	{
		Course [] courses = new Course[3];
		courses[0] = new Course(1, "Java", 1000);
		courses[1] = new Course(2, ".NET", 1200);
		courses[2] = new Course(3, "Python", 900);
		
		Offer [] offers = new Offer[2];
		offers[0]= new Offer("Special discount: Get 20% off on all courses!");
		offers[1] = new Offer("Limited time offer: Enroll in any two courses and get one course free!");
		
		EducationInstitute ei = new EducationInstitute(courses, offers);
		
		Student virat = new Student("Virat", ei);
		Student dhoni = new Student("Dhoni", ei);
		Student sachin = new Student("Sachin", ei);
		
		Thread t1 = new Thread()
		{
		 @Override
		 public void run()
		 {
			 System.out.println("Available courses and Fess :");
			 virat.viewCoursesAndFees();
			 virat.viewOffers();
			 virat.enrollInCourse(1);
		 }		
			
		};
		
		
		Thread t2 = new Thread()
		{
		 @Override
		 public void run()
		 {
			 System.out.println("Available courses and Fess :");
			 dhoni.viewCoursesAndFees();
			 dhoni.viewOffers();
			 dhoni.enrollInCourse(2);
		 }		
			
		};
		
		Thread t3 = new Thread()
		{
		 @Override
		 public void run()
		 {
			 System.out.println("Available courses and Fess :");
			 sachin.viewCoursesAndFees();
			 sachin.viewOffers();
			 sachin.enrollInCourse(3);
		 }		
			
		};
		
        t1.start();		
		t1.join();
		System.out.println("------------------------------");
		t2.start();
		t2.join();
		System.out.println("------------------------------");
		t3.start();
		
	}

}
=================================================================

Que-1)
----------------------------
class NewPlatForm2
{
    public static void main(String args[])
    {
      {
         new Thread()
         {
            public void run()
              {
            	for(int i=1;i<=(3^5);i++)
            	{
                System.out.println("Enjoy Your NewPlatForm..."+i);
                break;
            	}
              }
         }.start();

        new Thread()
           {
              public void run()
               {
            	  for(int i=1;i<=(3^5);i++)
              	{
            		  if(i==(3^4))
                  System.out.println("Experience this NewPlatForm..."+i);
              	}
               }
           }.start();

      }
   } 
}

A)Enjoy Your NewPlatForm...1
  Experience this NewPlatForm...3

B)Compile time error

C)Enjoy Your NewPlatForm...1

D)No output

Ans =>c
________________________________________________________________________
Que-2)
---------------------------
class NewPlatForm3
{
   public static void main(String args[])
     {
       Runnable r1=new Runnable()
        {
          public void run()
           {
             System.out.println("How about your NewPlatForm?");
           }
        };

       Runnable r2=new Runnable()
          {
             public void run()
               {
                  System.out.println("Are you Enjoying NewPlatform?");
               }
           };
           Thread t1=new Thread(r1);
           Thread t2=new Thread(r2);

          t1.start();
          t2.start();
      }
}
A)Are you Enjoying NewPlatform?
  How about your NewPlatForm?

B)How about your NewPlatForm?
  Are you Enjoying NewPlatform?

c)Only A

D)Only B

E)Both A and B

Ans =>E
____________________________________________________________________
Que-3
---------------------
class Test extends Thread
{
	public void run()
	{
		for(int i=0; i<=3; i++)
		{
			System.out.println("Hello Welcome here.."+i);
		}
	}
}
class NewPlatForm1
{
	public static void main(String[] args) 
	{
		Test t = new Test();
		t.start();
                Test t2= new Test();
		t.start();
	}
}
       A)  Hello Welcome here..0
           Hello Welcome here..1
           Hello Welcome here..2
           Hello Welcome here..3

        B) Hello Welcome here..0
           Hello Welcome here..1
           Hello Welcome here..0
           Hello Welcome here..1
           Hello Welcome here..2
           Hello Welcome here..3
           Hello Welcome here..2
           Hello Welcome here..3

        C) IllegalThreadStateException

        D) Compililation error
Ans =>c
____________________________________________________________________
Que-4)
------------------------
class NewPlatForm4
{
    public static void main(String args[])
    {
      {
         new Thread()
         {
            public void run()
              {
            	for(int i=1;i<=(3^5);i++)
            	{
                System.out.println("Enjoy Your NewPlatForm..."+i);
                break;
            	}
              }
         }.start();

        new Thread()
           {
              public void run()
               {
            	  for(int i=1;i<=(3^5);i++)
              	{
            		  int n=10;
            		  if(i==(n/=n/=2))
                  System.out.println("Experience this NewPlatForm..."+i);
              	}
               }
           }.start();

      }
   } 
}

A)Enjoy Your NewPlatForm...1
  Experience this NewPlatForm...3

B)Enjoy Your NewPlatForm...1
  Experience this NewPlatForm...2

C)Experience this NewPlatForm...2
  Enjoy Your NewPlatForm...1
D)Enjoy Your NewPlatForm...1

Ans => B
___________________________________________________________________________
Que-5)
--------------------------
wait(), notify() & notifyAll() are methods of which class or interface?

A)Thread class
B)Runnable interface
C)Object
D)None
Ans => C
___________________________________________________________________________
Que-6)
-------------------------
What are valid statements for yield method?

A)yield() method when called on thread gives a hint to the thread scheduler that 
the current thread is willing to yield its current use of  processor. 
The thread scheduler is free to ignore this hint.

B)yield() method stops thread for unpredictable time.

C)yield() is a static method, hence calling Thread.yield() causes currently executing thread to yield.

D)All

Ans => D
___________________________________________________________________________
Que-7
---------------------
public class NewPlatForm6 implements Runnable {
    public void run() 
    { 
    	System.out.printf("%d", 3); 
    }
    public static void main(String[] args)
        throws InterruptedException
    {
        Thread thread = new Thread(new NewPlatForm6());
        thread.start();
        System.out.printf("%d", 1);
        thread.join();
        System.out.printf("%d", 2);
    }
}
A)123
B)213 or 231
C)132 or 312
D)321

Ans =>C
_____________________________________________________________________________
Que-8)
----------------------
class CheckingMyDaemonThread extends Thread {
	
public void run()
    {
       if (Thread.currentThread().isDaemon()) {
          System.out.println("I am daemon thread and I am working");
        }
   else {
          System.out.println("I am user thread and I am working");
        }
    }
}
class NewPlatForm7 {
  public static void main(String[] args)
    {
        CheckingMyDaemonThread t1= new CheckingMyDaemonThread();
        CheckingMyDaemonThread t2= new CheckingMyDaemonThread();
        CheckingMyDaemonThread t3= new CheckingMyDaemonThread();
        t1.start();
        t2.start();
        t3.start();
        t2.setDaemon(true);
    }
}
A)I am user thread and I am working
  I am user thread and I am working
  I am user thread and I am working

B)I am daemon thread and I am working
  I am user thread and I am working
  I am user thread and I am working

C)Compilation error

D)IllegalThreadStateException

Ans =>D(doubt)
___________________________________________________________________________
Que-9)
---------------------------
class TickTock {
	int count;
	public synchronized void increment()
	{
		count++;
	}
}
class NewPlatForm8 {
	public static void main(String[] args) throws Exception
	{
		TickTock tt = new TickTock();
		Thread t1 = new Thread(new Runnable() {
			public void run()
			{
				for (int i = 0; i < 100000; i++) {
					tt.increment();
				}
			}
		});
		Thread t2 = new Thread(new Runnable() {
			public void run()
			{
				for (int i = 0; i < 100000; i++) {
					tt.increment();
				}
			}
		});
                t1.start();
		t2.start();
		t1.join();
		t2.join();
		System.out.println("Count : " + tt.count);
	}
}
A)Count : 199999
B)Count : 99999
C)Count : 200000
D)Count : 0

Ans => C
___________________________________________________________________________
Que-10)
----------------------------
class TickTock {
	int count;
	public synchronized void increment()
	{
		count++;
	}
}
class NewPlatForm8 {
	public static void main(String[] args) throws Exception
	{
		TickTock tt = new TickTock();
		Thread t1 = new Thread(new Runnable() {
			public void run()
			{
				for (int i = 0; i < 100000; i++) {
					tt.increment();
				}
			}
		});
		Thread t2 = new Thread(new Runnable() {
			public void run()
			{
				for (int i = 0; i < 100000; i++) {
					tt.increment();
				}
			}
		});
                t1.start();
		t2.start();
		t1.join();
		System.out.println("Count : " + tt.count);
	}
}
A)Count : 194145
B)Count : 191433
C)Count : only A
D)Count : Both A & B
E)Count : 0 or 200000

Ans => D
___________________________________________________________________________
Que-11)
----------------------
public class NewPlatForm9
{
    public static void main(String[] args) throws InterruptedException
    {
        final PC pc = new PC();
        Thread t1 = new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                try
                {
                    pc.produce();
                }
                catch(InterruptedException e)
                {
                    e.printStackTrace();
                }
            }
        });
 
        Thread t2 = new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                try
                {
                    pc.consume();
                }
                catch(InterruptedException e)
                {
                    e.printStackTrace();
                }
            }
        });
  
        t1.start();
        t2.start();
  
        t1.join();
        t2.join();
    }
    public static class PC
    {
        public void produce()throws InterruptedException
        {
            synchronized(this)
            {
                System.out.println("producer thread running");
                wait();
                System.out.println("Resumed");
            }
        }
        public void consume()throws InterruptedException
        {
            Thread.sleep(1000);
            Scanner s = new Scanner(System.in);
            synchronized(this)
            {
                System.out.println("Waiting for return key.");
                s.nextLine();
                System.out.println("Return key pressed");
                notify();
                Thread.sleep(2000);
            }
        }
    }
}

A)producer thread running

B)Waiting for return key.

C)producer thread running
  Waiting for return key.

D)producer thread running
  Waiting for return key.

  Return key pressed
  Resumed

Ans => D
___________________________________________________________________________
Que-12
--------------------- 
        public class Test implement Runnable
        {

	public static void main(String[] args) 
	{
	     Thread t= new Thread(this);
	     t.start();

	}
	public void run()
	{
		System.out.println("test");
	}

      }
    

 A :  The program does not compile because this connot be referenced in a static
       method.

 B : The program compiles fine, but it does not print anything because t does 
       not invoke the run () method.

 C : The program compiles and runs fine and displays test on the consol.
  
 D : None of the above.

Ans. A (doubt) 
................................................................................
Que :-13
---------------------
    public class  Test extends Thread
 {
	 public static void main(String[] args) 
	 {
		Test t = new Test();
		t.run();
		t.start();
	}
	 public void run ()
	 {
		 System.out.println("run-test");
	 }
 }


A. run-test run-test

B. run-test

C. Compilation fails due to an error on line 4

D. Compilation fails due to an error on line 7

E. None of these

Ans:  A
................................................................................
Que :-14
-----------------------------
      class  A implements Runnable
       {
	  public void run()
	  {
		  System.out.println("run-a");
	  }
	 
       }
       public class Test 
        {
	  public static void main(String[] args)
	  {
		  A a= new A();
		  Thread t= new Thread(a);
		      t.start();
		      t.start();
		
	}
    }

    A:run-a

    B:run-a run-a

    C:Compilation fails with an error at line 6

    D:Compilation succeed but Runtime Exception

    E:None of these

 Ans.D
................................................................................         
 Que:-15
-----------------------
       class MyThread extends Thread {
	   public void run() {
	      System.out.print("Child ");
	   }
	}

	public class Test {
	   public static void main(String[] args) 
	                 throws InterruptedException {
	      MyThread t = new MyThread();
	      t.start();
	      t.join();
	      System.out.print("Main ");
	   }
	}
 A: Main Child

 B: Child Main

 C: Main Main

 D: Child Child

Ans:B
................................................................................
Que:-16)
------------------
       class MyThread extends Thread {
	   public static Thread mt;

	   public void run() {
	      try {
	         mt.join();
	      } catch(InterruptedException ie) {}
	      System.out.print("Child ");
	   }
	}

	public class Test {
	   public static void main(String[] args) 
	                 throws InterruptedException {
	      MyThread.mt = Thread.currentThread();
	      MyThread t = new MyThread();
	      t.start();
	      Thread.sleep(1000);
	      System.out.print("Main ");
	   }
	}

  
A: Main Child
B: Child Main
C: Main Main
D Child Child

Ans: A(doubt)
...............................................................................
Que:-17)
------------------
    
     class MyThread extends Thread {
   public static Thread mt;

   public void run() {
      try {
         mt.join();
      } catch(InterruptedException ie) {}
      System.out.print("Child ");
   }
}

public class Test {
   public static void main(String[] args) 
                 throws InterruptedException {
      MyThread.mt = Thread.currentThread();
      MyThread t = new MyThread();
      t.start();
      t.join();
      System.out.print("Main ");
   }
}
    
   A: Main Child
   B: Child Main
   C: Waiting for each other to complete the execution
   D: Deadlock
  
   Ans:C
................................................................................
Que-18)
------------------
What is the output of below program

public class ThreadPriority extends Thread {

public void run() {
System.out.println(Thread.currentThread().getPriority());
}

public static void main(String[] args)
throws InterruptedException {

ThreadPriority t1 = new ThreadPriority();
ThreadPriority t2 = new ThreadPriority();

t1.start();
t2.start();

}
}

A) compile time as two time start method call
B) 5 5
C) 5
D) None of these

Ans:B
_____________________________________________________________________________________________
Que-19)
-------------------------
What is the output of below program
class MyThread extends Thread{
public void run(){
System.out.println("thread running....");
}
public static void main(String args[]){
MyThread obj=new MyThread();
obj.start();
}
}

A) Blank screen 
B) thread running....
C) Compile time error
D) @override is compulsary to write in run

Ans:B
_____________________________________________________________________________________________
Que-20)
--------------------------
How can you explicitly set the priority of a thread?

A) By calling the setThreadPriority(int priority) method.
B) By setting the priority field directly on the Thread instance.
C) By calling the setPriority(int priority) method on the Thread instance.
D) By passing the desired priority as a parameter to the start() method.

Answer: C) 
_____________________________________________________________________________________________
Que-21)
---------------------------
What is the range of values for the thread priority in Java?

A) 1 to 5
B) 1 to 10
C) 0 to 100
D) -10 to 10

Answer: B) 1 to 10
__________________________________________________________________________________________
Que-22)
--------------------------
What is the output of below program
import java.io.*;
class MyThread extends Thread{
public boolean stop=true;
public void run(){
for(int i=1;i<3;i++){
System.out.println(i);
if(stop == false){
return;
}
}
}
}
class Use{
public static void main(String args[])throws IOException{
MyThread mt=new MyThread();
mt.start();
System.out.print("Press Enter to Stop Thread :\n");
System.in.read();
mt.stop=false;
}
}

A)Press Enter to Stop Thread : 1 2
B)Press Enter to Stop Thread : 2
C)Blank Screen
D)Compile time error

Ans:A
_____________________________________________________________________________________________
Que-23)
-----------------------------
What is the output of below program
class MyThread extends Thread {
public void run(){
for(int i=1;i<3;i++){
try{
Thread.sleep(2000);//two second
System.out.println(i);
}catch(InterruptedException ie){
ie.printStackTrace();
}
}
}
public static void main(String[] args)
{
MyThread mt=new MyThread();
mt.start();
}
}

A) Exception Occured and catch executed 
B) 2
C) 1 2
D) Compile time error 

Ans:C
_____________________________________________________________________________________________
Que-24)
-----------------------------
What is the output of below program
class MyThread extends Thread
{
public void run()
{
for(int i=0;i<=3;i++)
System.out.println(i);
}
public static void main(String[] args)
{
MyThread obj =new MyThread();
Thread t1 = new Thread(obj);
Thread t2 = new Thread(obj);
t1.setPriority(2);
t2.setPriority(Thread.NORM_PRIORITY);
t1.start();
t2.start();
}
}

A) concurrent result as run will call 2 time.
B) sequential way the run method will execute.
C) Compile time error.
D) 0 1 2 

Ans: A
_____________________________________________________________________________________________
Que-25)
----------------------------
What is the output of below program
class DaemonTest extends Thread  {
public void run(){
if(Thread.currentThread().isDaemon()){
System.out.println("Daemon thread is running");
}else{
System.out.println("Not Running");
}
}
public static void main(String[] args) {
DaemonTest obj = new DaemonTest();
obj.setDaemon(true);
obj.start();
}
}

A)Not Running
B)Daemon thread is running
C)Blank screen 
D)None of these blank screen 

Ans: B
_____________________________________________________________________________________________
Que-26)
-----------------------------
What is the output of below program
public class MyThread implements Runnable {
public void run() {
System.out.println("running...");
}
public static void main(String[] args) {
Thread thread = new Thread(new MyThread());
thread.start();
System.out.println(thread.isDaemon());
}

}

A) true running
B) false running
C) compile time error
D) None of these

Ans: B
_____________________________________________________________________________________________
Que-27)
------------------------------
What is the output of below program
class ThreadGroupTest extends Thread{
public void run(){
System.out.println("Thread is running");
}
public static void main(String[] args){
ThreadGroup tg = new ThreadGroup("First Group");
ThreadGroupTest obj=new ThreadGroupTest();
Thread t1=new Thread(tg,obj,"First Thread");
Thread t2=new Thread(tg,obj,"Second Thread");
Thread t3=new Thread(tg,obj,"Third Thread");
tg.setMaxPriority(7);
System.out.println(tg.getName());
}
}

A) First Group

B) First Thread Second Thread Third Thread

c) compile time error

D) None of these

Ans: A
_________________________________________________________________________________________
Que-28)
---------------------------------
class MyThread extends Thread{
public void run(){
System.out.println("thread running....");
}
public static void main(String args[]){
    Object obj=new Object();
    obj.start();
    MyThread obj1=new MyThread();
    obj1.start();
}
}

A) thread running
B) Compile time error
C) thread running 2 time executed
D) None of these

Ans: A(doubt)
 iam getting B
unresolved start() in Object class
_____________________________________________________________________________________________
Que-29)
-----------------------------

class AscendingAndDescendingThreads extends Thread{
	public void run(){
		for(int i=1;i<=2;i++){
		System.out.println(“run:”+i);
}
}
}

class TestA&D{
	public static void main (String []args){
		for(int i=3;i<=5;i++){
		System.out.println(“main:”+i);
}
}	
}

A) main:3, main:4, main:5, run:1, run:2.
B) Concurrent result
C) main:3 ,main:4 
D) Compile time error

Ans: A
There is no option
output is
_____________________________________________________________________________________________
Que-30)
----------------------------
What is the difference between a process and a thread?

A) A process has its own memory space, while threads share the same memory space.
B) A process can execute multiple tasks concurrently, while threads can execute only one task at a time.
C) A process is a high-level abstraction, while threads are a low-level implementation detail.
D) A process is a single unit of execution, while a thread is a collection of related processes.

Answer: A) A process has its own memory space, while threads share the same memory space.

====================================================================================================

Objective:
Design a COVID-19 vaccine booking application that allows users to check their eligibility based on age and health conditions. Users who meet the eligibility criteria can book a dose, and the application should handle concurrent user interactions using threads.

Instructions:

1.Implement the VaccineEligibility class with the following properties :


-> private int age: The age of the user.

-> private boolean hasHealthCondition: A boolean indicating whether the user has a health condition.

-> Implement a constructor that takes age and health condition as parameters and initializes the class properties.

-> Implement the isEligible() method within the VaccineEligibility class to check if a user is eligible for the vaccine. A user is eligible if their age is 18 years or above and either their age is less than 60 years or they have a health condition.



2. Implement the DoseBooking class with the following property:



-> private boolean booked: A boolean indicating whether the user has booked a dose.

-> Implement bookDose() within the DoseBooking class to book a dose. If the dose is already booked, throw a RuntimeException with the message "Dose already booked."

-> Implement isDoseBooked() within the DoseBooking class to check if the user has booked a dose.



3.Define the User class with the following properties:



-> private String name: The name of the user.

-> private VaccineEligibility eligibility: An instance of the VaccineEligibility class to check the user's eligibility.

->  private DoseBooking doseBooking: An instance of the DoseBooking class to manage dose booking for the user.

-> Implement a constructor that takes the user's name, age, and health condition as parameters and initializes the class properties.



-> Implement the isEligible() method within the User class to check if the user is eligible for the vaccine by using the isEligible() method of the VaccineEligibility class.

-> Implement the bookDose() method within the User class to book a dose for the user if they are eligible. If the user is not eligible, throw a RuntimeException with the message "You are not eligible for the vaccine."

-> Implement the isDoseBooked() method within the User class to check if the user has already booked a dose by using the isDoseBooked() method of the DoseBooking class.



4. In the CoronaVaccineApp class:

-> Create two User objects: user1 and user2.

-> Simulate concurrent user interactions using threads by creating two threads (thread1 and thread2) with anonymous runnable instances representing the user interactions.



Sample Output:

Dose booked successfully for Virat

Kapil is not eligible for the vaccine.


package thread_miniproject;

public class VaccineEligibility2 {
private int age;
private boolean hasHealthCondition;
public VaccineEligibility2(int age,boolean hasHealthCondition) {
	this.age=age;
	this.hasHealthCondition=hasHealthCondition;
}
public boolean isEligible() {
	if(this.age>=18&&age<60)
		return true;
	else
		return false;
}
public int getAge() {
	return age;
}
public boolean isHasHealthCondition() {
	return hasHealthCondition;
}

}
-----------------------------------------------
package thread_miniproject;

public class DoseBooking2 {
private boolean booked;

public DoseBooking2(boolean booked) {
	super();
	this.booked = booked;
}
public void bookDose() throws RuntimeException {
	if(booked)
	throw new RuntimeException("Dose already booked.");
	
}
public boolean isDoseBooked() {
		return booked;
}


}
-----------------------------------------
package thread_miniproject;

public class User2 {
private String userName;
private VaccineEligibility2 eligibilty;
private DoseBooking2 dosebooking;

public User2(String userName, VaccineEligibility2 eligibilty, DoseBooking2 dosebooking) {
	super();
	this.userName = userName;
	this.eligibilty = eligibilty;
	this.dosebooking = dosebooking;
}
public boolean isEligible() {
	return eligibilty.isEligible();
	}
public  void bookDose() throws Exception {
	try {
		if(!isEligible()) {
			throw new RuntimeException(userName+"is not eligible for the vaccine.");
		}
		else if(isDoseBooked()) {
			throw new RuntimeException(userName+"Dose already booked");
		}
		else 
			System.out.println("dose is booked successfully for"+userName);
		}
	catch(Exception e) {
		System.out.println(e.getMessage());
	}
}
public boolean isDoseBooked()  {
	return dosebooking.isDoseBooked();
}
}
---------------------------------
package thread_miniproject;

public class CoronaVaccineApp2 {

	public static void main(String[] args) throws Exception {
		VaccineEligibility2 v1=new VaccineEligibility2(34,true);
		DoseBooking2 d1=new DoseBooking2(false);
		VaccineEligibility2 v2=new VaccineEligibility2(20,true);
		DoseBooking2 d2=new DoseBooking2(false);
		User2 u1=new User2("ravali",v1,d1);
		User2 u2=new User2("ravi",v2,d2);
		Thread t1=new Thread(()->
		{
		try {
			u1.bookDose();
		} catch (Exception e) {
			e.printStackTrace();
		}	
		}); 
		t1.start();
	  Runnable r1=new Runnable() {

		@Override
		public void run() {
			try {
				u2.bookDose();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
			
		};
		 Thread t2=new Thread (r1);
		 t2.start();
	  }
}

============================================================================
w a p that prof demon thread are automatically ended after ending the user thread

package com.threads;


	public class DaemonThread34 
	{
	  public static void main(String[] args) 
		{
		    System.out.println("Main Thread Started...");

	        Thread daemonThread = new Thread(() -> 
			{
	            while (true) 
				{
	                System.out.println("Daemon Thread is running...");
	                try 
					{
	                    Thread.sleep(1000);
	                } 
					catch (InterruptedException e) 
					{
	                    e.printStackTrace();
	                }
	            }
	        });

	        daemonThread.setDaemon(true); 
	        daemonThread.start();

	        
	        Thread userThread = new Thread(() -> 
			{
	            for (int i = 1; i <= 9; i++) 
				{
	                System.out.println("User Thread: " + i);
	                try 
					{
	                    Thread.sleep(2000);
	                } 
					catch (InterruptedException e) 
					{
	                    e.printStackTrace();
	                }
	            }
	        });

	        userThread.start();

	        System.out.println("Main Thread Ended...");
	    }
	}


===============================================================================
Develop a program to display value 1-x from multiple threads concurrently
take x value from other programmer whoever starting the thread Executing different logic from multiple thread concurrently.
===========================================================================================

 A typical example of simultaneous threads is that of an online reservation system. Multiple users are trying to book seats at the same time. In this problem, we are writing a code for railway reservation system. 


A class Customer is given to you which is implemnting Runnable interface

Instance variables of Customer class:

availableSeat : int : private

wantedSeat : int : private 

Initialize the wantedSeat variable through Customer 

Override the run method to write the ticket booking logic so at a time only one person can book the ticket

Create another class TicketBooking which contains a main method, Create at-least two threads two book the railway ticket.


package com.threads;

	class Customer39 implements Runnable
	{
		private int availableSeat = 10;
		private int wantedSeat;
		
		public Customer39(int wantedSeat)
		{
			this.wantedSeat = wantedSeat; 
		}
		
		String name = null;
		@Override
		public void run() 
		{
			
			
			if(availableSeat >= wantedSeat)
			{
				if(wantedSeat>1) {
				name = Thread.currentThread().getName();
				System.out.println(wantedSeat +" seats is reserved for "+name);		
				availableSeat = availableSeat-wantedSeat;
			    }
			    else {
				name = Thread.currentThread().getName();
				System.out.println(wantedSeat +" seat is reserved for "+name);		
				availableSeat = availableSeat-wantedSeat;
			     }
		}
		else {
			
			
				name = Thread.currentThread().getName();
				System.err.println("Sorry!!"+name+" berth is not available");
			}
			
		}
		
	}

	public class RailwayReservation39 
	{
		public static void main(String[] args) throws InterruptedException
		{
			Customer39 c1 = new Customer39(5);
			Customer39 c2 = new Customer39(1);
			Thread t1 = new Thread(c1,"Virat");
			Thread t2 = new Thread(c2,"Rohit");
			
			t1.start(); 
			t1.join();
			t2.start();

		}

	}


=================================================================

Your task is to create a Java program that prints prime numbers and even numbers between 1 and 100 in a multithreaded manner. The rule is that after printing one prime number, the program should print one even number, and this pattern should continue until reaching 100.

Instructions:

NumberPrinter Class:

Create a NumberPrinter class with the following methods:
printPrime(): A synchronized method that prints prime numbers and notifies the waiting thread to print even numbers.
printEven(): A synchronized method that prints even numbers and notifies the waiting thread to print prime numbers.
isPrime(int num): A helper method that checks if a given number is prime.

printPrime Method:
Inside the printPrime method, use a loop to print prime numbers. If a number is prime, print it, increment the current number, and notify the waiting thread. If the number is not prime, wait for the even thread to notify.

printEven Method:
Inside the printEven method, use a loop to print even numbers. If a number is even, print it, increment the current number, and notify the waiting thread. If the number is prime, wait for the prime thread to notify.

isPrime Method:
Implement the isPrime method to check if a given number is prime.


Multithreaded Execution:
In the MultithreadedNumberPrinter class (main), create an instance of NumberPrinter.
Create two threads: one for printing prime numbers and the other for printing even numbers.
Start both threads.

Output:
Run the program and observe the interleaved printing of prime and even numbers between 1 and 100, following the specified rule.

Notes:

Utilize the wait and notify mechanism for synchronization between prime and even threads.
The isPrime method is a simple implementation to check if a number is prime. Adjustments can be made based on specific prime number generation requirements.
Document your code with comments to explain the purpose of each method and the overall flow.
Implement the described program following the provided instructions. The output should demonstrate the interleaved printing of prime and even numbers, satisfying the specified rule.

Sample Output :
---------------------
Prime: 2
Even: 2
Prime: 3
Even: 4
Prime: 5
Even: 6
Prime: 7
Even: 8
Prime: 11
Even: 10
Prime: 13
Even: 12
Prime: 17
Even: 14
Prime: 19
Even: 16
Prime: 23
Even: 18

=================================================================

1) write a java program to create duplicate object by using clone method of object class
===================================================================
Display a program to execute three tasks concurrently
* task 1- Display 1-10
* task 2-Display 10-20
* task 3-Display 20-30
======================================================

Your task is to create a Java program that simulates a scenario where multiple customers are making purchases at a shopping mall, and the program tracks which customer completes the billing process first. In this scenario, synchronization is achieved without using explicit locks or concurrency utilities.

Instructions:

ShoppingMall Class:

Create a ShoppingMall class with the following method:
makeBill(String customerName): A synchronized method simulating the billing process. Ensure that only one customer can execute this method at a time.
Simulation Details:
In the makeBill method, print messages to indicate when a customer starts and completes the billing process. Use the following format:
<CustomerName> started making a bill...
<CustomerName> completed making the bill!
Implement a sleep period in the makeBill method (e.g., Thread.sleep(3000)) to simulate the time it takes for a customer to complete billing.

Customer Class:

Create a Customer class that implements the Runnable interface. Include the following members:
name (String): The name of the customer.
shoppingMall (ShoppingMall): A reference to the shopping mall.
run(): Implement the run method from the Runnable interface. Inside this method, call the makeBill method of the shopping mall to simulate the billing process.

ShoppingMallSimulation Class (Main):

In the main method, create an instance of ShoppingMall.
Create an array of Customer objects, each initialized with a unique name and the reference to the shopping mall.
Create an array of Thread objects to represent each customer's thread.
Start each customer thread and wait for all customer threads to complete using the join method.



=================================================================



=================================================================





Your task is to create a Java program that simulates a scenario where multiple customers are making purchases at a shopping mall, and the program tracks which customer completes the billing process first. In this scenario, synchronization is achieved without using explicit locks or concurrency utilities.

Instructions:

ShoppingMall Class:

Create a ShoppingMall class with the following method:
makeBill(String customerName): A synchronized method simulating the billing process. Ensure that only one customer can execute this method at a time.
Simulation Details:
In the makeBill method, print messages to indicate when a customer starts and completes the billing process. Use the following format:
<CustomerName> started making a bill...
<CustomerName> completed making the bill!
Implement a sleep period in the makeBill method (e.g., Thread.sleep(3000)) to simulate the time it takes for a customer to complete billing.

Customer Class:

Create a Customer class that implements the Runnable interface. Include the following members:
name (String): The name of the customer.
shoppingMall (ShoppingMall): A reference to the shopping mall.
run(): Implement the run method from the Runnable interface. Inside this method, call the makeBill method of the shopping mall to simulate the billing process.

ShoppingMallSimulation Class (Main):

In the main method, create an instance of ShoppingMall.
Create an array of Customer objects, each initialized with a unique name and the reference to the shopping mall.
Create an array of Thread objects to represent each customer's thread.
Start each customer thread and wait for all customer threads to complete using the join method.

===========================================================================

We have Three classes named as MovieTickets, Customer and Test

For MovieTickets class which is implemented by Runnable interface

Instance Variables:

ticketAvailable :int: default : Initialize to desire/ any number

customer: int: default

Methods:

movieTickets(int) : Constructor with one parameter

run(): override from Runnable interface

Local Variable:

customerName :String: Initialize the variable form getName() of thread

if the tickets are available it prints 'movie tickets are allotted to customerName' or else it prints 'movie tickets are not available'



For example 3 movie tickets are available for 3 members so, these three are allocated to particular persons using threads. If 3 tickets are available for 4 members so movie tickets are not allocated to anyone.

For Customer class


Create an object for MovieTickets class with pass the argument

Instance Variables:

thread1 : Thread

thread2 : Thread

thread3 : Thread

Methods:

movieExecute() : void

create an object for each Instance variable with new keyword and store the MovieTickets Object by using Thread(Runnable). 

we need to setNname() for each Thread variable

Then start all the Threads from this variable


For Test class

Test class having main method and create a method for Customer class

Use this class to test your solution's classes and methods.



=================================================================





We have Three classes named as MovieTickets, Customer and Test

For MovieTickets class which is implemented by Runnable interface

Instance Variables:

ticketAvailable :int: default : Initialize to desire/ any number

customer: int: default

Methods:

movieTickets(int) : Constructor with one parameter

run(): override from Runnable interface

Local Variable:

customerName :String: Initialize the variable form getName() of thread

if the tickets are available it prints 'movie tickets are allotted to customerName' or else it prints 'movie tickets are not available'



For example 3 movie tickets are available for 3 members so, these three are allocated to particular persons using threads. If 3 tickets are available for 4 members so movie tickets are not allocated to anyone.

For Customer class


Create an object for MovieTickets class with pass the argument

Instance Variables:

thread1 : Thread

thread2 : Thread

thread3 : Thread

Methods:

movieExecute() : void

create an object for each Instance variable with new keyword and store the MovieTickets Object by using Thread(Runnable). 

we need to setNname() for each Thread variable

Then start all the Threads from this variable


For Test class

Test class having main method and create a method for Customer class

Use this class to test your solution's classes and methods.



===================================================================

Program 1: Implement a Java program that simulates a producer-consumer scenario using multithreading. The producer thread should generate random numbers and add them to a shared buffer, while the consumer thread should remove numbers from the buffer and display them. Ensure proper synchronization to avoid race conditions.


import java.util.LinkedList;

public class ProducerConsumerExample {
    public static void main(String[] args) throws InterruptedException {
        final PC pc = new PC();

        Thread producerThread = new Thread(() -> {
            try {
                pc.produce();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });

        Thread consumerThread = new Thread(() -> {
            try {
                pc.consume();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });

        producerThread.start();
        consumerThread.start();

        producerThread.join();
        consumerThread.join();
    }

    public static class PC {
        private LinkedList<Integer> buffer = new LinkedList<>();
        private int capacity = 2;

        public void produce() throws InterruptedException {
            int value = 0;
            while (true) {
                synchronized (this) {
                    while (buffer.size() == capacity)
                        wait();

                    System.out.println("Producer produced: " + value);
                    buffer.add(value++);
                    notify();
                    Thread.sleep(1000);
                }
            }
        }

        public void consume() throws InterruptedException {
            while (true) {
                synchronized (this) {
                    while (buffer.size() == 0)
                        wait();

                    int val = buffer.removeFirst();
                    System.out.println("Consumer consumed: " + val);
                    notify();
                    Thread.sleep(1000);
                }
            }
        }
    }
}

==================================================================================================================================

Program 2: Write a Java program that demonstrates the usage of thread synchronization mechanisms, such as locks or monitor. Implement a scenario where multiple threads are trying to access a shared resource concurrently, and only one thread should be allowed to access it at a time.

package threads;

public class LockDemo {
	/*Write a Java program that demonstrates the usage of thread synchronization mechanisms, such as locks or monitor. 
   Implement a scenario where multiple threads are trying to access a shared resource concurrently, 
   and only one thread should be allowed to access it at a time.
*/
	public static synchronized void printTable(int n) {
		  //synchronized (this) {
		for(int i=1;i<=10;i++) {
			System.out.println(n +"*"+i+"="+n*i+" "+Thread.currentThread().getName());
			
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				
				e.printStackTrace();
			}
			
		}
		System.out.println("-------------");
		  }
	//}
	public static void main(String[] args) {
		LockDemo d=new LockDemo();
//     Runnable r1 = () -> d.printTable(5);
//    Runnable r2 = () -> d.printTable(10);
		 Runnable r1 = () -> LockDemo.printTable(5);
	    Runnable r2 = () -> LockDemo.printTable(10);
		
		Thread t1 = new Thread(r1,"c1");    
		Thread t2 = new Thread(r2,"c2");
		t1.start();
		t2.start();
	}

}
=======================================================================================================
ArrayList is Similar to Vector so, try
---------------------------------------
Que-1)
_____________________________________________
What will be the output of the following Java code?
import java.util.*;
class VectorDemo{
public static void main(String args[]){
Vector obj = new Vector(4,2);
obj.addElement(new Integer(3));
obj.addElement(new Integer(2));
obj.addElement(new Integer(5));
System.out.println(obj.elementAt(1));
}
}
a)0 b)3
c)2 d) 5
ans:
c
______________________________________________
Que-2)
-----------------
What will be the output of the following Java code?
 import java.util.*;
 class VectorDemo 
 {
 public static void main(String args[]) 
 {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(5));
 System.out.println(obj.capacity());
 }
 }
a)2 b)3
c)4 d)6
c
_____________________________________________
Que-3)
------------------
What will be the output of the following Java code?
 import java.util.*;
 class VectorDemo 
 {
 public static void main(String args[]) {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(6));
 obj.insertElementAt(new Integer(8), 2);
 System.out.println(obj);
 }
 
}
a) [3, 2, 6]
b) [3, 2, 8]
c) [3, 2, 6, 8]
d) [3, 2, 8, 6]
d
_____________________________________________
Que-4)
------------------
What will be the output of the following Java code?
 import java.util.*;
 class VectorDemo 
 {
 public static void main(String args[]) 
 {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(5));
 obj.removeAll(obj);
 System.out.println(obj.isEmpty());
 }
 }
a)0
b)1
c)true
d) false

c
______________________________________________
Que-5)
-----------------
.What will be the output of the following Java program?
import java.util.*;
 class Array 
 {
 public static void main(String args[]) 
 {
 int array[] = new int [5];
 for (int i = 5; i > 0; i--)
 array[5-i] = i;
 Arrays.fill(array, 1, 4, 8);
 for (int i = 0; i < 5 ; i++)
 System.out.print(array[i]);
 }
 }

o/p:
public static void fill(int[] a, int fromIndex, int toIndex, int val) {
        rangeCheck(a.length, fromIndex, toIndex);
        for (int i = fromIndex; i < toIndex; i++)
            a[i] = val;
    }

5 8 8 8 1(doubt)
_______________________________________________
Que-6)
------------------
What will be the output of the following Java program?
 import java.util.*;
 class ArrayListDemo 
 {
 public static void main(String args[])
 {
 ArrayList obj1 = new ArrayList();
 ArrayList obj2 = new ArrayList();
 obj1.add("A");
 obj1.add("B");
 obj2.add("A");
 obj2.add(1, "B");
 System.out.println(obj1.equals(obj2));
 }
 }

true
______________________________________________
Que-7)
-------------------
What will be the output of the following Java program?
import java.util.ArrayList;
import java.util.List;
public class ArrayListTest {
public static void main(String[] args)
{
 List<String> list = new ArrayList<String>();
 list.add("Patna");
 list.add(0, "New York");
 list.add("Mumbai");
 list.add(2, "Sydney");
 System.out.println(list);
 }
}

[New York, Patna, Sydney, Mumbai]

________________________________________________
Que-8)
------------------
What will be the output of the following Java program?
import java.util.List;
public class ArrayListTest {
public static void main(String[] args)
{
 List<String> list = new ArrayList<String>();
 list.add("Orange");
 list.add(0, "Banana");
 
 ArrayList<String> arList = new ArrayList<>();
 arList.add("Apple");
 list.add("Grapes");
 list.addAll(3, arList);
 System.out.println(list);
 }
}

o/p:
[Banana,Orange,Grapes,Apple]
_______________________________________________
Que-9)
--------------------
What will be the output of the following Java program?
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(3, "B");
 list.add(1, "C");
 System.out.println(list);
 }
}
o/p:
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index: 3, Size: 2
	at java.base/java.util.ArrayList.rangeCheckForAdd(ArrayList.java:756)
	at java.base/java.util.ArrayList.add(ArrayList.java:481)
	at Collection.Class1.main(Class1.java:14)(doubt)
________________________________________________
Que-10)
------------------
What will be the output of the following Java program?
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(2, "B");
 list.add(1, "C");
 System.out.println(list);
 }
}
o/p:
[A, C, null, B]

_________________________________________________
Que-11)
--------------------
What is the output of the following code if there is no error in the code?
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(null);
 list.add(2, "B");
 list.add("20");
 list.add(1, "C");
 System.out.println(list);
 }
}
o/p:
[A, C, null, B, null, 20]

___________________________________________________
Que-12)
--------------------
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(null);
 list.add(2, "B");
 list.add("20");
 list.add(1, "C");
 System.out.println(list);
 }
}
o/p;
[A, C, null, B, null, 20]

-------------------------------------------------------------------------


Que-13)
--------------------
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add(12);
 list.add(16);
 list.add(34);
 list.add(78);
 list.remove(12);
 System.out.println(list);
 }
}

o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problems: 
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)

import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add("12");
 list.add("16");
 list.add("34");
 list.add("78");
 list.remove("12");
 System.out.println(list);
 }
}

o/p:
[16, 34, 78]
Que-14)
--------------------
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add('a');
 list.add('b');
 list.add('c');
 list.add('d');
 list.remove('c');
 System.out.println(list);
 }
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problems: 
	The method add(String) in the type ArrayList<String> is not applicable for the arguments (char)
	The method add(String) in the type ArrayList<String> is not applicable for the arguments (char)
	The method add(String) in the type ArrayList<String> is not applicable for the arguments (char)
	The method add(String) in the type ArrayList<String> is not applicable for the arguments (char)

	at Collection.Class1.main(Class1.java:12)
-----------------------------------------------------------------------------
public class Class1 {
	public static void main(String[] args)
	{
		ArrayList<String> list = new ArrayList<>();
		 list.add("a");
		 list.add("b");
		 list.add("c");
		 list.add("d");
		 list.remove("c");
		 System.out.println(list);
	 }


}

o/p:
[a, b, d]
------------------------------------------------------------------------
Que-15)
--------------------
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add(12);
 list.add(16);
 list.add(34);
 list.add(78);
 list.remove(Integer.valueOf(16));
 System.out.println(list);
 }
}

o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problems: 
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)
	The method add(int, String) in the type ArrayList<String> is not applicable for the arguments (int)

	at Collection.Class1.main(Class1.java:12)

public class Class1 {
	public static void main(String[] args)
	{
		ArrayList<String> list = new ArrayList<>();
		 list.add("12");
		 list.add("16");
		 list.add("34");
		 list.add("78");
		 list.remove(String.valueOf(16));
		 System.out.println(list);
	 }


}

o/p:
[12, 34, 78]

====================================================
1.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		List<String> list = Arrays.asList("goolge", "nareshIT","NareshIT","progress");
		Collections.reverse(list);
		for(String str: list)
			System.out.print(str+" ");
	}
}
A.	progress NareshIT goolge nareshIT
B.	goolge progress NareshIT nareshIT 
C.	progress NareshIT nareshIT goolge
D.	progress goolge NareshIT nareshIT 
Answer: C
---------------------------------------------------------------------
2.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<>();
		al.add("25");
		al.add("Naresh");
		al.add("A");
		al.add("37");
		Iterator<String> it = al.iterator();
		while(it.hasNext())
			System.out.print(it.next()+" ");
	}
}
A.	25 Naresh A 37
B.	A 25 Naresh 37
C.	25 A Naresh 37
D.	37 Naresh A 25
Answer: A
---------------------------------------

3.What is the output of the following Snippet
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<>();
		al.add("25");
		al.add("Naresh");
		al.add("A");
		al.add("37");
		Iterator<String> it = al.iterator();
		while(it.hasNext())
			System.out.print(it+" ");
	}
}
A.	25 Naresh A 37
B.	A 25 Naresh 37
C.	25 A Naresh 37
D.	Run time error
E.	37 Naresh A 25
Answer : D(doubt)
--------------------------------------------------
4.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<>();
		al.add("25");
		al.add("Naresh");
		al.add("A");
		al.add("37");
		al.remove(4);
		for(String str: al)
			System.out.print(str+" ");
	}
}
A.	ArrayIndexOutofBoundException
B.	IndexOutOfBoundsException
C.	25 Naresh A
D.	NullPointerException
Answer: B
-----------------------------------------------------------

5. What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<Integer> al = new ArrayList();
		for(int i=0;i<10;i++) 
		{
			al.add(i);
		}
		for(int str: al)
			System.out.print(str+" ");
	}
}
A.	0 1 2 3 4 5 6 7 8 9
B.	1 2 3 4 5 6 7 8 9
C.	1 2 3 4 5 6 7 8 10
D.	1 2 3 4 5 6 7 8
Answer: A
----------------------------------------------------
6. Choose the correct output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<Integer> al = new ArrayList();
		for(int i=5;i<10;i++) 
		{
			al.add(i);
		}
		al.remove(4);
		for(int str: al)
			System.out.print(str+" ");
	}
}
A.	4 5 6 7 8
B.	5 6 7 8
C.	4 5 6 7 8 9
D.	5 6 7 8 9
Answer: B
----------------------------------------------
7. Choose the correct output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<>();
		al.add("google");
		al.add("Naresh");
		al.add("Information");
		al.add("Technology");
		for(int i=0;i<al.size();i++) 
		{
			System.out.print(al.get(i).substring(0,6));
		}
	}
}
A.	google Inform Techno Naresh
B.	Techno  google Naresh Inform 
C.	google Naresh Techno Inform 
D.	google Naresh Inform Techno
Answer : D
------------------------------------------------------
8.Choose the correct output for the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<>();
		System.out.println(al);
	}
}
A.	null
B.	no output
C.	[]
D.	Run time error
Answer: C
-------------------------------------------------------
9.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList al = new ArrayList<>();
		al.add(5);
		al.add("");
		al.add(10);
		System.out.println(al.contains(6));
		System.out.println(al.contains(10));
		System.out.println(al.contains(null));
	}
}
A.	false true false
B.	false false false
C.	true true true
D.	true false true
Answer: A
--------------------------------------------------------------

10. What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		ArrayList al = new ArrayList<>();
		al.add(50);
		al.add(25);
		ListIterator li = al.listIterator();
		while(li.hasNext())
			System.out.println(li.next());
		li.add(22);
		System.out.println(li.hasNext());
	}
}
A.	50 25 true
B.	50 25 false
C.	25 50 false
D.	25 50 true
Answer: B
---------------------------------------------------------
11. What is the output of the following code
public class Test
{
     public static void main(String[] argv) 
     {
           Collection c = new ArrayList();
           c.add("1");
           c.add("2");
           c.add("3");
           Collection c1 = new ArrayList();
           c1.add("1");
           c.retainAll(c1);
           System.out.println(c);
     }
}
[1]
------------------------------------------------
12. What is the output of the following code
import java.util.ArrayList;
import java.util.List;

public class Test
{
      public static void main(String[] argv) 
      {
            List<String> list = new ArrayList<String>();
            list.add("a");
            list.add("b");
            list.add("c");
            System.out.println(list.indexOf("a"));
            System.out.println(list.indexOf("c"));
            System.out.println(list.indexOf("d"));
      }
}

0
2
-1
----------------------------------------------------

13. What is the output of the following code
import java.util.*;
public class Test
{
     public static void main(String[] args)
     {
           Integer int1 = new Integer(10);
           Vector vec1 = new Vector();
           LinkedList list = new LinkedList();
           vec1.add(int1);
           list.add(int1);
           if(vec1.equals(list)) 
                System.out.println("equal");
           else  
                System.out.println("not equal");
     }
}
o/p:
equal
------------------------------


14. What is the output of the following code
import java.util.*;

public class Test
{
       public static void main(String[] args) 
       {
             List<Number> list = new ArrayList<Number>();
             System.out.format("%b %b %b %d",
                 list.add(7),
                 list.add(null),
                 list.add(7),
                 list.size());
       }
}
o/p:
true true true 3(doubt)
----------------------------------------

15. What is the output of the following code
import java.util.*;

public class Test
{
       public static void main(String[] args) 
       {
            List<Number> list = new ArrayList<Number>();
            list.add(7);
            list.add(8);
            list.add(7);
            Number index = list.get(Integer.valueOf(7));
            System.out.println(index);
        }
}
o/p:
Exception in thread "main" java.lang.IndexOutOfBoundsException: Index 4 out of bounds for length 3
	at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)
	at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)
	at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)
	at java.base/java.util.Objects.checkIndex(Objects.java:359)
	at java.base/java.util.ArrayList.get(ArrayList.java:427)
	at Collection.Class1.main(Class1.java:21)

----------------------------------
16. What is the output of the following code
import java.util.*;

public class Test
{
       public static void main(String[] args) 
       {
            LinkedList<String> list = new LinkedList<String>();
            list.add("X");
            list.add("M");
            list.add("L");
            System.out.println(list.peek());
       }
}
o/p:
* Retrieves, but does not remove, the head (first element) of this list.
 X    
----------------------------------
17. What is the output of the following code
import java.util.*;
public class Test
{
 public static void main(String argv[])
	 {
    	 
    	ArrayList list = new ArrayList(); 
    	ArrayList listStr = list; 
    	ArrayList listBuf = list; 
    	listStr.add(0, "Hello"); 
    	StringBuffer buff =listBuf.get(0); 
       System.out.println(buff.toString());
    }

}
o/p:
(doubt)
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Type mismatch: cannot convert from Object to StringBuffer

	at Collection.Class1.main(Class1.java:21)

public class Class1 {
	public static void main(String[] args)
	{
		ArrayList list = new ArrayList(); 
    	ArrayList listStr = list; 
    	ArrayList listBuf = list; 
    	listStr.add(0, "Hello"); 
    	Object buff =listBuf.get(0); 
       System.out.println(buff.toString());
	 }


}

o/p;
Hello
----------------------------------
18. What is the output of the following code
import java.util.LinkedList;
import java.util.Queue;
public class Test18
{
public static void main(String... args) 
{
	Queue q = new LinkedList();
	q.add("newyork");
	q.add("ca");
	q.add("texas");
	show(q);
	}
	public static void show(Queue q) 
	{
          q.add(new Integer(11));
          while (!q.isEmpty ( ) )
          System.out.print(q.poll() + "  ");
        }
}
o/p:
Error: Unable to initialize main class Collection.Class1
Caused by: java.lang.NoClassDefFoundError: Queue
(doubt)

-------------------------------------------
public class Class1 {
	public static void main(String[] args)
	{
		LinkedList q = new LinkedList();
		q.add("newyork");
		q.add("ca");
		q.add("texas");
		show(q);
		}
		public static void show(LinkedList q) 
		{
	          q.add(new Integer(11));
	          while (!q.isEmpty ( ) )
	          System.out.print(q.poll() + "  ");
	        }
	 }

o/p:
newyork  ca  texas  11  
------------------------------------

19. What is the output of the following code
public class Test6
{
	public static void main(String[] args) 
	{
		Moof one = new Moof(8);
		Moof two = new Moof(8);
		if(one.equals(two))
		{
		System.out.println("Equal ...");
		}
		else
		{
		System.out.println("Not Equal ...");
		}
	}
}
class Moof
{
	private int moofValue;
	Moof(int val)
	{
		moofValue=val;
	}

	public int getMoofValue()
	{
		return moofValue;
	}
	public boolean equals(Object o)
	{
		if((o instanceof Moof)&&(((Moof)o).getMoofValue()==this.moofValue))
		{
			return true;
		}
		else
		{
			return false;
		}

	}
}
o/p:
Equal ...
-----------------------------------

20. What is the output of the following code
class Emp 
{
	private int age ;
	
	public Emp( int age )
	{
		super();
		this.age = age;
	}
	
	public int hashCode()
	{
		return age;
	}
}
public class Test8
{
	public static void main(String[] args) 
	{
		Emp emp1 = new Emp(23);
		System.out.println("emp1.hashCode() is :"+emp1.hashCode());


		int originalHashCode = System.identityHashCode(emp1);
		System.out.println("Original hashCode of Emp is :"+originalHashCode);
	}
}

o/p:
emp1.hashCode() is :23
Original hashCode of Emp is :1670782018

============================================================================================
Program: 1
----------------
Write a Program in Java to Perform Serialization and De-serialization
operation on ArrayList Object.
Take a BLC class Student
Instance variables
studentId – private – Integer
studentName – private – String
studentFees – private – Double
dateOfAdmission – private – Date
Take a parameterized constructor to initialize the instance variables
Take a Method getStudentObject()
Method Name - getStudentObject()
Parameter - No Parameter
Access Modifier - public and static
Return type - Student
This method should take the Student data from client, create and 
return Student object from this method.

Override toString() method to print Student class properties or 
variables.
Take an ELC class StoreObject
Inside the main method create a for loop which will read the Student 
object with user choice and Store the Student object to a file called 
Student.txt
Take another ELC class RetrieveObject
This class will retrieve the Student Object from file and print the 
Student information data.

package collection;

import java.io.Serializable;
import java.util.Date;
import java.util.Scanner;

public class BLCStudent implements Serializable {
	private Integer studentId;
	private String studentName;
	private Double studentFees;
	
	private Date dateOfAdmission;

	public BLCStudent(Integer studentId, String studentName, Double studentFees, Date dateOfAdmission) {
		super();
		this.studentId = studentId;
		this.studentName = studentName;
		this.studentFees = studentFees;
		this.dateOfAdmission = dateOfAdmission;
	}
  public static BLCStudent getStudentObject() {
	  Scanner sc=new Scanner(System.in);
	 
	  System.out.print("enter name of student: ");
	  String name=sc.nextLine();
	  System.out.println("enter student id:");
	  int id=sc.nextInt();
	  System.out.println("enter student fees:");
	  double fee=sc.nextDouble();
	  Date d=new Date();
	  
	  return new BLCStudent(id,name,fee,d);
  }
@Override
public String toString() {
	return "BLCStudent [studentId=" + studentId + ", studentName=" + studentName + ", studentFees=" + studentFees
			+ ", dateOfAdmission=" + dateOfAdmission + "]";
}
  
}
 package collection;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

public class StoreObject {

	public static void main(String[] args) throws IOException {
		FileOutputStream fout=new FileOutputStream("C:\\Batch27\\Student.txt");
		ObjectOutputStream oos=new ObjectOutputStream(fout);
		ArrayList<BLCStudent> al=new ArrayList<>();
		
		try(oos;fout) {
			for(int i=1;i<=3;i++) {
				//BLCStudent obj = BLCStudent.getStudentObject();
				al.add(BLCStudent.getStudentObject());
				
				
			}
			
			oos.writeObject(al);
			      
		} catch (FileNotFoundException e) {
			
			e.printStackTrace();
		}
		//System.out.println(al);
		System.out.println("succes");
	}

}
 package collection;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;

public class RetrieveStudentObject {

	@SuppressWarnings("unchecked")
	public static void main(String[] args) throws IOException {
		FileInputStream fin=new FileInputStream("C:\\Batch27\\Student.txt");
		ObjectInputStream ois=new ObjectInputStream(fin);
		ArrayList<BLCStudent> al= null;
       try(ois;fin){
    	   al=(ArrayList<BLCStudent>)ois.readObject();
    	  
    	  //System.out.println((char)obj);
    	  System.out.println(al);
       }
       catch(Exception e) {
    	   e.printStackTrace();
       }

	}



Program: 2
----------------
Write a Java program to convert Array to List.
A BLC class called ArrayToList is given to you.
Add a static method: convertToList(String[] inputArray) : This method 
takes an array of strings as an argument. It should convert the given 
array to a list of Strings and return this list. 
Note that the length of the list must be the same as that of the array. 
Return null for errors a null array or an empty list for an empty 
array.
An ELC Class called Tester with the main method is given to you. Use 
this class to test your solution

package collection;

import java.util.ArrayList;
import java.util.List;

class ArrayToList {
    public static List<String> convertToList(String[] inputArray) {
        if (inputArray == null) {
            return null; // Return null for a null array
        }

        List<String> resultList = new ArrayList<>();
        for (String item : inputArray) {
            resultList.add(item);
        }

        return resultList;
    }
}

public class Tester {
    public static void main(String[] args) {
        // Example usage:
        String[] array1 = {"Geeks", "forGeeks", "A Computer Portal"};
        List<String> list1 = ArrayToList.convertToList(array1);
        System.out.println("Array: " + java.util.Arrays.toString(array1));
        System.out.println("List: " + list1);

        String[] array2 = {}; // Empty array
        List<String> list2 = ArrayToList.convertToList(array2);
        System.out.println("Array: " + java.util.Arrays.toString(array2));
        System.out.println("List: " + list2);
    }
}


Program: 3
----------------
Write a java program to find duplicates in an arrayList.
A BLC class Duplicates is given to you. Add the following 
implementations in the class:
1. A List attribute called numberList. This must be a list of Integers
3
2. Getter/Setter for the list
3. Implement the No Argument constructor.
 Implement the parameter constructor.
 Implement the method getDuplicatesList():
4. This method must scan through the numberList field of the class. 
All the numbers in the list that are duplicated
 (occurs more than once) must be returned as a new List. 
 For example, if the numberList is initialized to { 
33,45,67,89,33,47,21,45}, the method should return a new list that 
contains { 33,45}.
 Note that a number may be repeated any number of times in the 
list, but it should be present in the returned list only once. 
 For example, if the numberList is initialized to { 66,66,77,66,66}, 
the method should return a new list that contains { 66}.
5. If the numberList is empty, or null, return null.

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class Duplicates1 {
    private List<Integer> numberList;

    // No-argument constructor
    public Duplicates1() {
        this.numberList = new ArrayList<>();
    }

    // Parameter constructor
    public Duplicates1(List<Integer> numberList) {
        this.numberList = numberList;
    }

    // Getter for numberList
    public List<Integer> getNumberList() {
        return numberList;
    }

    // Setter for numberList
    public void setNumberList(List<Integer> numberList) {
        this.numberList = numberList;
    }

    // Method to find duplicates in the numberList
    public List<Integer> getDuplicatesList() {
        if (numberList == null || numberList.isEmpty()) {
            return null; // Return null for empty or null list
        }

        Set<Integer> uniqueNumbers = new HashSet<>();
        List<Integer> duplicatesList = new ArrayList<>();
        //System.out.println(uniqueNumbers);
        for (Integer num : numberList) {
            if (!uniqueNumbers.add(num)) {
                // If the number is already in the set, it's a duplicate
                duplicatesList.add(num);
            }
        }

        return duplicatesList;
    }

    public static void main(String[] args) {
        // Example usage:
        List<Integer> inputList = List.of(33, 45, 67, 89, 33, 47, 21, 45);
        Duplicates1 duplicatesObj = new Duplicates1(inputList);

        List<Integer> duplicates = duplicatesObj.getDuplicatesList();
        System.out.println("Duplicates in the list: " + duplicates);
    }
}
===============================================================================
CODEHS EXAM:
------------
SET-A:
------
1)
Write a Java program to remove the third element from an array list?

Sample Input/Output

[Red, Green, Orange, White, Black]  

After removing third element from the list:  

[Red, Green, White, Black] 

package Collection;

import java.util.ArrayList;

public class RemoveThirdElement {

	public static void main(String[] args) {
		ArrayList<String> a1=new ArrayList<>();
		a1.add("red");
		a1.add("green");
		a1.add("orange");
		a1.add("white");
		a1.add("black");
		System.out.println(a1);
		a1.remove(2);
		System.out.println(a1);
		

	}

}

-------------------------------------------
2)
Write a Java program to convert Array to List.



A class called ArrayToList is given to you.



1. Add a static method: convertToList(String[] inputArray) : This method takes an array of strings as an argument. It should convert the given array to a list of Strings and return this list. 



Note that the length of the list must be the same as that of the array. 



2. Return null for errors a null array or an empty list for an empty array.



A Class called Tester with the main method is given to you. Use this class to test your solution

package ArrayListInCollection;

import java.util.ArrayList;
import java.util.List;

class ArrayToList {
	    public static List<String> convertToList(String[] inputArray) {
	        if (inputArray == null) {
	            return null; // Return null for a null array
	        }

	        List<String> resultList = new ArrayList<>();
	        for (String item : inputArray) {
	            resultList.add(item);
	        }

	        return resultList;
	    }
	}

	public class ArrayToListConversionProgram8 {
	    public static void main(String[] args) {
	        // Example usage:
	        String[] array1 = {"Geeks", "forGeeks", "A Computer Portal"};
	        List<String> list1 = ArrayToList.convertToList(array1);
	        System.out.println("Array: " + java.util.Arrays.toString(array1));
	        System.out.println("List: " + list1);

	        String[] array2 = {}; // Empty array
	        List<String> list2 = ArrayToList.convertToList(array2);
	        System.out.println("Array: " + java.util.Arrays.toString(array2));
	        System.out.println("List: " + list2);
	    }
	}
	



-------------------------------------------
3)
Define a Product class with the following attributes:



productId (Integer): The unique identifier of the product.

productName (String): The name of the product.

productPrice (Double): The price of the product.

dateAdded (Date): The date when the product was added.

Implement a constructor in the Product class to initialize its attributes.



Create a static method getProductObject() in the Product class to retrieve product data. For simplicity, you can hardcode the product data within this method.



Override the toString() method in the Product class to provide a string representation of the product.



Create a StoreObject class with a main method to store product objects into a file named "Product.txt". The class should do the following:



Create an ArrayList to hold product objects.

Populate the ArrayList with product objects obtained from the getProductObject() method.

Serialize the ArrayList and write it to the "Product.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve product objects from the "Product.txt" file and display them. The class should do the following:



Read the serialized ArrayList of products from the "Product.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Product objects.

Display the details of each retrieved product.

package ArrayListInCollection;

import java.io.Serializable;
import java.util.Date;
import java.util.Scanner;

public class Product1 implements Serializable{
private Integer ProductId;
private String productName;
private Double productFees;
private Date dateOfAdmission;

public Product1(Integer productId, String productName, Double productFees, Date dateOfAdmission) {
	super();
	ProductId = productId;
	this.productName = productName;
	this.productFees = productFees;
	this.dateOfAdmission = dateOfAdmission;
}
public static Product1  getStudentObject() {
	  Scanner sc=new Scanner(System.in);
	 
	  System.out.print("enter name of product: ");
	  String name=sc.nextLine();
	  System.out.println("enter product id:");
	  int id=sc.nextInt();
	  System.out.println("enter product fees:");
	  double fee=sc.nextDouble();
	  Date d=new Date();
	  
	  return new Product1(id,name,fee,d);
}
@Override
public String toString() {
	return "Product1 [ProductId=" + ProductId + ", productName=" + productName + ", productFees=" + productFees
			+ ", dateOfAdmission=" + dateOfAdmission + "]";
}


}
----------------------
package ArrayListInCollection;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

public class StoreObject1 {
public static void main(String[] args) throws IOException {
	FileOutputStream fout=new FileOutputStream("C:\\javalabpgms\\Student.txt");
	ObjectOutputStream oos=new ObjectOutputStream(fout);
	ArrayList<Product1> al=new ArrayList<>();
	try(oos;fout) {
		for(int i=1;i<=3;i++) {
			
			al.add(Product1.getStudentObject());	
		}
		
		oos.writeObject(al);
		      
	} catch (FileNotFoundException e) {
		
		e.printStackTrace();
	}
	//System.out.println(al);
	System.out.println("succes");
}
}
-------------------------
package ArrayListInCollection;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;

public class RetrieveStudentObject1 {
	public static void main(String[] args) throws IOException {
		FileInputStream fin=new FileInputStream("C:\\javalabpgms\\Student.txt");
		ObjectInputStream ois=new ObjectInputStream(fin);
		ArrayList<Product1> al= null;
       try(ois;fin){
    	   al=(ArrayList<Product1>)ois.readObject();
    	  
    	  //System.out.println((char)obj);
    	  System.out.println(al);
       }
       catch(Exception e) {
    	   e.printStackTrace();
       }

	}
}

-----------------------------------------
4)GasBookingServices



GasCustomer Class:

Create a class named GasCustomer with the following private attributes:

customerId (int)

customerName (String)

address (String)

phoneNumber (String)

Implement a default constructor and a parameterized constructor that initializes all attributes.

Implement getter and setter methods for all attributes.

GasBookingService Class:

Create a class named GasBookingService to handle gas bookings.

Maintain an ArrayList of GasCustomer objects to store booking details.

Implement a method bookGas that takes a GasCustomer object and adds it to the list of customers.

Implement a method isFirstTimeCustomer that takes a GasCustomer object and returns true if the customer is booking gas for the first time based on their phone number, false otherwise.

Implement a method calculateBill that takes a GasCustomer object and a base booking charge as parameters. If the customer is booking gas for the first time, return a bill of 800; otherwise, return the base booking charge 200.

Implement a method printBill that takes a GasCustomer object and a bill amount as parameters and returns a message confirming the gas booking with the customer's name and the bill amount.

GasBookingServiceTester Class:

Create a class named GasBookingServiceTester with a main method.

Inside the main method:

Create an instance of GasBookingService.

Create two instances of GasCustomer.

Book gas for both customers using the bookGas method.

Test the isFirstTimeCustomer method for both customers and print the results.

Test the calculateBill method for both customers with a base booking charge of 200.0 and print the bills.

Test the printBill method for both customers and print the bills.


package ArrayListInCollection;

public class GasCustomer10 {
private int customerId;
private String customerName;
private String address;
private String phnno;
public GasCustomer10(int customerId, String customerName, String address, String phnno) {
	super();
	this.customerId = customerId;
	this.customerName = customerName;
	this.address = address;
	this.phnno = phnno;
}

public void setCustomerId(int customerId) {
	this.customerId = customerId;
}
public void setCustomerName(String customerName) {
	this.customerName = customerName;
}
public void setAddress(String address) {
	this.address = address;
}
public void setPhnno(String phnno) {
	this.phnno = phnno;
}
public int getCustomerId() {
	return customerId;
}
public  String getCustomerName() {
	return customerName;
}
public String getAddress() {
	return address;
}
public String getPhnno() {
	return phnno;
}

}
------------------
package ArrayListInCollection;

import java.util.ArrayList;

public class GasBookingService10 {
	ArrayList<GasCustomer10> customerList=new ArrayList<>();
	public GasBookingService10() {
		customerList=new ArrayList<GasCustomer10>();
	}
	public void bookGas(GasCustomer10 customer) {
		customerList.add(customer);
	}
	
	public boolean isFirstTimeCustomer(GasCustomer10 c) {
		for(GasCustomer10 exitingCustomer:customerList) {
		if(c.getCustomerName().equals(exitingCustomer.getCustomerName())) 
			return true;
		}
			return false;
		}
	
		public double calculateBill(boolean g,double basebookingcharge) {
			if(g) {
				return 800;
			}
			else {
				return basebookingcharge;
			}
		}
		public String printBill(GasCustomer10 g,double billamt) {
			return (g.getCustomerName()+" please pay your bill of "+billamt);
		}
		
	}


-----------------------------
package ArrayListInCollection;

public class GasBookingServiceTester10 {

	public static void main(String[] args) {
		GasCustomer10 c=new GasCustomer10(2, "r", "hyd", "3355");
		GasBookingService10 b=new GasBookingService10();
		boolean s=b.isFirstTimeCustomer(c);
		double a=b.calculateBill(s, 200);
		String str=b.printBill(c,a );
		System.out.println(str);
	}

}
=========================
SET-B:
-----
1)
Write a java program to find duplicates in an arrayList.

A Duplicates class is given to you. Add the following implementations in the class:

1. A List attribute called numberList. This must be a list of Integers

2. Getter/Setter for the list

3. Implement the default constructor.

 Implement the parameter constructor.

 Implement the method getDuplicatesList():

4. This method must scan through the numberList field of the class. All the numbers in the list that are duplicated (occurs more than once) must be returned as a new List. 

	For example, if the numberList is initialized to { 33,45,67,89,33,47,21,45}, the method should return a new list that contains { 33,45}.

 Note that a number may be repeated any number of times in the list, but it should be present in the returned list only once. 

		For example, if the numberList is initialized to { 66,66,77,66,66}, the method should return a new list that contains { 66}.

5. If the numberList is empty, or null, return null.

-------------------------------------------------------------

2)Write a Java program to remove the third element from an array list?

Sample Input/Output

[Red, Green, Orange, White, Black] 

After removing third element from the list:  

[Red, Green, White, Black] 

--------------------------------------------------------------------
3)Define an Employee class with the following attributes:



employeeId (Integer): The unique identifier of the employee.

employeeName (String): The name of the employee.

employeeSalary (Double): The salary of the employee.

dateOfJoining (Date): The date when the employee joined the company.

Implement a constructor in the Employee class to initialize its attributes.



Create a static method getEmployeeObject() in the Employee class to retrieve employee data. For simplicity, you can hardcode the employee data within this method.



Override the toString() method in the Employee class to provide a string representation of the employee.



Develop a StoreObject class with a main method to store employee objects into a file named "Employee.txt". The class should perform the following tasks:



Create an ArrayList to hold employee objects.

Populate the ArrayList with employee objects obtained from the getEmployeeObject() method.

Serialize the ArrayList and write it to the "Employee.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve employee objects from the "Employee.txt" file and display them. The class should execute the following steps:



Read the serialized ArrayList of employees from the "Employee.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Employee objects.

Display the details of each retrieved employee.
------------------------------------------------------------------

4)You are given a list of students along with their grades in a subject. Write a Java program to find and print the names of students who scored the highest grade.



Instructions:



_____________________



> Implement a Java program that takes a list of students and their grades as input and outputs the names 



 of students who achieved the highest grade.



> The program should utilize only ArrayList to store student data and perform the necessary operations.



> Ensure that the program correctly identifies and prints the names of all students who scored the highest grade.



> You may assume that the input list of students is not empty.



> Consider the efficiency of your solution in terms of time complexity.







Input as:



______________



Student("John", 85)



Student("Alice", 92)



Student("Bob", 88)



Student("Charlie", 85)



Student("Emily", 90)







Ouput as:



______________



Students with the highest grade:



Alice
----------------------------------------------------------------------------------
SET-C:
-----------
1)
Write a Java program to search for an element in an array list?



list : [ 23 , 45 , 67, 89 , 22 , 34 , 56 ]



input is: 5



output is: 22


----------------------------------------------------------
2)
Write a Java program to copy one array list into another?



Sample Input /Output



List1: [1, 2, 3, 4]              



List2: [A, B, C, D] 



Copy List to List2,



After copy:                



List1: [A, B, C, D]              



List2: [A, B, C, D]

---------------------------------------------------------------
3)
Define a Teacher class with the following attributes:



teacherId (Integer): The unique identifier of the teacher.

teacherName (String): The name of the teacher.

teacherSalary (Double): The salary of the teacher.

dateOfJoining (Date): The date when the teacher joined the school.

Implement a constructor in the Teacher class to initialize its attributes.



Create a static method getTeacherObject() in the Teacher class to retrieve teacher data. For simplicity, you can hardcode the teacher data within this method.



Override the toString() method in the Teacher class to provide a string representation of the teacher.



Develop a StoreObject class with a main method to store teacher objects into a file named "Teacher.txt". The class should execute the following steps:



Create an ArrayList to hold teacher objects.

Populate the ArrayList with teacher objects obtained from the getTeacherObject() method.

Serialize the ArrayList and write it to the "Teacher.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve teacher objects from the "Teacher.txt" file and display them. The class should perform the following tasks:



Read the serialized ArrayList of teachers from the "Teacher.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Teacher objects.

Display the details of each retrieved teacher.

--------------------------------------------------------
FoodOrderService



FoodCustomer Class:







Create a class named FoodCustomer with the following private attributes:



customerId (int)



customerName (String)



address (String)



phoneNumber (String)



Implement a default constructor and a parameterized constructor that initializes all attributes.



Implement getter and setter methods for all attributes.



FoodOrderService Class:







Create a class named FoodOrderService to handle food orders.



Maintain an ArrayList of FoodCustomer objects to store order details.



Implement a method placeOrder that takes a FoodCustomer object and adds it to the list of customers.



Implement a method isFirstTimeCustomer that takes a FoodCustomer object and returns true if the customer is ordering for the first time based on their phone number, false otherwise.



Implement a method calculateBill that takes a FoodCustomer object and a base delivery charge as parameters. If the customer is ordering for the first time, return a bill of 0; otherwise, return the base delivery charge.



Implement a method printBill that takes a FoodCustomer object and a bill amount as parameters and returns a message confirming the order with the customer's name and the bill amount.



FoodOrderServiceTester Class:







Create a class named FoodOrderServiceTester with a main method.



Inside the main method:



Create an instance of FoodOrderService.



Create two instances of FoodCustomer.



Place orders for both customers using the placeOrder method.



Test the isFirstTimeCustomer method for both customers and print the results.



Test the calculateBill method for both customers with a base delivery charge of 50.0 and print the bills.



Test the printBill method for both customers and print the bills.



Your implementation should demonstrate the functionality of the food ordering system. Make sure to include appropriate messages and output formats for better clarity.





Ouput :-



Yes , Yes , Yes , No , Yes 

=================================================
Three classes are given to you, 
CabCustomer
CabCustomerService
CabCustomerServiceTester


Define the following in the class CabCustomer 
private : custId int, customerName String, pickupLocation String,dropLocation String, distance int,phone String
          Generate Getter/Setter for the all fields.
          Implement the No Argument constructor.
          Implement/Generate the parameterized constructor in the order as defined above, i.e.,  custId,Name,Pickup,Drop,Distance,Phone

Define the following in the  class CabCustomerService and write logics in the following methods:
private : Generic ArrayList to represent list of CabCustomers.
public : addCabCustomer() : Add the customer object parameter to the ArrayList
			    isFirstCustomer(): Check whether the customer object parameter is already existing in arrayList. 
			    				
Note : If phone number of a customer matches with any of the phone numbers of the array list, then consider it as a existing customer, otherwise consider the customer as new customer. 
				 
       calculateBill() should calculate and return the customer bill based on following rules
       1) if the customer is new return 0;
       2) if the customer's travel distance is below or equal    
          to 4 kms then return 80 (Rs).
       3) if the customer travel distance is above 4 kms calculate bill 80 + 6 per each km.
		 Ex: Any distance for new customer return 0;
		     distance 4 return 80
                     distance 6 return 80 + 6 * 6;
printBill() which should return the bill of the customer object parameter in the following format:

            output : JOHN Please pay your bill of Rs.0.0
	             SMITH Please pay your bill of Rs.180.0

	Note : 
	   Assume one customer books only one cab at a time.
	   No charge for customer booking the cab for the first time.
	   Customer's phone number is key to test a new customer or old customer.
	   Distance should be treated as kilometers 				 
				 
A CabCustomerServiceTester is given with main() where you can create various objects and test them.


package minProjectTypePgmInCollection;

public class CabCustomer1 {
private int custId;
private String custName;
private String pickupLocation;
private String dropLocation;
private int distance;
private String phnno;
//public CabCustomer1() {
//	super();
//}
public CabCustomer1(int custId, String custName, String pickupLocation, String dropLocation, int distance,
		String phnno) {
	super();
	this.custId = custId;
	this.custName = custName;
	this.pickupLocation = pickupLocation;
	this.dropLocation = dropLocation;
	this.distance = distance;
	this.phnno = phnno;
}
public int getCustId() {
	return custId;
}
public String getCustName() {
	return custName;
}
public String getPickupLocation() {
	return pickupLocation;
}
public String getDropLocation() {
	return dropLocation;
}
public int getDistance() {
	return distance;
}
public String getPhnno() {
	return phnno;
}
public void setCustId(int custId) {
	this.custId = custId;
}
public void setCustName(String custName) {
	this.custName = custName;
}
public void setPickupLocation(String pickupLocation) {
	this.pickupLocation = pickupLocation;
}
public void setDropLocation(String dropLocation) {
	this.dropLocation = dropLocation;
}
public void setDistance(int distance) {
	this.distance = distance;
}
public void setPhnno(String phnno) {
	this.phnno = phnno;
}
}
-----------------------------------

package minProjectTypePgmInCollection;

import java.util.ArrayList;

public class CabCustomerService1 {
private ArrayList<CabCustomer1> customerList;
public CabCustomerService1() {
	customerList=new ArrayList<CabCustomer1>();
	}
public void addCabCustomer(CabCustomer1 customer) {
	customerList.add(customer);	
}
public boolean isFirstCustomer(CabCustomer1 customer) {
	for(CabCustomer1 existingCustomer:customerList) {
	if(customer.getPhnno().equals(existingCustomer.getPhnno()))
		return false;//existing customer
	}
		return true;//new customer
}
public double calculateBill(CabCustomer1 customer) {
	if(isFirstCustomer(customer))
		return 0;
	else if(customer.getDistance()<=4)
		return 80;
	else
		return 80+6*(customer.getDistance()-4);
}
public String printBill(CabCustomer1 customer) {
	return customer.getCustName()+"Please pay your bill of"+calculateBill(customer);
}
}
---------------------------------
package minProjectTypePgmInCollection;

public class CabCustomerServiceTester1 {

	public static void main(String[] args) {
		CabCustomer1 cs=new CabCustomer1(1, "Ravali", "sr nagar", "hitech city", 4, "58768648934");
		CabCustomerService1 ccs=new CabCustomerService1();
//		ccs.addCabCustomer(cs);
//		ccs.isFirstCustomer(cs);
//		ccs.calculateBill(cs);
		System.out.println(ccs.printBill(cs));
	}

}


==========================================================================
program-1
Employee Directory:
Develop an employee directory that stores employee information (name, position, salary) and allows CRUD operations using collections.

Employee Class:
This class represents an employee with attributes like name, position, and salary.
It has a constructor to initialize an employee's details and getters/setters to access and modify these details.
The toString() method is overridden to provide a string representation of an employee's details.

Directory Class:
This class manages a collection of Employee objects using an ArrayList.
The addEmployee() method adds an employee to the directory.
The displayAllEmployees() method prints details of all employees in the directory.
The updateEmployee() method updates an employee's information at a specified index in the directory.
The deleteEmployee() method removes an employee from the directory at a specified index.

EmployeeDirectoryExample Class (Main Class):
This class contains the main() method where an instance of Directory is created.
Two employees, "Alice" and "Bob," are added to the directory with their respective positions and salaries.
The displayAllEmployees() method is called to show all employees.
The details of "Bob" are updated to reflect a change in position and salary.
"Alice" is deleted from the directory.
Finally, the updated list of employees is displayed again.


Output:-
Employee{name='Alice', position='Manager', salary=60000.0}
Employee{name='Bob', position='Developer', salary=50000.0}

Employee{name='Alice', position='Manager', salary=60000.0}
Employee{name='Bob', position='Senior Developer', salary=55000.0}

Employee{name='Bob', position='Senior Developer', salary=55000.0}

Initial display after adding "Alice" as a Manager and "Bob" as a Developer.
Display after updating "Bob's" information to reflect the change in position and salary.
Display after deleting "Alice" from the directory.
Final display of the remaining employee, "Bob", with his updated information.



Program-2
Travel Itinerary Planner:
Build a travel itinerary planner that organizes destinations, activities, and schedules for travelers using collections.

Activity:
Represents an activity with a name and schedule.
Contains a constructor to initialize the activity's details and getters to access these details.
Overrides the toString() method to provide a string representation of an activity.

Destination:
Represents a destination with a name and a list of activities.
Has a constructor to set the destination's name and initialize an empty list of activities.
Provides methods to add activities to the destination and retrieve the list of activities.
Overrides the toString() method to provide a string representation of a destination.

ItineraryPlanner:
Manages a list of destinations.
Contains methods to add destinations and retrieve the list of destinations.

TravelItineraryPlanner (Main Class):
Creates an instance of ItineraryPlanner.
Creates two Destination objects: "Paris" and "London".
Adds activities to each destination.
Adds these destinations to the itinerary planner.
Displays the itinerary by listing destinations and their respective activities.


Output:-
Destination: Paris
- Visit Eiffel Tower (Morning)
- Louvre Museum (Afternoon)

Destination: London
- British Museum (Morning)
- London Eye (Afternoon)






-----------------------------------------------------------------------------------
SET-B:
-----
1)
Write a java program to find duplicates in an arrayList.

A Duplicates class is given to you. Add the following implementations in the class:

1. A List attribute called numberList. This must be a list of Integers

2. Getter/Setter for the list

3. Implement the default constructor.

 Implement the parameter constructor.

 Implement the method getDuplicatesList():

4. This method must scan through the numberList field of the class. All the numbers in the list that are duplicated (occurs more than once) must be returned as a new List. 

	For example, if the numberList is initialized to { 33,45,67,89,33,47,21,45}, the method should return a new list that contains { 33,45}.

 Note that a number may be repeated any number of times in the list, but it should be present in the returned list only once. 

		For example, if the numberList is initialized to { 66,66,77,66,66}, the method should return a new list that contains { 66}.

5. If the numberList is empty, or null, return null.

-------------------------------------------------------------

2)Write a Java program to remove the third element from an array list?

Sample Input/Output

[Red, Green, Orange, White, Black] 

After removing third element from the list:  

[Red, Green, White, Black] 

--------------------------------------------------------------------
3)Define an Employee class with the following attributes:



employeeId (Integer): The unique identifier of the employee.

employeeName (String): The name of the employee.

employeeSalary (Double): The salary of the employee.

dateOfJoining (Date): The date when the employee joined the company.

Implement a constructor in the Employee class to initialize its attributes.



Create a static method getEmployeeObject() in the Employee class to retrieve employee data. For simplicity, you can hardcode the employee data within this method.



Override the toString() method in the Employee class to provide a string representation of the employee.



Develop a StoreObject class with a main method to store employee objects into a file named "Employee.txt". The class should perform the following tasks:



Create an ArrayList to hold employee objects.

Populate the ArrayList with employee objects obtained from the getEmployeeObject() method.

Serialize the ArrayList and write it to the "Employee.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve employee objects from the "Employee.txt" file and display them. The class should execute the following steps:



Read the serialized ArrayList of employees from the "Employee.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Employee objects.

Display the details of each retrieved employee.
------------------------------------------------------------------

4)You are given a list of students along with their grades in a subject. Write a Java program to find and print the names of students who scored the highest grade.



Instructions:



_____________________



> Implement a Java program that takes a list of students and their grades as input and outputs the names 



 of students who achieved the highest grade.



> The program should utilize only ArrayList to store student data and perform the necessary operations.



> Ensure that the program correctly identifies and prints the names of all students who scored the highest grade.



> You may assume that the input list of students is not empty.



> Consider the efficiency of your solution in terms of time complexity.







Input as:



______________



Student("John", 85)



Student("Alice", 92)



Student("Bob", 88)



Student("Charlie", 85)



Student("Emily", 90)







Ouput as:



______________



Students with the highest grade:



Alice
----------------------------------------------------------------------------------
SET-C:
-----------
1)
Write a Java program to search for an element in an array list?



list : [ 23 , 45 , 67, 89 , 22 , 34 , 56 ]



input is: 5



output is: 22


----------------------------------------------------------
2)
Write a Java program to copy one array list into another?



Sample Input /Output



List1: [1, 2, 3, 4]              



List2: [A, B, C, D] 



Copy List to List2,



After copy:                



List1: [A, B, C, D]              



List2: [A, B, C, D]

---------------------------------------------------------------
3)
Define a Teacher class with the following attributes:



teacherId (Integer): The unique identifier of the teacher.

teacherName (String): The name of the teacher.

teacherSalary (Double): The salary of the teacher.

dateOfJoining (Date): The date when the teacher joined the school.

Implement a constructor in the Teacher class to initialize its attributes.



Create a static method getTeacherObject() in the Teacher class to retrieve teacher data. For simplicity, you can hardcode the teacher data within this method.



Override the toString() method in the Teacher class to provide a string representation of the teacher.



Develop a StoreObject class with a main method to store teacher objects into a file named "Teacher.txt". The class should execute the following steps:



Create an ArrayList to hold teacher objects.

Populate the ArrayList with teacher objects obtained from the getTeacherObject() method.

Serialize the ArrayList and write it to the "Teacher.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve teacher objects from the "Teacher.txt" file and display them. The class should perform the following tasks:



Read the serialized ArrayList of teachers from the "Teacher.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Teacher objects.

Display the details of each retrieved teacher.

--------------------------------------------------------
FoodOrderService



FoodCustomer Class:







Create a class named FoodCustomer with the following private attributes:



customerId (int)



customerName (String)



address (String)



phoneNumber (String)



Implement a default constructor and a parameterized constructor that initializes all attributes.



Implement getter and setter methods for all attributes.



FoodOrderService Class:







Create a class named FoodOrderService to handle food orders.



Maintain an ArrayList of FoodCustomer objects to store order details.



Implement a method placeOrder that takes a FoodCustomer object and adds it to the list of customers.



Implement a method isFirstTimeCustomer that takes a FoodCustomer object and returns true if the customer is ordering for the first time based on their phone number, false otherwise.



Implement a method calculateBill that takes a FoodCustomer object and a base delivery charge as parameters. If the customer is ordering for the first time, return a bill of 0; otherwise, return the base delivery charge.



Implement a method printBill that takes a FoodCustomer object and a bill amount as parameters and returns a message confirming the order with the customer's name and the bill amount.



FoodOrderServiceTester Class:







Create a class named FoodOrderServiceTester with a main method.



Inside the main method:



Create an instance of FoodOrderService.



Create two instances of FoodCustomer.



Place orders for both customers using the placeOrder method.



Test the isFirstTimeCustomer method for both customers and print the results.



Test the calculateBill method for both customers with a base delivery charge of 50.0 and print the bills.



Test the printBill method for both customers and print the bills.



Your implementation should demonstrate the functionality of the food ordering system. Make sure to include appropriate messages and output formats for better clarity.





Ouput :-



Yes , Yes , Yes , No , Yes 

===================================================================================

Three classes are given to you, 
CabCustomer
CabCustomerService
CabCustomerServiceTester


Define the following in the class CabCustomer 
private : custId int, customerName String, pickupLocation String,dropLocation String, distance int,phone String
          Generate Getter/Setter for the all fields.
          Implement the No Argument constructor.
          Implement/Generate the parameterized constructor in the order as defined above, i.e.,  custId,Name,Pickup,Drop,Distance,Phone

Define the following in the  class CabCustomerService and write logics in the following methods:
private : Generic ArrayList to represent list of CabCustomers.
public : addCabCustomer() : Add the customer object parameter to the ArrayList
			    isFirstCustomer(): Check whether the customer object parameter is already existing in arrayList. 
			    				
Note : If phone number of a customer matches with any of the phone numbers of the array list, then consider it as a existing customer, otherwise consider the customer as new customer. 
				 
       calculateBill() should calculate and return the customer bill based on following rules
       1) if the customer is new return 0;
       2) if the customer's travel distance is below or equal    
          to 4 kms then return 80 (Rs).
       3) if the customer travel distance is above 4 kms calculate bill 80 + 6 per each km.
		 Ex: Any distance for new customer return 0;
		     distance 4 return 80
                     distance 6 return 80 + 6 * 6;
printBill() which should return the bill of the customer object parameter in the following format:

            output : JOHN Please pay your bill of Rs.0.0
	             SMITH Please pay your bill of Rs.180.0

	Note : 
	   Assume one customer books only one cab at a time.
	   No charge for customer booking the cab for the first time.
	   Customer's phone number is key to test a new customer or old customer.
	   Distance should be treated as kilometers 				 
				 
A CabCustomerServiceTester is given with main() where you can create various objects and test them.



package minProjectTypePgmInCollection;

public class CabCustomer1 {
private int custId;
private String custName;
private String pickupLocation;
private String dropLocation;
private int distance;
private String phnno;
//public CabCustomer1() {
//	super();
//}
public CabCustomer1(int custId, String custName, String pickupLocation, String dropLocation, int distance,
		String phnno) {
	super();
	this.custId = custId;
	this.custName = custName;
	this.pickupLocation = pickupLocation;
	this.dropLocation = dropLocation;
	this.distance = distance;
	this.phnno = phnno;
}
public int getCustId() {
	return custId;
}
public String getCustName() {
	return custName;
}
public String getPickupLocation() {
	return pickupLocation;
}
public String getDropLocation() {
	return dropLocation;
}
public int getDistance() {
	return distance;
}
public String getPhnno() {
	return phnno;
}
public void setCustId(int custId) {
	this.custId = custId;
}
public void setCustName(String custName) {
	this.custName = custName;
}
public void setPickupLocation(String pickupLocation) {
	this.pickupLocation = pickupLocation;
}
public void setDropLocation(String dropLocation) {
	this.dropLocation = dropLocation;
}
public void setDistance(int distance) {
	this.distance = distance;
}
public void setPhnno(String phnno) {
	this.phnno = phnno;
}
}
-----------------------
package minProjectTypePgmInCollection;

import java.util.ArrayList;

public class CabCustomerService1 {
private ArrayList<CabCustomer1> customerList;
public CabCustomerService1() {
	customerList=new ArrayList<CabCustomer1>();
	}
public void addCabCustomer(CabCustomer1 customer) {
	customerList.add(customer);	
}
public boolean isFirstCustomer(CabCustomer1 customer) {
	for(CabCustomer1 existingCustomer:customerList) {
	if(customer.getPhnno().equals(existingCustomer.getPhnno()))
		return false;//existing customer
	}
		return true;//new customer
}
public double calculateBill(CabCustomer1 customer) {
	if(isFirstCustomer(customer))
		return 0;
	else if(customer.getDistance()<=4)
		return 80;
	else
		return 80+6*(customer.getDistance()-4);
}
public String printBill(CabCustomer1 customer) {
	return customer.getCustName()+"Please pay your bill of"+calculateBill(customer);
}
}
------------------
package minProjectTypePgmInCollection;

public class CabCustomerServiceTester1 {

	public static void main(String[] args) {
		CabCustomer1 cs=new CabCustomer1(1, "Ravali", "sr nagar", "hitech city", 4, "58768648934");
		CabCustomerService1 ccs=new CabCustomerService1();
//		ccs.addCabCustomer(cs);
//		ccs.isFirstCustomer(cs);
//		ccs.calculateBill(cs);
		System.out.println(ccs.printBill(cs));
	}

}

=========================================================================================

program-1
Employee Directory:
Develop an employee directory that stores employee information (name, position, salary) and allows CRUD operations using collections.

Employee Class:
This class represents an employee with attributes like name, position, and salary.
It has a constructor to initialize an employee's details and getters/setters to access and modify these details.
The toString() method is overridden to provide a string representation of an employee's details.

Directory Class:
This class manages a collection of Employee objects using an ArrayList.
The addEmployee() method adds an employee to the directory.
The displayAllEmployees() method prints details of all employees in the directory.
The updateEmployee() method updates an employee's information at a specified index in the directory.
The deleteEmployee() method removes an employee from the directory at a specified index.

EmployeeDirectoryExample Class (Main Class):
This class contains the main() method where an instance of Directory is created.
Two employees, "Alice" and "Bob," are added to the directory with their respective positions and salaries.
The displayAllEmployees() method is called to show all employees.
The details of "Bob" are updated to reflect a change in position and salary.
"Alice" is deleted from the directory.
Finally, the updated list of employees is displayed again.


Output:-
Employee{name='Alice', position='Manager', salary=60000.0}
Employee{name='Bob', position='Developer', salary=50000.0}

Employee{name='Alice', position='Manager', salary=60000.0}
Employee{name='Bob', position='Senior Developer', salary=55000.0}

Employee{name='Bob', position='Senior Developer', salary=55000.0}

Initial display after adding "Alice" as a Manager and "Bob" as a Developer.
Display after updating "Bob's" information to reflect the change in position and salary.
Display after deleting "Alice" from the directory.
Final display of the remaining employee, "Bob", with his updated information.

package minProjectTypePgmInCollection;

import java.io.Serializable;

public class Employee2 implements Serializable{
	String empName;
	String empPosition;
	double empSalary;

	public Employee2(String empName, String empPosition, double empSalary) {
		super();
		this.empName = empName;
		this.empPosition = empPosition;
		this.empSalary = empSalary;
	}

	public String getEmpName() {
		return empName;
	}

	public String getEmpPosition() {
		return empPosition;
	}

	public double getEmpSalary() {
		return empSalary;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public void setEmpPosition(String empPosition) {
		this.empPosition = empPosition;
	}

	public void setEmpSalary(double empSalary) {
		this.empSalary = empSalary;
	}

	@Override
	public String toString() {
		return "Employee2 [empName=" + empName + ", empPosition=" + empPosition + ", empSalary=" + empSalary + "]";
	}
}
--------------------------------
package minProjectTypePgmInCollection;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;

public class Directory2 {
	ArrayList<Employee2> empList = new ArrayList<>();

	public void addEmployee(Employee2 emp, String path) throws IOException {
		File f1 = new File(path);
		f1.mkdir();
		FileOutputStream fout = new FileOutputStream(path + "//Emps.txt");
		ObjectOutputStream oos = new ObjectOutputStream(fout);
		try (fout; oos) {
			empList.add(emp);
			oos.writeObject(empList);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public ArrayList<Employee2> displayAllEmployees(String path) throws IOException {
		FileInputStream fin = new FileInputStream(path + "//Emps.txt");
		ObjectInputStream ois = new ObjectInputStream(fin);
		try (fin; ois) {
			empList = (ArrayList<Employee2>) ois.readObject();
			System.out.println(empList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return empList;
	}

	public void updateEmployee(ArrayList<Employee2> e, int index) {
		for (Employee2 edata : e) {
			e.set(index, edata);
		}
	}

	public void deleteEmployee(ArrayList<Employee2> e, int index) {
		for (Employee2 edata : e) {
			e.remove(index);
		}
	}
}
-----------------------------------
package minProjectTypePgmInCollection;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class EmployeeDirectoryExample2 {

	public static void main(String[] args) throws IOException {
		Scanner sc=new Scanner(System.in);
		System.out.println("enter the path:");
		String path=sc.next();
		Employee2 e=new Employee2("ravali", "manager", 50000);
		Directory2 d=new Directory2();
		d.addEmployee(e,path);
		ArrayList<Employee2> a=d.displayAllEmployees(path);
		d.updateEmployee(a, 1);
		d.deleteEmployee(a, 1);
	}

}

(another way without directry)

package minProjectTypePgmInCollection;

public class EmployeeWithoutDirectry4 {
	private String empName;
	private String position;
	private double salary;

	public EmployeeWithoutDirectry4(String empName, String position, double salary) {
		super();
		this.empName = empName;
		this.position = position;
		this.salary = salary;
	}

	public String getEmpName() {
		return empName;
	}

	public void setEmpName(String empName) {
		this.empName = empName;
	}

	public String getPosition() {
		return position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	public double getSalary() {
		return salary;
	}

	public void setSalary(double salary) {
		this.salary = salary;
	}

	@Override
	public String toString() {
		return "Employee [empName=" + empName + ", position=" + position + ", salary=" + salary + "]";
	}
}
----------------------
package minProjectTypePgmInCollection;

import java.util.ArrayList;

public class DirectoryWithoutDirectry4 {
	public ArrayList<EmployeeWithoutDirectry4> al = new ArrayList<>();

	public void addEmployee(EmployeeWithoutDirectry4 e) {
		al.add(e);

	}

	public void displayAllEmployee() {
		System.out.println(al);
	}

	public void updateEmployee(int index, String position, double Salary) {
		EmployeeWithoutDirectry4 e = al.get(index);
		e.setPosition(position);
		e.setSalary(Salary);
		

	}

	public void deleteEmployee(int index) {
		al.remove(index);
	}
}
-----------------------------------------------
package minProjectTypePgmInCollection;

public class EmployeeWithoutDirectoryEx4 {

	public static void main(String[] args) {
		EmployeeWithoutDirectry4 e1=new EmployeeWithoutDirectry4("Ravali", "manager", 5000000);
		EmployeeWithoutDirectry4 e2=new EmployeeWithoutDirectry4("Ravi", "Hr", 6000000);
		DirectoryWithoutDirectry4 d1=new DirectoryWithoutDirectry4();
		d1.addEmployee(e1);
		d1.addEmployee(e2);
		System.out.println("before update and delete:");
		d1.displayAllEmployee();
		System.out.println("after update:");
		d1.updateEmployee(0, "employee", 5000);
		d1.displayAllEmployee();
		System.out.println("after delete:");
		d1.deleteEmployee(1);
		d1.displayAllEmployee();
	}

}

============================================
Program-2
Travel Itinerary Planner:
Build a travel itinerary planner that organizes destinations, activities, and schedules for travelers using collections.

Activity:
Represents an activity with a name and schedule.
Contains a constructor to initialize the activity's details and getters to access these details.
Overrides the toString() method to provide a string representation of an activity.

Destination:
Represents a destination with a name and a list of activities.
Has a constructor to set the destination's name and initialize an empty list of activities.
Provides methods to add activities to the destination and retrieve the list of activities.
Overrides the toString() method to provide a string representation of a destination.

ItineraryPlanner:
Manages a list of destinations.
Contains methods to add destinations and retrieve the list of destinations.

TravelItineraryPlanner (Main Class):
Creates an instance of ItineraryPlanner.
Creates two Destination objects: "Paris" and "London".
Adds activities to each destination.
Adds these destinations to the itinerary planner.
Displays the itinerary by listing destinations and their respective activities.

Output:-
Destination: Paris
- Visit Eiffel Tower (Morning)
- Louvre Museum (Afternoon)

Destination: London
- British Museum (Morning)
- London Eye (Afternoon)


package minProjectTypePgmInCollection;

public class Activity3 {
private String name;
private String schedule;
public Activity3(String name, String schedule) {
	super();
	this.name = name;
	this.schedule = schedule;
}
public String getName() {
	return name;
}
public String getSchedule() {
	return schedule;
}
@Override
public String toString() {
	return "Activity3 [name=" + name + ", schedule=" + schedule + "]";
}
}
----------------------------
package minProjectTypePgmInCollection;

import java.util.ArrayList;

public class Destination3 {
	private String destName;
	public ArrayList<Activity3> al;

	public Destination3(String destName) {
		super();
		this.destName = destName;
		 al = new ArrayList<>();
	}

	public String getDestName() {
		return destName;
	}

	public void setDestName(String destName) {
		this.destName = destName;
	}

	public ArrayList<Activity3> getAl() {
		return al;
	}

	public void setAl(ArrayList<Activity3> al) {
		this.al = al;
	}

	public void addActivities(Activity3 a) {
		al.add(a);
	}

	public void retrieveAct() {
		System.out.println(this);
	}

	@Override
	public String toString() {
		String str = "";
		for (Activity3 a : al) {
			str += a.toString();
		}
		return "Destination : "+destName +" \n"+str;
	}

}

----------------------
package minProjectTypePgmInCollection;

import java.util.ArrayList;

public class ItineraryPlanner3 {
	public ArrayList<Destination3> dest = new ArrayList<>();

	public void addDestination(Destination3 d) {
		dest.add(d);
	}

	public void retrieveDestination() {
		for (Destination3 d : dest) {
			d.retrieveAct();
		}
	}
}
------------------------------
package minProjectTypePgmInCollection;

public class TravelItineraryPlanner3 {

	public static void main(String[] args) {
		Activity3 a = new Activity3("VisitEiffelTower", "Morning");
		Activity3 a1 = new Activity3("Louvre Museum", "Afternoon");
		Activity3 a2 = new Activity3("British Museum", "Morning");
		Activity3 a3 = new Activity3("London Eye", "Afternoon");

		Destination3 d = new Destination3("Paris");
		Destination3 d1 = new Destination3("London");
		d.addActivities(a);
		d.addActivities(a1);
		d1.addActivities(a2);
		d1.addActivities(a3);
		
		ItineraryPlanner3 itp = new ItineraryPlanner3();
		itp.addDestination(d);
		itp.addDestination(d1);
		itp.retrieveDestination();

	}

}
========================================================


1. What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		TreeSet<String> tree = new TreeSet<>();
		tree.add("25");
		tree.add("Naresh");
		tree.add("A");
		tree.add("37");
		for(String str: tree)
			System.out.print(str+" ");
	}
}
A.	37 25 A Naresh
B.	Naresh 25 37 A 
C.	37 A 25 Naresh
D.	25 37 A Naresh
Answer: D(DOUBT)
-------------------------------------------------
2.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		Set<String> tree = new HashSet<>();
		tree.add("25");
		tree.add("Naresh");
		tree.add("A");
		tree.add("37");
		for(String str: tree)
			System.out.print(str+" ");
	}
}
A.	A 25 37 Naresh
B.	A Naresh 25 37 
C.	Naresh A 25 37
D.	A 25 Naresh 37 
Answer: A(DOUBT)
------------------------------------------
3.What is the output of the following code
public class CollectionExample 
{
	public static void main(String[] args) {
		Set<String> tree = new HashSet<>();
		tree.add("25");
		tree.add("Naresh");
		tree.add("37");
		tree.add("A");
		tree.add("37");
		for(String str: tree)
			System.out.print(str+" ");
	}
}
A.	A 25 37 37 Naresh
B.	A Naresh 25 37 37
C.	A 25 37 Naresh
D.	A 25 Naresh 37 37
Answer: C(DOUBT)
-----------------------------------------
4.Choose the correct output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		Set<String> tree = new TreeSet<>();
		tree.add("google");
		tree.add("Naresh");
		tree.add("Information");
		tree.add("Technology");
		for(int i=2;i<tree.size();i++) 
		{
			System.out.print(tree.remove(i));
		}
	}
}
A.	Run time error
B.	Compile time error
C.	google Naresh Information Technology
D.	google Information Naresh Technology 
Answer: B(DOUBT)
---------------------------------------------------------
5.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		Set<String> tree = new TreeSet<>();
		tree.add("google");
		tree.add("Naresh");
		tree.add("Information");
		tree.add("Technology");		
		for(String str: tree) 
		{
			if(tree.contains("Naresh"))
				System.out.print(str+" ");
		}
	}
}
A.Information Naresh Technology google
B.Naresh
C.Technology Information Naresh google
D.Naresh Technology google Information
Answer: A(DOUBT)
------------------------------------------

6.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		HashMap hash = new HashMap<>();
		hash.put("nit", 500);
		hash.put("info", 644);
		hash.put("tech", "google");
		System.out.println(hash.get("tech"));
		System.out.println(hash.get("google"));
		System.out.println(hash.getOrDefault("nit", "Technology"));
		System.out.println(hash.get("info"));
	}
}
A.	google null 500 644
B.	google google Technology null
C.	null null Technology null
D.	google null Technology 644
Answer: A(DOUBT)
----------------------------------------------------------

7.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		HashSet hash = new HashSet<>();
		hash.add("nit");
		hash.add("NIT");
		System.out.println(hash);
		System.out.println(hash.size());
	}
}
A.	NIT nit 2
B.	nit 1
C.	[NIT] 1
D.	[nit NIT] 2
Answer: D(DOUBT)
--------------------------------------

8.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		HashSet hash = new HashSet<>();
		hash.add("nit");
		hash.add("nit");
		System.out.println(hash);
		System.out.println(hash.size());
	}
}
A.	[nit] 2
B.	[nit] 1
C.	[nit nit] 2
D.	nit nit 1
Answer: B(DOUBT)
----------------------------------------
9.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		HashSet set = new HashSet<>();
		set.add(new StringBuffer("nit"));
		set.add(new StringBuffer("nit"));
		System.out.println(set);
		System.out.println(set.size());
	}
}
A.	[nit] 2
B.	[nit] 1
C.	[nit nit] 2
D.	nit nit 1
Answer: C
----------------------------------------
10.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		TreeSet tree = new TreeSet<>();
		tree.add("nit");
		tree.add("Naresh");
		tree.add(25);
		System.out.println(tree.tailSet("a"));
	}
}
A.	nit
B.	Naresh
C.	nit Naresh
D.	Compile time error
Answer: D(DOUBT)
------------------------------------------
11.What is the output of the following snippet
public class CollectionExample {
	public static void main(String[] args) {
		TreeSet tree = new TreeSet<>();
		tree.add("nit");
		tree.add("Naresh");
		tree.add("Technology");
		System.out.println(tree.tailSet("a"));
	}
}
A.	nit
B.	Naresh
C.	nit Naresh Technology
D.	Technology
Answer: A(DOUBT)
----------------------------------------------
12.What is the output of the following snippet
public class CollectionExample {
	public static void main(String[] args) {
		SortedMap smap = new TreeMap();
		smap.put(101,"nit");
		smap.put(105,"Technology");
		smap.put(103,"Naresh");
		System.out.println(smap);
	}
}
A.	101=nit, 103=Naresh, 105=Technology
B.	105=Technology, 101=nit, 103=Naresh
C.	105=Technology, 103=Naresh, 101=nit
D.	101=nit, 105=Technology, 103=Naresh
Answer: A(DOUBT)
-------------------------------------------------
13.What is the output of the following code
public class CollectionExample {
	public static void main(String[] args) {
		TreeSet tree = new TreeSet();
		tree.add("nit");
		tree.add("Technology");
		tree.add("Naresh");
		System.out.println(tree.descendingSet());
	}
}
A.	Naresh ,nit, Technology, 
B.	nit, Technology, Naresh
C.	nit, Naresh, Technology
D.	Technology, Naresh, nit
Answer: B(DOUBT)
==============================================

Write a Program to perform sorting operation on Product class using ArrayList by implementing Comparable interface.



Create a BLC class Product.



Instance variables:

productNumber-private-Integer

productName-private-String

productPrice-private-Double



Create a parameterized constructor to initialize the instance variable of Product class.



Implement Comparable interface to write the logic to sort the Product class based on the Product Name.



Create an ELC class which contains main method, create ArrayList object to hold Product data as well as sort the product data object based on the product name.

package sortedSet;

public class Product1 implements Comparable<Product1>{
	private Integer productNumber;
	private String productName;
	private Double productPrice;
	public Product1(Integer productNumber, String productName, double i) {
		super();
		this.productNumber = productNumber;
		this.productName = productName;
		this.productPrice = i;
	}
@Override
	public int compareTo(Product1 p) {
		// TODO Auto-generated method stub
		return this.productName.compareTo(p.productName);
	}
@Override
public String toString() {
	return "Product1 [productNumber=" + productNumber + ", productName=" + productName + ", productPrice="
			+ productPrice + "]";
}
}
-----------------------
package sortedSet;

import java.util.ArrayList;
import java.util.Collections;

public class main1 {

	public static void main(String[] args) {
		ArrayList<Product1> al = new ArrayList<>();
		al.add(new Product1(333, "Tv", 22000.0));
		al.add(new Product1(444, "mobile", 23000.0));
		al.add(new Product1(222, "laptop", 90000.0));
		al.add(new Product1(111, "fridge", 50000.0));
		
		Collections.sort(al);
		
		al.forEach(System.out::println);
	}

}

============================================


1.which of the following is not a feature of sealed class?
a.	Developer of a superclass gets control over the subclasses. Hence, they can define methods in a more restricted way.
b.	It allows permission to the subclasses that can extend the sealed superclass.
c.	It not allows compilers to enforce the type system on the users of the class.
d.	It makes superclass broadly accessible but not broadly extensible.
Answer: C
2.	Following statement is true or false for sealed class?
Sealed class is extended by permit subclass.
a.	True
b.	False
Answer: A
3.	Which of the following is not allow for sealed class?
a.	Sealed
b.	Non-sealed
c.	Final
d.	Seal
Answer: D
4.	Which of the following modifier is not allow for sealed class?
a.	Private
b.	Public
c.	Final
d.	Abstract
Answer: A
5.	Following code is correct or not?
sealed class NIT
{
	
}
a.	True
b.	False
Answer: B
Sealed class or interface lacks the permits clause and no class or interface from the same 
compilation unit declares NIT as its direct superclass or superinterface
6.	Choose the correct compile time error in the following code?
sealed class NIT permits A
{
	
}

class A
{
	
}
a.	Permitted class A does not declare class NIT as direct child class
b.	Permitted class A does not declare class NIT as direct super class
c.	Permitted class A declare class NIT as direct super class
d.	None of the above
Answer: B
7.	Which of the following code is true or false?
sealed class NIT permits A
{
	
}

non-sealed class A extends NIT
{
	
}
a.	True
b.	False
Answer: A
8.	Which of the following code is true or false?
sealed class NIT permits A
{
	
}

final class A extends NIT
{
	
}
a.	False
b.	True
Answer: B
9.	Which of the following code is true or false?
sealed class NIT permits A,B
{
	
}

final class A extends NIT
{
	
}

non-sealed class B extends NIT
{
	
}
a.	False
b.	True
Answer: B
10.	Choose the correct option for sealed class should not declare direct super class?
a.	Final
b.	Non-sealed
c.	abstract
d.	Sealed
Answer: C
11.	Choose the correct compile time error for the following code?
sealed class NIT permits A
{
	
}

class A extends NIT
{
	
}
a.	The class A with a sealed direct superclass or a sealed direct superinterface NIT should be declared abstract
b.	The class A with a sealed direct superclass or a sealed direct superinterface NIT should be declared either public, private or protected
c.	The class A with a sealed direct superclass or a sealed direct superinterface NIT should be declared either default
d.	The class A with a sealed direct superclass or a sealed direct superinterface NIT should be declared either final, sealed, or non-sealed
Answer: D
12.	Which of the following code is true or false?
sealed class NIT permits A
{
	
}

abstract class A extends NIT
{
	
}
a.	True
b.	False
Answer: B

13.	What is the output of the following code?
sealed class NIT permits Java,Python
{
	public void getData() {
		System.out.println("Both Java and Python");
	}
}

non-sealed class Java extends NIT
{
	@Override
	public void getData() {
		super.getData();
	}
}

final class Python extends NIT
{
	@Override
	public void getData() {
		System.out.println("Python");
	}
}

public class SealedClassExample {
	public static void main(String[] args) {
		NIT n = new NIT();
		n.getData();
		NIT java = new Java();
		java.getData();
		NIT python = new Python();
		python.getData();
	}
}
Answer: 
Both Java and Python
Both Java and Python
Python
14.	What is the output of the following code?
sealed class NIT
{
	String name;
	int age;
	public NIT(String name, int age) {
		
	}
}

final class Person extends NIT
{
	
	public Person(String name, int age) {
		super(name, age);
		if (age>18) {
			System.out.println(name + " You are eligible for vote");
		}
		else 
		{
			System.out.println(name +" Not eliglble for vote");
		}
	}
	
}
public class SealedClassExample {
	public static void main(String[] args) {
		NIT nit = new Person("NareshIT", 25);
		NIT nit1 = new Person("NareshIT", 15);
	}
}
Answer:
NareshIT You are eligible for vote
NareshIT Not eliglble for vote
15.	What is the output of the following code?
sealed class NIT permits Course
{
	String course;	
	public NIT(String course) {
		this.course = course;
	}
}

final class Course extends NIT
{
	int fee;
	public Course(String course, int fee) {
		super(course);
		this.fee = fee;		
	}
	
	public int getFee() 
	{
		return fee;
	}
	
	public String getCourse() 
	{
		return course;
	}
	
}
Answer:
Java 3000
Python 4000
16.	What is the output of the following code?
public class SealedClassExample {
	public static void main(String[] args) {
		Course java = new Course("Java", 3000);
		System.out.println(java.course+" "+java.fee);
		Course python = new Course("Python", 4000);
		System.out.println(python.course+" "+python.fee);
	}
}

sealed class NIT // without permits
{
	String course;	
	public NIT(String course) {
		this.course = course;
	}
}

non-sealed class Course extends NIT // non-sealed
{
	int fee;
	public Course(String course, int fee) {
		super(course);
		this.fee = fee;		
	}
	
	public int getFee() 
	{
		return fee;
	}
	
	public String getCourse() 
	{
		return course;
	}
	
}


public class SealedClassExample {
	public static void main(String[] args) {
		Course java = new Course("Java", 3000);
		System.out.println(java.course+" "+java.fee);
		Course python = new Course("Python", 4000);
		System.out.println(python.course+" "+python.fee);
	}
}
Answer:
Java 3000
Python 4000
17.	What is the output of the following code?
sealed class NIT permits Course
{
	String course;	
	public NIT(String course) {
		this.course = course;
	}
}
class Course extends NIT
{
	int fee;
	public Course(String course, int fee) {
		super(course);
		this.fee = fee;		
	}
	
	public int getFee() 
	{
		return fee;
	}
	public String getCourse() 
	{
		return course;
	}
	
}
public class SealedClassExample {
	public static void main(String[] args) {
		Course java = new Course("Java", 3000);
		System.out.println(java.course+" "+java.fee);
		Course python = new Course("Python", 4000);
		System.out.println(python.course+" "+python.fee);
	}
}
Answer:
Compile time error
The class Course with a sealed direct superclass or a sealed direct superinterface NIT should be declared either final, sealed, or non-sealed

18.	What is the output of the following code?
sealed class NIT permits Java,Python
{
	String courseName;
	public String getCourseName() {
		return courseName;
	}
}

final class Java extends NIT
{
	int fee;
	public Java(int fee) {
		this.fee = fee;		
	}
	
	public int getJavaFee() 
	{
		return fee;
	}
}

non-sealed class Python extends NIT
{
	int fee;
	public Python(int fee) {
		this.fee = fee;		
	}
	
	public int getPythonFee() 
	{
		return fee;
	}	
}


public class SealedClassExample {
	public static void main(String[] args) {
		NIT nit = new Java(2000);
		nit.courseName = "Java";
		System.out.println(nit.getCourseName()+" "+getCourse(nit));
		nit.courseName = "Python";
		nit = new Python(3000);
		//nit.courseName = "Python";
		System.out.println(nit.getCourseName()+" "+getCourse(nit));
	}
	
	public static int getCourse(NIT courseName) {
		if (courseName instanceof Java) {
			return (((Java) courseName).getJavaFee());
		}
		
		else if(courseName instanceof Python) 
		{
			return (((Python) courseName).getPythonFee());
		}
		else
			return 0;
	}
	
}
Answer:
Java 2000
null 3000

===============================================================================================

Program 01 :
------------
Create a record called Product which is accepting two components pid and pname.

Write one compact constructor to throw IllegalArgumentException if pid is zero or Negative.

Create one TreeSet class which will hold the Custom product object.

With the help of TreeSet constructor using Comparator interface, write the logic to sort the Product data on the following basis
 
1) Sort based on the pid in ascending order.
2) Sort based on the pid in descending order.
3) Sort based on the name in Alphabetical order.
4) Sort based on the name in Reverse order.

package treeset;

public record Product5(int pid,String pName) {
public Product5{
	if(pid<=0) {
		throw new IllegalArgumentException();
	}
}
}

package treeset;

import java.util.TreeSet;

public class TreeSet5 {

	public static void main(String[] args) {
		TreeSet<Product5> ts=new TreeSet<>((s1,s2)->s1.pid()-s2.pid());
		ts.add(new Product5(2,"ravali"));
		ts.add(new Product5(8,"avi"));
		ts.add(new Product5(1,"lohitha"));
		ts.add(new Product5(3,"koumu"));
	    System.out.println("pid in ascending order");
	    ts.forEach(x->System.out.println(x));
	    
	    TreeSet<Product5> ts1=new TreeSet<>((s1,s2)->s2.pid()-s1.pid());
		ts1.add(new Product5(2,"ravali"));
		ts1.add(new Product5(8,"avi"));
		ts1.add(new Product5(1,"lohitha"));
		ts1.add(new Product5(3,"koumu"));
	    System.out.println("pid in descending order");
	    ts1.forEach(x->System.out.println(x));
	    
	    TreeSet<Product5> ts2=new TreeSet<>((s1,s2)->s1.pName().compareTo(s2.pName()));
		ts2.add(new Product5(2,"ravali"));
		ts2.add(new Product5(8,"avi"));
		ts2.add(new Product5(1,"lohitha"));
		ts2.add(new Product5(3,"koumu"));
	    System.out.println("name in Alphabetical order.");
	    ts2.forEach(x->System.out.println(x));
	    
	    TreeSet<Product5> ts3=new TreeSet<>((s1,s2)->s2.pName().compareTo(s1.pName()));
		ts3.add(new Product5(2,"ravali"));
		ts3.add(new Product5(8,"avi"));
		ts3.add(new Product5(1,"lohitha"));
		ts3.add(new Product5(3,"koumu"));
	    System.out.println("name in Reverse order");
	    ts3.forEach(x->System.out.println(x));
	}

}

----------------------------------------------------------------------
Program 02 :
------------
Create a record called Book which take two components name and author.

Implement this Book record with Comparable interface to sort the books based on the name using compareTo() method.

Create an ELC class BookSorted which will sort the book based on the name.

Create one TreeSet object which will hold Book as a custom object.

Insert 5 book records using custom object.

Display all the books sorted in alphabetial order.

package treeset;

import java.util.TreeSet;

public class BookSorted4 {

	public static void main(String[] args) {
		TreeSet<Book4> ts=new TreeSet<>();
		ts.add(new Book4("Wings of fire","ravali"));
		ts.add(new Book4("How to talk with others","ravi"));
		ts.add(new Book4("The subconsiousMind","Rassi"));
		ts.add(new Book4("Power of selfLove","koumu"));
		ts.add(new Book4("Under the sea","neha"));
	    ts.forEach(x->System.out.println(x));
	}

}

package treeset;

 record Book4 (String bName ,String bAuthorName) implements Comparable<Book4>{

	@Override
	public int compareTo(Book4 b) {
		return (this.bName).compareTo(b.bName);
	}
}

===================================================================================

Program 01 
-----------
You have to create a simple Student Grade Book application in Java. The program should allow users to maintain a list of students along with their grades, add new students and grades, remove existing students, and exit the application.

You are provided with a partially implemented Java program for the Student Grade Book. However, it has some issues, and your task is to complete the implementation and ensure that it works correctly.

Requirements:

The program should display the following menu to the user:


Student Grade Book:
(List of students and their grades displayed here)

Options:
1. Add Student Grade
2. Remove Student Grade
3. Exit
Enter your choice:
If the grade book is empty, it should indicate that there are no students and grades to display.
Implement the following functionality for each menu option:

Add Student Grade (Option 1): Allow the user to enter the name of a new student and their grade. Add this information to the grade book as a key-value pair (student name as the key and grade as the value). Print a confirmation message indicating that the grade has been added for the student.

Remove Student Grade (Option 2): If the grade book is empty, display a message indicating that it's empty. Otherwise, allow the user to enter the name of the student whose grade they want to remove. If the student exists in the grade book, remove the student and their grade from the grade book and print a confirmation message. If the student is not found, print an error message.

Exit (Option 3): Display a farewell message and exit the program.

For any other invalid input, display a message indicating that the choice is invalid and ask the user to select a valid option.

The program should run in a continuous loop until the user selects the "Exit" option.

Your Task:

Complete the implementation of the provided Java code.

Ensure that the program handles user input correctly and provides the expected functionality as described in the requirements.

Test the program thoroughly to ensure it works as expected.

Submit the complete Java code for the Student Grade Book application.

Note: You can use the provided Java code as a starting point and make any necessary modifications to meet the requirements of the problem statement.

package hashMap;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class StudentGradeBookApplication10 {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		Map<String, Double> gradeBook = new HashMap<>();

		while (true) {
			displayMenu(gradeBook);
			int choice = scanner.nextInt();
			scanner.nextLine(); // Consume the newline character

			switch (choice) {
			case 1:
				addStudentGrade(scanner, gradeBook);
				break;
			case 2:
				removeStudentGrade(scanner, gradeBook);
				break;
			case 3:
				System.out.println("Thank you for using the Student Grade Book. Goodbye!");
				return;
			default:
				System.out.println("Invalid choice. Please select a valid option.");
			}
		}

	}

	private static void displayMenu(Map<String, Double> gradeBook) {
		System.out.println("\nStudent Grade Book:");
		if (gradeBook.isEmpty()) {
			System.out.println("No students and grades to display.");
		} else {
			System.out.println("List of students and their grades:");
			for (Map.Entry<String, Double> entry : gradeBook.entrySet()) {
				System.out.println(entry.getKey() + ": " + entry.getValue());
			}
		}
		System.out.println("\nOptions:");
		System.out.println("1. Add Student Grade");
		System.out.println("2. Remove Student Grade");
		System.out.println("3. Exit");
		System.out.print("Enter your choice: ");
	}

	private static void addStudentGrade(Scanner scanner, Map<String, Double> gradeBook) {
		System.out.print("Enter student name: ");
		String studentName = scanner.nextLine();
		System.out.print("Enter student grade: ");
		double studentGrade = scanner.nextDouble();
		scanner.nextLine(); // Consume the newline character

		gradeBook.put(studentName, studentGrade);
		System.out.println("Grade added for student " + studentName);
	}

	private static void removeStudentGrade(Scanner scanner, Map<String, Double> gradeBook) {
		if (gradeBook.isEmpty()) {
			System.out.println("Grade book is empty.");
			return;
		}

		System.out.print("Enter student name to remove: ");
		String studentName = scanner.nextLine();

		if (gradeBook.containsKey(studentName)) {
			gradeBook.remove(studentName);
			System.out.println("Student " + studentName + " removed from the grade book.");
		} else {
			System.out.println("Student " + studentName + " not found in the grade book.");
		}
	}

}

Program 02 
----------
You have to create an Address Book application in Java that utilizes a Contact class to represent contacts. The program should allow users to maintain an address book, add new contacts, remove existing contacts, and exit the application.

You are provided with a Java program for the Address Book application. The program includes a Contact class that represents contacts, and it has some issues. Your task is to complete the implementation and ensure that it works correctly.

Requirements:

The program should display the following menu to the user:


Address Book:
(List of contacts displayed here)

Options:
1. Add Contact
2. Remove Contact
3. Exit
Enter your choice:
If the address book is empty, it should indicate that the address book is empty.
Implement the following functionality for each menu option:

Add Contact (Option 1): Allow the user to enter the contact's name and their phone number. Create a new Contact object with the provided information and add it to the address book using the name as the key and the Contact object as the value. Print a confirmation message indicating that the contact has been added.

Remove Contact (Option 2): If the address book is empty, display a message indicating that it's empty. Otherwise, allow the user to enter the name of the contact to remove. If the contact name is found in the address book, remove the contact and print a confirmation message. If the contact name is not found, print an error message.

Exit (Option 3): Display a farewell message and exit the program.

For any other invalid input, display a message indicating that the choice is invalid and ask the user to select a valid option.

The program should run in a continuous loop until the user selects the "Exit" option.

Your Task:

Complete the implementation of the provided Java code.

Ensure that the program handles user input correctly and provides the expected functionality as described in the requirements.

Test the program thoroughly to ensure it works as expected.

Submit the complete Java code for the Address Book application.

Note: You can use the provided Java code as a starting point and make any necessary modifications to meet the requirements of the problem statement.

package hashMap;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class AddressBookApplicatio11 {

	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
        Map<String, Contact> addressBook = new HashMap<>(); // Using a HashMap to store contacts

        while (true) {
            System.out.println("\nAddress Book:");
            if (addressBook.isEmpty()) {
                System.out.println("Address book is empty.");
            } else {
                addressBook.forEach((name, contact) ->
                        System.out.println(name + ": " + contact.getPhoneNumber()));
            }

            System.out.println("\nOptions:");
            System.out.println("1. Add Contact");
            System.out.println("2. Remove Contact");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");
            int choice = input.nextInt();
            input.nextLine(); // Consume newline after reading the integer

            switch (choice) {
                case 1:
                    System.out.print("Enter contact name: ");
                    String name = input.nextLine();
                    System.out.print("Enter phone number: ");
                    String phoneNumber = input.nextLine();
                    Contact newContact = new Contact(name, phoneNumber);
                    addressBook.put(name, newContact);
                    System.out.println("Contact added successfully!");
                    break;
                case 2:
                    if (addressBook.isEmpty()) {
                        System.out.println("Address book is empty.");
                    } else {
                        System.out.print("Enter contact name to remove: ");
                        String contactToRemove = input.nextLine();
                        if (addressBook.containsKey(contactToRemove)) {
                            addressBook.remove(contactToRemove);
                            System.out.println("Contact removed successfully!");
                        } else {
                            System.out.println("Contact not found.");
                        }
                    }
                    break;
                case 3:
                    System.out.println("Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }

	}

}
class Contact {
    //private String name;
    private String phoneNumber;

    public Contact(String name, String phoneNumber) {
        //this.name = name;
        this.phoneNumber = phoneNumber;
    }

//    public String getName() {
//        return name;
//    }

    public String getPhoneNumber() {
        return phoneNumber;
    }
}

=======================================================================================================================

Q1) Find the output

public class HashMapInternals 
{
	public static void main(String[] args)
	{
		Map<String,String> map = new HashMap<>();
		map.put("Ravi","Ampt");
		map.put(new String("Ravi"),"Hyd");

		System.out.println(map);
        }
}


Q2) Find the output

        public class BufferTest
	{
	   public static void main(String [] args)
	   {
	        Integer i1 = 128;
		Integer i2 = 128;		
		System.out.println(i1==i2);
		System.out.println(i1.equals(i2));
	    }
	 }

Q3) Find the output

        public class BufferTest
	{
	   public static void main(String [] args)
	   {
	        Map<Integer,String> map = new HashMap<>();
		map.put(128,"Ampt");
		map.put(new Integer(128),"Hyd");
		System.out.println(map.size());
	    }
	 }


Q4) Find the output

public class CollectionExample 
{
   public static void main(String[] args) 
     {
	HashMap hash = new HashMap<>();
	hash.put("nit", 500);
	hash.put("info", 644);
	hash.put("tech", "google");
	System.out.println(hash.get("tech"));
	System.out.println(hash.get("google"));
	System.out.println(hash.getOrDefault("nit", "Technology"));
	System.out.println(hash.get("info"));
     }
}

Q5) Find the output

public class CollectionExample 
{
   public static void main(String[] args) 
     {
	HashMap hash = new HashMap<>();
	hash.put("nit", 500);
	hash.put("info", 644);
	hash.put("tech", "google");
	System.out.println(hash.get("tech"));
	System.out.println(hash.get("google"));
	System.out.println(hash.getOrDefault("nit", "Technology"));
	System.out.println(hash.get("info"));
     }
}

Q6) Find the output

public class HashMapExample 
{
   public static void main(String[] args) 
     {
	
        Map<String, Integer> map = new HashMap<>();
	map.put("apple", 1);
	map.put("banana", 2);
	map.put("orange", 3);

	map.replaceAll((k, v) -> v * 2);

	System.out.println(map);
     }
}

Q7) Find the output

public class Participate 
{
  public static void main(String args[]) {
	        HashMap participant = new HashMap();
	        participant.put(1 + 1, "Dhoni");
	        participant.put(1 + 1, "Kohli");
	        participant.put(2 + 1, "Rohit");
	        Set set = participant.entrySet();
	        Iterator itr = set.iterator();
	        while (itr.hasNext()) {
	            Map.Entry m = (Entry) itr.next();
	            System.out.print(m.getKey() + " " + m.getValue()+" ");
	        }
}

Q8) Find the output

import java.util.HashMap;
import java.util.Map;

public class Test
{
      public static void main(String[] args) 
      {
           Map<ToDos, String> m = new HashMap<ToDos, String>();
           ToDos t1 = new ToDos("Monday");
           ToDos t2 = new ToDos("Monday");
           ToDos t3 = new ToDos("Tuesday");
           m.put(t1, "doLaundry");
           m.put(t2, "payBills");
           m.put(t3, "cleanAttic");
           System.out.println(m.size());
     }
}

class ToDos 
{
      String day;

      ToDos(String d) 
      {
           day = d;
      }

      public boolean equals(Object o) 
      {
            return ((ToDos) o).day == this.day;
      }

	  //Comment hashcode method and see and analyse the result 
      public int hashCode() { return 9; }
}


Q9) Find the output

public class Test
{
      public static void main(String[] args)
      {
           NavigableMap<Integer, String> map = new TreeMap<Integer, String>();
           map.firstKey();
           System.out.println(map.size());
      }
}

10) Find the output

public class Test
{
      public static void main(String[] args) 
      {
           Map<String, Integer> map = new HashMap<String, Integer>();
           map.put("T", 1);
           map.put("M", 2);
           map.keySet().add("A",3);
           System.out.println(map.size());
     }
}
------------------------------------------------------------------
Program 01 :
------------
Write a program to show that WeakHashMap keys are weak in comparison to HashMap, if key is a reference key and it's value is set to be null.

package weakHashMap;

import java.util.HashMap;
import java.util.WeakHashMap;

public class PgmShowsWeakAndStrongReferenceTypeOfHashMapAndWeakHashMapRespectively1 {

	public static void main(String[] args) throws Exception {
		WeakHashMap<Test, String> map = new WeakHashMap<>();
		Test t = new Test();
		map.put(t, " Rahul ");
		System.out.println(map); // {Test Nit = Rahul}
		t = null;
		System.gc(); // Explicitly calling garbage collector
		Thread.sleep(3000);
		System.out.println(map); // {}
		System.out.println("---------------------------");
		HashMap<Test, String> map1 = new HashMap<>();
		Test t1 = new Test();
		map1.put(t1, " Ravi ");
		System.out.println(map1);  
		t1 = null;
		System.gc(); // Explicitly calling garbage collector
		Thread.sleep(3000);
		System.out.println(map1);
	}
}
class Test {
	@Override
	public String toString() {
		return "Test Nit";
	}
	@Override
	public void finalize() // called automaticaly if an object is eligible 4 GC
	{
		System.out.println("finalize method is called");
	}
}


Program 02 :
------------
Write a program to show the internal working of IdentityHashMap in comparison to HashMap.



package IdentityHashMap;

import java.util.HashMap;
import java.util.IdentityHashMap;

public class IdentityHashMapDemo1 {

	public static void main(String[] args) {
		HashMap<String,Integer> hm = new HashMap<>();
		IdentityHashMap<String,Integer> ihm = new IdentityHashMap<>();
		hm.put("Ravi",23);
		hm.put(new String("Ravi"), 24);
		String s="Ravi";
		ihm.put(s,23);
		System.out.println(s.hashCode());
		String st=new String("Ravi");
		System.out.println(st.hashCode());
		ihm.put(st, 27); //compares based on == operator
		System.out.println("HashMap size :"+hm.size());  
		System.out.println(hm);
		System.out.println("........................");
		System.out.println("IdentityHashMap size :"+ihm.size()); 
		System.out.println(ihm);

	}

}

==========================================================================

Que-1>
__________________________________________________________________________________________
You are tasked with designing a system for managing different modes of operation for car engines. The system must incorporate various engine states such as operational, failure with possibility of retry, and needing servicing.

Specifications:

Engine Interface:
-------------------------
Define an interface named Engine with a method mode() which returns an integer representing the current mode of the engine.

Engine Modes:
-------------------------
Implement three classes MockSuccessEngine, MockFailAndRetryEngine, and MockServicingEngine, all of which implement the Engine interface.
MockSuccessEngine: Represents a fully operational engine (mode 0).
MockFailAndRetryEngine: Represents an engine that has failed with possibility of retry (mode 1).
MockServicingEngine: Represents an engine in need of servicing (mode 2).

Car Class:
-------------------------
Define a class named Car which has a relationship with an Engine.
Implement a constructor in Car class that takes an Engine object as parameter to set the engine.
Implement a method drive(int model) in Car class which takes an integer representing the desired model of the engine operation.
If the mode is 0, print "Engine started".
If the mode is 1, print "Engine fail kindly try once!".
If the mode is 2, print "Need Servicing!!!!".
If the mode is other than 0, 1, or 2, print "Invalid Input".

User Interaction:
-------------------------
In the User class main method, create instances of Car with different types of engine modes (MockSuccessEngine, MockFailAndRetryEngine, and MockServicingEngine).
Call the drive method for each instance of Car with various model inputs to observe the behavior.
_________________________

// Define the Engine interface
interface Engine {
    int mode();
}

// Implement the MockSuccessEngine class
class MockSuccessEngine implements Engine {
    @Override
    public int mode() {
        return 0; // Fully operational engine
    }
}

// Implement the MockFailAndRetryEngine class
class MockFailAndRetryEngine implements Engine {
    @Override
    public int mode() {
        return 1; // Engine failed with possibility of retry
    }
}

// Implement the MockServicingEngine class
class MockServicingEngine implements Engine {
    @Override
    public int mode() {
        return 2; // Engine needs servicing
    }
}

// Define the Car class
class Car {
    private Engine engine;

    public Car(Engine engine) {
        this.engine = engine;
    }

    public void drive(int model) {
        switch (model) {
            case 0:
                System.out.println("Engine started");
                break;
            case 1:
                System.out.println("Engine fail kindly try once!");
                break;
            case 2:
                System.out.println("Need Servicing!!!!");
                break;
            default:
                System.out.println("Invalid Input");
        }
    }
}

// User class for testing
public class User {
    public static void main(String[] args) {
        // Create instances of Car with different engine modes
        Car car1 = new Car(new MockSuccessEngine());
        Car car2 = new Car(new MockFailAndRetryEngine());
        Car car3 = new Car(new MockServicingEngine());

        // Test drive method for each car
        car1.drive(0); // Engine started
        car2.drive(1); // Engine fail kindly try once!
        car3.drive(2); // Need Servicing!!!!
        car1.drive(3); // Invalid Input
    }
}

____________________________________________________________________________________
Que-2
______________________________
You are required to implement a system that utilizes interfaces and dynamic class loading in Java. The system involves defining interfaces, implementing classes, and dynamically loading classes at runtime.

Specifications:

Interface Definition:
--------------------------------
Define an interface named I1 with a method m1() which returns an integer.

Class Implementations:
---------------------------------
Implement a class A that implements I1.
A should have integer fields a and b.
Implement a parameterless constructor and a parameterized constructor that initializes a and b.
Override the m1() method to return the sum of a and b.
Implement getter and setter methods for a and b.
Implement another class B that also implements I1.
B should have integer fields a and b.
Implement a parameterless constructor and a parameterized constructor that initializes a and b.
Override the m1() method to return the product of a and b.
Implement getter and setter methods for a and b.

Class C:
---------------------------------
Implement a class named C with a method display(int a1, int b1).
Based on the user choice:-
Inside display, instantiate an object of class B, set its fields using the provided parameters, and invoke the m1() method.
Print the result obtained from m1().
Inside display, instantiate an object of class A, set its fields using the provided parameters, and invoke the m1() method.

Print the result obtained from m1().

Dynamic Class Loading:
----------------------------------
In the User01 class main method, use dynamic class loading to instantiate an object of class A and B.
[Use the field initilization by calling paramterize constructor ]
[After that try with setter method to initilize the fields]
[Don't use new keyword to create the Object of the class , use some other functionality 
 which will create the object of the class and then you can call the methods]
[Create that type of code so that if you switch from one class to another class you have to change 
  only few things not the all code :-
 For Eg :- First we are creating the object of class A and call the m1() of class A 
           then we want to call the m1() of class B then you have to change the code of object creation
           for that we have to find some solution].

Invoke the m1() method and print the result.

interface I1 {
    int m1();
}

class A implements I1 {
    private int a;
    private int b;

    public A() {
        // Default constructor
    }

    public A(int a, int b) {
        this.a = a;
        this.b = b;
    }

    @Override
    public int m1() {
        return a + b;
    }

    // Getter and setter methods for a and b
    // ...
}

class B implements I1 {
    private int a;
    private int b;

    public B() {
        // Default constructor
    }

    public B(int a, int b) {
        this.a = a;
        this.b = b;
    }

    @Override
    public int m1() {
        return a * b;
    }

    // Getter and setter methods for a and b
    // ...
}

class C {
    public void display(int a1, int b1) {
        // Instantiate an object of class B
        B bObject = new B(a1, b1);
        System.out.println("Result from B: " + bObject.m1());

        // Instantiate an object of class A
        A aObject = new A(a1, b1);
        System.out.println("Result from A: " + aObject.m1());
    }
}

public class User01 {
    public static void main(String[] args) throws Exception {
        // Dynamic class loading for class A
        Class<?> classA = Class.forName("A");
        Constructor<?> constructorA = classA.getConstructor(int.class, int.class);
        I1 aInstance = (I1) constructorA.newInstance(5, 3);
        System.out.println("Dynamic class loading for A: " + aInstance.m1());

        // Dynamic class loading for class B
        Class<?> classB = Class.forName("B");
        Constructor<?> constructorB = classB.getConstructor(int.class, int.class);
        I1 bInstance = (I1) constructorB.newInstance(4, 2);
        System.out.println("Dynamic class loading for B: " + bInstance.m1());
    }
}

(DOUBT)
____________________________________________________________________________________________________________
Que-3
________________
Write the code for creating a Singleton Class ?
[ Means Your Program should able to generate only one object through out the 
  scope of the project ].



package implementingSystemThatUtilizesInterfacesAndDynamicClassLoadingInJava;


	// Singleton class with eager initialization
	 class Singleton {
	    private static final Singleton instance = new Singleton(); // Eagerly initialized instance

	    // Private constructor to prevent other instances from being created
	    private Singleton() {
	        // Initialization code (if needed)
	    }

	    // Public static method to return the single instance
	    public static Singleton getInstance() {
	        return instance;
	    }

	    // Other methods and fields (if needed)
	}

	// Example usage
	public class SingletonDemo2 {
	    public static void main(String[] args) {
	    	Singleton singleton1 = Singleton.getInstance();
	    	Singleton singleton2 = Singleton.getInstance();

	        if (singleton1 == singleton2) {
	            System.out.println("Both objects are the same instance.");
	        }
	    }
	}


___________________________________________________________________________________________________________
Que-4
________________
You are tasked with developing a Hospital Finder application in Java. The application should load hospital data from a properties file, allowing users to retrieve information about hospitals and their treatments.

Specifications:

Hospital Class:
---------------------------
Create a class named Hospital to represent hospital entities.
Include private fields for hospital code, name, list of treatments, contact person, contact number, and location.
Implement a parameterless constructor and a parameterized constructor to initialize the fields.
Implement getter and setter methods for all fields.
Override the toString() method to provide a string representation of the hospital object.

HospitalService Class:
--------------------------
Create a class named HospitalService to handle hospital-related operations.
Include an ArrayList to store instances of Hospital.
Implement a constructor to load hospital data from a properties file named hospital.properties.
Load hospital data from the properties file into the ArrayList.
Implement methods:
getHospitals(): Returns a map of hospital codes and names.
getHospitalDetails(int hospitalCode): Returns details of the hospital corresponding to the given hospital code.

HospitalFinder Class (Main):
----------------------------
Implement the main method in a class named HospitalFinder.
Instantiate a HospitalService object.
Display the hospitals and their codes using the getHospitals() method.
Retrieve and display details of hospitals using the getHospitalDetails(int hospitalCode) method for sample hospital codes.

Properties File:
-----------------------------
Create a properties file named hospital.properties.
Store hospital data in the following format:
hospital1.name=Yashoda
hospital1.treatments=Cardiac,ENT,Ortho
hospital1.contactPerson=JOHN
hospital1.contactNumber=9848111111
hospital1.location=Hyd

----------------------------------------------------------------------------------------------

E1.What is the output of the following code?
class NareshIT<T>
{
	private T test;
	
	public void set(T test)
	{
		this.test = test;
	}
	public T get()
	 {
		 return test;
	 }
}
public class GenericTest 
{
  public static void main(String[] args) 
  {
     NareshIT<Integer> nit = new NareshIT();
		nit.set(10);
		System.out.println(nit.get());
   }
}
O/P:10

--------------------------------------

2.What is the output of the following code?
public class GenericTest 
{
  public static void main(String[] args) 
  {	
	ArrayList al = new ArrayList<>();
		  
	al.add("Naresh"); 
	al.add("I");
	al.add("Technologies");
	String name = al.get(1);
	System.out.println(name);
   }
}
o/p:
I
----------------------------

3.What is the output of the following code?
public class GenericTest {
	public static void main(String[] args) {				
		  ArrayList<String> al = new ArrayList<String>();		  
		  al.add("Naresh"); 
		  al.add("I");
		  al.add("Technologies");
		  String name = al.get(1);
		  System.out.println(name);	
	}
}

O/P:
I
-----------------------
4.Explain the output of the following code?
class Test<R,A>
{
	private R r;
	public void set(A a) 
	{
		r = a;
	}
	
	public R get() 
	{
		return r;
	}
}
public class GenericTest 
{
   public static void main(String[] args) 
   {
      Test<String,String> test = new Test(); 
      test.set("Info");
      System.out.println(test.get());
   }
}
O/P:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	Type mismatch: cannot convert from A to R

	at generics.Test.set(GenericTest1.java:11)
	at generics.GenericTest1.main(GenericTest1.java:24)

-------------------------------

5.What is the output of the following code?
class NareshIT<R,A>
{
	private R r;
	public void set(A a) 
	{
		r = (R)a; // casting A to R 
	}
	
	public R get() 
	{
		return r;
	}
}
public class GenericTest {
	public static void main(String[] args) {		
		
		  NareshIT<String,String> test = new NareshIT(); 
		  test.set("NareshIT");
		  System.out.println(test.get()); 
	}
}
o/p:
NareshIT
-----------------------------


6.Is there any error in the below program?
class Test<R,A>
{
	private R r;
	private A a;
	public void set(A a, R r) //method 
	{
		this.a = a;
		this.r = r;
	}
	
	public String get() 
	{
		String str = a.toString()+r.toString();
		return str;
	}
}

public class GenericTest 
{
  public static void main(String[] args) 
  {

		  Test<String,String> test = new Test(); 
		  test.set("Naresh I ","Technologies");
		  System.out.println(test.get()); 
  }
}
o/p:
Naresh I Technologies
--------------------------

7.Is there any error in the below program?
class Test<R,A>
{
	private R r;
	private A a;
	
	public void set(A a, R r) //method 
	{
		this.a = a;
		this.r = r;
	}
	
	public R get() 
	{
		r = a+r; 
		return r;
	}
}

public class GenericTest {
	public static void main(String[] args) {
		
		  Test<String,String> test = new Test(); 
		  test.set("Naresh I ","Technologies");
		  System.out.println(test.get());
	}
}
o/p:
Exception in thread "main" java.lang.Error: Unresolved compilation problem: 
	The operator + is undefined for the argument type(s) A, R

	at generics.Test.get(GenericTest2.java:18)
	at generics.GenericTest2.main(GenericTest2.java:29)

------------------------------

8.What is the output of the following program?
class NareshIT<K,V>
{
	private K key;
	private V value;
	//constructor
	public NareshIT(K key, V value) {
		this.key = key;
		this.value = value;
	}
	
	public K getKey() {
		return key;
	}
	public V getValue() {
		return value;
	}
}
public class GenericTest {
	public static void main(String[] args) {
		NareshIT<String,String> nit = new NareshIT("Naresh","IT");
		System.out.println(nit.getKey()+nit.getValue());
		NareshIT<Integer,String> integer = new NareshIT(1003, "Naresh"); 
		System.out.println(integer.getKey());	
	}
}
o/p:
NareshIT
1003
--------------------------------------

9.What is the output of the following code?
class NareshIT<T>
{
	private T test;
	
	public void set(T test)
	{
		this.test = test;
	}
	public T get()
	 {
		 return test;
	 }
}

public class GenericTest {
	public static void main(String[] args) {
		NareshIT<String> nit = new NareshIT();
		nit.set(new String("Naresh I Technologies"));
		String str = nit.get();
		System.out.println(str);
	}
}
o/p:
Naresh I Technologies
--------------------

10.What is the output of the following code?
class NareshIT<K extends Number ,V extends String>
{
	private K key;
	private V value;
		
	public void set(K key, V value) {
		this.key = key;
		this.value = value;
	}
	
	public K getKey() {
		return key;
	}
	public V getValue() {
		return value;
	}
}

public class GenericTest {
	public static void main(String[] args) {
		NareshIT<Integer, String> nit = new NareshIT();
		nit.set(9999, new String("Naresh I Technologies"));
		System.out.println(nit.getKey()+" "+nit.getValue());	
	}
}
o/p:
9999  Naresh I Technologies
------------------------------

11.Find the error in the following code?
class NareshIT<T extends Float>
{
	private T test;
	
	public void set(T test)
	{
		this.test = test;
	}
	
	public T get()
	 {
		 return test;
	 }
}
public class GenericTest {
	public static void main(String[] args) {
		NareshIT<Double> nit1 = new NareshIT();
		nit1.set(9999.0);
		System.out.println(nit1.get());
	}
}
o/p;

------------------------------

12.What is the output of the following code?
interface NareshIT<T>
{
	void nit(T type);
}

class Test implements NareshIT
{
	public void nit(Object type) 
	{
		System.out.println(type);
	};
}
public class GenericTest{
	public static void main(String[] args) {
		Test test = new Test();
		test.nit("Naresh I technologies");
		test.nit(1.66);	
	}
}

13.What is the output of the following code?
class NareshIt
{
	public void nit(List<?> list)
	{
		for (Object li : list) {
			System.out.print(li+" ");
		}
		System.out.println();
	}
}

public class GenericTest{
	public static void main(String[] args) {
				
		NareshIt str = new NareshIt();
		List<Integer> listInt = Arrays.asList(1001,252,36);
		List<String> liststr = Arrays.asList("Naresh","I","Technologies");
		
		str.nit(listInt);
		str.nit(liststr);
	}
}

14.What is the output of the following code?
class StringTest implements NareshIT<String>
{

	@Override
	public void nit(String type) {
		System.out.println(type);
	}
	
}
public class GenericTest{
	public static void main(String[] args) {
		StringTest test = new StringTest();
		test.nit("Naresh I technologies");
		test.nit(1.66);
	}
}


15.What is the output of the following program?
class NareshIt<T>
{
	public void nit(NareshIt<?> it)
	{
		System.out.println(it);
	}
}

public class GenericTest{
	public static void main(String[] args) {		
		NareshIt<String> str = new NareshIt();
		str.nit("Naresh I Technologies");
	}
}


16.What is the output of the following code?
class NareshIT<T>
{
	
}
public class GenericTest{
	public static void main(String[] args) {	
		NareshIT<String> str = new NareshIT();
		NareshIT<Float> flo = new NareshIT();
		System.out.println(str.equals(flo));
	}
}

17.What is the output of the following code?
class NareshIT<T>
{
	
}
public class GenericTest{
	public static void main(String[] args) {	
		NareshIT<String> str = new NareshIT();
		NareshIT<Float> flo = new NareshIT();
		System.out.println(str.getClass().equals(flo.getClass()));
	}
}

18.What is the output of the following code?
public class GenericTest{
	public static void main(String[] args) {
		System.out.println(display(1));
		System.out.println(display("NareshIT"));
		System.out.println(display(3.25f));
		
	}
	public static<E> E display(E element)
	{
		E e = element;
		return e;
	}
}

19.What is the output of the following code?
public class GenericTest{
	public static void main(String[] args) {
		System.out.println(display(1).getClass());
		System.out.println(display("NareshIT").getClass());
		System.out.println(display(3.25f).getClass());
	}
	public static<E> E display(E element)
	{
		E e = element;
		return e;
	}
}

20.What is the output of the following code?

class Fruit    
{
}
class Apple extends Fruit   
{
	@Override
	public String toString()
	{
		return "Apple";
	}
}

class Basket<E>      
{
	private E element;  	
	public void setElement(E element) 
	{
		this.element = element;
	}	

	public E getElement() 
	{
		return this.element;		
	}
}

public class Test16
{
	public static void main(String[] args) 
	{
		Basket<Fruit> b = new Basket<>();
		b.setElement(new Apple());

		Apple x = b.getElement();	
		System.out.println(x);
      		
	}
}
-----------------------------------------------------------------------

Program-1
----------
A class Employee is given to you. It contains the following:
Instance Variables: 
name:String  private  
employeeId: int  private
salary: double private
Methods: set and get methods for all.
Default constructor AND  All-fields constructor

An Enum called ManagerType is given to you. It defines the two types of managers, HR and Sales


Create two sub classes of Employee called Manager and Clerk. 
The details of each class is given below.
For class Manager:
Instance Variables:
type: enum ManagerType private


Methods: set and get methods for type. 
Default constructor AND  All-fields constructor

Override :
setSalary(): If the type is HR manager, add 10000 to the given salary 
and for a sales manager, add 5000 to the given salary.


For class Clerk:
Instance Variables: 
speed: int
accuracy:int

Methods: set and get methods for speed and accuracy.
Default constructor AND All-fields constructor.

Override:
setSalary(): If the clerk has a typing speed of greater than 70 AND accuracy greater than 80 then add 1000 to the salary. Otherwise set the same salary. 
Note that any change in speed and accuracy(using setSpeed() or setAccuracy() ) should result in 
recalculation of salary, as the Trainee may qualify for the extra amount. 
HOWEVER, when once the extra 1000 is given for extra speed/ and accuracy it should not be given again.

For example, if a Clerk's speed is already 85 and accuracy is already 75, and the speed is changed to 90, 
then the extra amount should not be added again. This extra amount should be credited to salary only the first time the Clerk qualifies for the amount.
Provide proper constructors for all classes.
A class EmployeeTester is given to you with a main method. Use this class to test your solution's classes and methods.
---------------------------------------------------
package employeepgmUsingEnum;

public class Employee1 {
private String name;
private int employeeId;
private double salary;
public Employee1() {
	
}
public Employee1(String name, int employeeId, double salary) {
	super();
	this.name = name;
	this.employeeId = employeeId;
	this.salary = salary;
}
public String getName() {
	return name;
}
public int getEmployeeId() {
	return employeeId;
}
public double getSalary() {
	return salary;
}
public void setName(String name) {
	this.name = name;
}
public void setEmployeeId(int employeeId) {
	this.employeeId = employeeId;
}
public void setSalary(double salary) {
	this.salary = salary;
}
}
--------------------------
package employeepgmUsingEnum;

public class Manager1 extends Employee1{
private ManagerType1 type;

public Manager1(String eName,int eId,double eSalary,ManagerType1 type) {
	super(eName,eId,eSalary);
	this.type = type;
}
public Manager1() {
	
}
public void setType(ManagerType1 type) {
	this.type = type;
}
public ManagerType1 getType() {
	return type;
}
@Override
public void setSalary(double salary) {
	if (type == ManagerType1.HR) {
        super.setSalary(salary + 1000);
    } else if (type == ManagerType1.SALES) {
        super.setSalary(salary + 500);
    }
}

}
---------------------------
package employeepgmUsingEnum;

public class Clerk1 extends Employee1{
	private int speed;
	private int accuracy;
private boolean extraAmountGiven;
public Clerk1(String eName,int eId,double eSalary,int speed, int accuracy) {
	super(eName,eId,eSalary);
	this.speed = speed;
	this.accuracy = accuracy;
	this.extraAmountGiven=false;
}
public Clerk1()
{
	
}
public int getSpeed() {
	return speed;
}
public int getAccuracy() {
	return accuracy;
}
public void setSpeed(int speed) {
	this.speed = speed;
}
public void setAccuracy(int accuracy) {
	this.accuracy = accuracy;
}
public void setSalary(double salary) {
	if(!extraAmountGiven&&speed>70&&accuracy>80) {
			super.setSalary(salary+1000);
			extraAmountGiven=true;
	}
	else {
	super.setSalary(salary);
	}
}

}
-------------------------------
package employeepgmUsingEnum;

public enum ManagerType1 {
HR,SALES;
}
--------------------------
package employeepgmUsingEnum;

public class EmployeeTester1 {

	public static void main(String[] args) {
		Manager1 m=new Manager1("ravali",1,50000,ManagerType1.SALES);
		m.setSalary(5000);
		System.out.println("Sales Manager Salary: $" +m.getSalary());
		Clerk1 c=new Clerk1("ravi",2,60000,75,85);
		c.setSalary(6000);
		System.out.println("clerk  Salary: $" +c.getSalary());
		
	}

}


==================================================================================

Ques - 1
---------------
Given:
 interface A { void x(); }
 class B implements A { public void x() {} public void y() {} }
 class C extends B { public void x() {} }
And:
 java.util.List<B> list = new java.util.ArrayList<B>();
 list.add(new B());
 list.add(new C());
 for (B a : list) {
 a.x();
 a.y();
 }
What is the result?
A. 1A
B. 1A2
C. 1A2A
D. 2A
E. 2A1

Answer: C

Ques - 2
--------------
Given:
 import java.util.*;
 public class SortOf {
 public static void main(String[] args) {
 ArrayList<Integer> a = new ArrayList<Integer>();
 a.add(1); a.add(5); a.add(3);
 Collections.sort(a);
 a.add(2);
 Collections.reverse(a);
 System.out.println(a);
 }
 }
What is the result?
A. [1, 2, 3, 5]
B. [2, 1, 3, 5]
C. [2, 5, 3, 1]
D. [5, 3, 2, 1]
E. [1, 3, 5, 2]

Answer: C

Ques - 3
---------------
Given:
 import java.util.*;

 public class LetterASort{
 public static void main(String[] args) {
 ArrayList<String> strings = new ArrayList<String>();
 strings.add("aAaA");
 strings.add("AaA");
 strings.add("aAa");
 strings.add("AAaa");
 Collections.sort(strings);
 for (String s : strings) { System.out.print(s + " "); }
 }
 }
What is the result?
A. Compilation fails.
B. aAaA aAa AAaa AaA
C. AAaa AaA aAa aAaA
D. AaA AAaa aAaA aAa
E. aAa AaA aAaA AAaa
F. An exception is thrown at runtime.
Answer: C


Ques-4
---------
Given:
 public void genNumbers() {
 ArrayList numbers = new ArrayList();
 for (int i=0; i<5; i++) {
 int value = i * ((int) Math.random());
 Integer intObj = new Integer(value);
 numbers.add(intObj);
 }
 System.out.println(numbers);
 }

A. [0,0,0,0,0]
B. [0,1,2,3,4]
C. cant guess because Math.random() gives unique number everytime
D. Compiletime error

Answer-A


Ques - 5
-------------
What is the output?

public class CollectionExample {
public static void main(String[] args) {
ArrayList<String> al = new ArrayList<>();
System.out.println(al);
}
}
A. null
B. no output
C. []
D. Run time error

Answer: C

Ques - 6
------------
What is the output?

public class CollectionExample {
public static void main(String[] args) {
ArrayList al = new ArrayList<>();
al.add(5);
al.add("");
al.add(10);
System.out.println(al.contains(6));
System.out.println(al.contains(10));
System.out.println(al.contains(null));
}
}
A. false true false
B. false false false
C. true true true
D. true false true

Ans - A

Ques - 7
--------------
What will be the output of the following Java program?

import java.util.List;
public class ArrayListTest {
public static void main(String[] args)
{
    List<String> list = new ArrayList<String>();
		    list.add("O");
		    list.add(0, "B");
		  
		   ArrayList<String> li = new ArrayList<>();
		    li.add("A");
		    list.add("G");
		    list.addAll(3, li);
		    System.out.println(list);

   }
}

A.[O, B, A, G]
B.[A, B, G, O]
C.[B, O, G, A]
D.[B, A, G, O]

Answer-

Ques - 8
-------------

What will be the output of the following Java program?

import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
   ArrayList<String> list = new ArrayList<String>();
		 list.add(null);
		    list.add(0, "A");
		    list.add(3, "B");
		    list.add(1, "C");
		    list.add(2,"D");
		    System.out.println(list);
   }
}

A. [null, A, B, C, D]
B. java.lang.ArrayIndexOutOfBoundsException
C. java.lang.IndexOutOfBoundsException
D. [A, C, D, B, null]

Answer-C

Ques - 9
------------
What is the output of the following code if there is no error in the code?

import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
    ArrayList<String> list = new ArrayList<String>();
		 list.add(null);
		    list.add(0, "null");
		    list.add(null);
		    list.add(2, "B");
		    list.add("10");
		    list.add(1, "A");
		   System.out.println(list);
}

A.[null, null, null, B, 10, A]
B.[null, A, B, null, null, 10]
C.[null, A, null, B, null, 10]
D.[A, B, 10, null, null, null]

Answer-C

Ques - 10
------------
What is the output of the following code snippet?

import java.util.ArrayList;
import java.util.List;
public class StaticTest {
    static <T> List<T> addToList(T item, List<T> list) {
        List<T> result = new ArrayList<>();
        result.addAll(list);
        result.add(item);
        return result;
    }
        public static void main(String[] args) {
        List<Integer> numbers = new ArrayList<>();
        numbers.add(1);
        numbers.add(2);
        numbers = addToList(3, numbers);
        System.out.println(numbers);
    }
}


A) [1, 2, 3]
B) [3]
C) [1, 2]
D) The code will not compile due to a type mismatch.

Answer: A

Ques - 11
---------------
What will be the output of the program?
package foo; 
import java.util.Vector; /* Line 2 */
private class MyVector extends Vector 
{
    int i = 1; /* Line 5 */
    public MyVector() 
    { 
        i = 2; 
    } 
} 
public class MyNewVector extends MyVector 
{
    public MyNewVector () 
    { 
        i = 4; /* Line 15 */
    } 
    public static void main (String args []) 
    { 
        MyVector v = new MyNewVector(); /* Line 19 */
    } 
}
A) Compilation will succeed.
B) Compilation will fail at line 3.
C) Compilation will fail at line 5.
D) Compilation will fail at line 15.

Ans : B

Ques - 12
--------------
What is the output?

public class CollectionExample {
public static void main(String[] args) {
ArrayList<String> al = new ArrayList<>();
System.out.println(al);
}
}
A. null
B. no output
C. []
D. Run time error

Answer: C

Ques - 13
-------------
What will be the output of the following Java code?
import java.util.*;
class vector{
public static void main(String args[]){
Vector obj = new Vector(4,2);
obj.addElement(new Integer(3));
obj.addElement(new Integer(2));
obj.addElement(new Integer(5));
System.out.println(obj.elementAt(1));
}
}

a)0		b)3
c)2		d) 5

Ques - 14
-------------
-----------------
 What will be the output of the following Java code?
   import java.util.*;
   class vector 
   {
       public static void main(String args[]) 
       {
           Vector obj = new Vector(4,2);
           obj.addElement(new Integer(3));
           obj.addElement(new Integer(2));
           obj.addElement(new Integer(5));
           System.out.println(obj.capacity());
       }
   }

a)2		b)3
c)4		d)6

Ques - 15
-----------
What will be the output of the following Java program?

import java.util.List;
public class ArrayListTest {
public static void main(String[] args)
{
   List<String> list = new ArrayList<String>();
    list.add("Orange");
    list.add(0, "Banana");
  
   ArrayList<String> arList = new ArrayList<>();
    arList.add("Apple");
    list.add("Grapes");
    list.addAll(3, arList);
    System.out.println(list);
   }
}


Ques - 16
---------------
What is the output of the following code if there is no error in the code?

import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
   ArrayList<String> list = new ArrayList<String>();
    list.add(null);
    list.add(0, "A");
    list.add(null);
    list.add(2, "B");
    list.add("20");
    list.add(1, "C");
   System.out.println(list);
  }
}

Ques - 17
------------------
What will be the output of the following Java program?

import java.util.ArrayList;
import java.util.List;
public class ArrayListTest {
public static void main(String[] args)
{
   List<String> list = new ArrayList<String>();
    list.add("Patna");
    list.add(0, "New York");
    list.add("Mumbai");
    list.add(2, "Sydney");
    System.out.println(list);
  }
}


Ques - 18
-----------------
What will be the output of the following Java code?
    import java.util.*;
    class vector 
  {
      public static void main(String args[])  {
            Vector obj = new Vector(4,2);
          obj.addElement(new Integer(3));
          obj.addElement(new Integer(2));
          obj.addElement(new Integer(6));
            obj.insertElementAt(new Integer(8), 2);
            System.out.println(obj);
        }
    
}

a) [3, 2, 6]
b) [3, 2, 8]
c) [3, 2, 6, 8]
d) [3, 2, 8, 6]

Ques  - 19
---------------
Collections is an interface from which Set and List extend is it correct ?A)True
B)False

Ans - B

Ques - 20
----------------
If you don't override equals(), different objects can't be considered equal . Is this statement correct ?

A. True
B. False

Ans : A

Ques - 21
--------------
A. ArrayList class implements RandomAccess interface.
B. Vector class implements RandomAccess interface.
C. All List implemented class implements RandomAccess
D. RandomAccess is a marker interface.

Which statements are correct ?

a) A and B
b) A, B and C
c) A, B and D
d) A and C
e) All of the above

Ans : c

Ques - 22
-----------------
From which version ArrayList implements RandomAccess interface ? 

A. 1.2v
B. 1.4v
C. 1.5v
D. 1.8v

Ans : B

Ques - 23
----------------
A. Collection can hold primitives
B. Collection can hold both premitives and Object
C. Collection can hold only Objects

Above statements which statements are correct ?

a. A
b. A and B
c. B and C
d. C
e. B

Ans : d

Ques - 24
-------------------
ArrayList contains how many constructors ?

a)1
b)2
c)3
d)4
e)5

Ans : c

Ques - 25
---------------------
What is the return type of add() in ArrayList ?

a)int
b)void
c)boolean
d)Object

Ans : c

Ques - 26
--------------
1. ArrayList al = new ArrayList();
2. ArrayList al = new ArrayList(10)
3. ArrayList al = new ArrayList(10,5);
4. List l = new ArrayList(13);

Which object creation is not possible for ArrayList ?

a. 1
b. 2
c. 3
d. 4
e. None of the above

Ques - 27
-----------------
import java.util.Vector;

public class MCQ {
	public static void main(String[] args) {
		Vector<Integer> v = new Vector<>(2, 12);
		v.add(10);
		v.add(20);
		v.add(30);
		v.add(40);

		System.out.println(v.add(20));
		System.out.println(v.remove(v.indexOf(20) * 2));
		System.out.println(v.removeElement(30));

	}
}

A. Compiletime Error
B. true  1 30
C. true 30 false
D. true 40 true
e. true 4 true

Ans - C

Ques - 28
--------------
import java.util.Vector;
import java.util.function.Predicate;

public class MCQ {
	public static void main(String[] args) {
		Vector<Object> v = new Vector<>(2, 12);
		v.add(10);
		v.add('A');
		v.add(60.f);
		v.add(30);
		v.add(50.5);
		v.add(90);
		v.add('a');
		Predicate<Object> p = (x) -> {
			int i = (Integer)x;
			if(i>=50) {
				return true;
			}
			return false;
		};
		Vector<Object> res = new Vector<>();
		for(Object o : v) {
			if(p.test(o)) res.add(o);
		}
		System.out.println(res);

	}
}

A. Compiletime Error
B. Exception will Occur at runtime
C. [90]
D. [A, 60.0, 50.5, 90, a]
E. [60.0, 50.5, 90]

Ans : A

Ques - 29
----------------
import java.util.ArrayList;
import java.util.function.Function;

public class MCQ {
	public static void main(String[] args) {
		ArrayList<Integer> al1 = new ArrayList<>();
		ArrayList<Integer> al2 = new ArrayList<>();
		al1.add(100);
		al1.set(0, 201);
		al1.add(110);
		al1.set(0, 112);
		al1.add(300);
		al1.set(2, 121);
		al2.addAll(al1);
		Function<Integer, Integer> f = (x) -> {
			return x % 10;
		};
		for (int x : al1) {
			if (f.apply(x) == 0) {
				al2.add(x);
			}
		}
		System.out.println(al2);

	}
}

A. [112, 110, 121, 110]
B. [112, 201, 121, 100, 110, 300]
C. [112, 201, 121, 100, 110, 300, 100, 110, 300]
D. [112, 110, 121, 100, 110, 300]

Ans - A

Ques - 30
----------------
Which collection class allows you to grow or shrink its size and provides access to its elements , but whose methods are nor synchronized ?

A. java,util.ArrayList
B. java.util.LinkedHashSet
C. java.util.HashSet
D. java.util.List

Ans : A

========================================================================
CODEHS EXAM:
------------
SET-A:
------
1)
Write a Java program to remove the third element from an array list?

Sample Input/Output

[Red, Green, Orange, White, Black]  

After removing third element from the list:  

[Red, Green, White, Black] 
-------------------------------------------
2)
Write a Java program to convert Array to List.



A class called ArrayToList is given to you.



1. Add a static method: convertToList(String[] inputArray) : This method takes an array of strings as an argument. It should convert the given array to a list of Strings and return this list. 



Note that the length of the list must be the same as that of the array. 



2. Return null for errors a null array or an empty list for an empty array.



A Class called Tester with the main method is given to you. Use this class to test your solution
-------------------------------------------
3)
Define a Product class with the following attributes:



productId (Integer): The unique identifier of the product.

productName (String): The name of the product.

productPrice (Double): The price of the product.

dateAdded (Date): The date when the product was added.

Implement a constructor in the Product class to initialize its attributes.



Create a static method getProductObject() in the Product class to retrieve product data. For simplicity, you can hardcode the product data within this method.



Override the toString() method in the Product class to provide a string representation of the product.



Create a StoreObject class with a main method to store product objects into a file named "Product.txt". The class should do the following:



Create an ArrayList to hold product objects.

Populate the ArrayList with product objects obtained from the getProductObject() method.

Serialize the ArrayList and write it to the "Product.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve product objects from the "Product.txt" file and display them. The class should do the following:



Read the serialized ArrayList of products from the "Product.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Product objects.

Display the details of each retrieved product.


-----------------------------------------
4)GasBookingServices



GasCustomer Class:





Create a class named GasCustomer with the following private attributes:



customerId (int)



customerName (String)



address (String)



phoneNumber (String)



Implement a default constructor and a parameterized constructor that initializes all attributes.



Implement getter and setter methods for all attributes.



GasBookingService Class:







Create a class named GasBookingService to handle gas bookings.



Maintain an ArrayList of GasCustomer objects to store booking details.



Implement a method bookGas that takes a GasCustomer object and adds it to the list of customers.



Implement a method isFirstTimeCustomer that takes a GasCustomer object and returns true if the customer is booking gas for the first time based on their phone number, false otherwise.



Implement a method calculateBill that takes a GasCustomer object and a base booking charge as parameters. If the customer is booking gas for the first time, return a bill of 800; otherwise, return the base booking charge 200.



Implement a method printBill that takes a GasCustomer object and a bill amount as parameters and returns a message confirming the gas booking with the customer's name and the bill amount.



GasBookingServiceTester Class:







Create a class named GasBookingServiceTester with a main method.



Inside the main method:



Create an instance of GasBookingService.



Create two instances of GasCustomer.



Book gas for both customers using the bookGas method.



Test the isFirstTimeCustomer method for both customers and print the results.



Test the calculateBill method for both customers with a base booking charge of 200.0 and print the bills.



Test the printBill method for both customers and print the bills.

-----------------------------------------------------------------------------------
SET-B:
-----
1)
Write a java program to find duplicates in an arrayList.

A Duplicates class is given to you. Add the following implementations in the class:

1. A List attribute called numberList. This must be a list of Integers

2. Getter/Setter for the list

3. Implement the default constructor.

 Implement the parameter constructor.

 Implement the method getDuplicatesList():

4. This method must scan through the numberList field of the class. All the numbers in the list that are duplicated (occurs more than once) must be returned as a new List. 

	For example, if the numberList is initialized to { 33,45,67,89,33,47,21,45}, the method should return a new list that contains { 33,45}.

 Note that a number may be repeated any number of times in the list, but it should be present in the returned list only once. 

		For example, if the numberList is initialized to { 66,66,77,66,66}, the method should return a new list that contains { 66}.

5. If the numberList is empty, or null, return null.

-------------------------------------------------------------

2)Write a Java program to remove the third element from an array list?

Sample Input/Output

[Red, Green, Orange, White, Black] 

After removing third element from the list:  

[Red, Green, White, Black] 

--------------------------------------------------------------------
3)Define an Employee class with the following attributes:



employeeId (Integer): The unique identifier of the employee.

employeeName (String): The name of the employee.

employeeSalary (Double): The salary of the employee.

dateOfJoining (Date): The date when the employee joined the company.

Implement a constructor in the Employee class to initialize its attributes.



Create a static method getEmployeeObject() in the Employee class to retrieve employee data. For simplicity, you can hardcode the employee data within this method.



Override the toString() method in the Employee class to provide a string representation of the employee.



Develop a StoreObject class with a main method to store employee objects into a file named "Employee.txt". The class should perform the following tasks:



Create an ArrayList to hold employee objects.

Populate the ArrayList with employee objects obtained from the getEmployeeObject() method.

Serialize the ArrayList and write it to the "Employee.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve employee objects from the "Employee.txt" file and display them. The class should execute the following steps:



Read the serialized ArrayList of employees from the "Employee.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Employee objects.

Display the details of each retrieved employee.
------------------------------------------------------------------

4)You are given a list of students along with their grades in a subject. Write a Java program to find and print the names of students who scored the highest grade.



Instructions:



_____________________



> Implement a Java program that takes a list of students and their grades as input and outputs the names 



 of students who achieved the highest grade.



> The program should utilize only ArrayList to store student data and perform the necessary operations.



> Ensure that the program correctly identifies and prints the names of all students who scored the highest grade.



> You may assume that the input list of students is not empty.



> Consider the efficiency of your solution in terms of time complexity.







Input as:



______________



Student("John", 85)



Student("Alice", 92)



Student("Bob", 88)



Student("Charlie", 85)



Student("Emily", 90)







Ouput as:



______________



Students with the highest grade:



Alice
----------------------------------------------------------------------------------
SET-C:
-----------
1)
Write a Java program to search for an element in an array list?



list : [ 23 , 45 , 67, 89 , 22 , 34 , 56 ]



input is: 5



output is: 22


----------------------------------------------------------
2)
Write a Java program to copy one array list into another?



Sample Input /Output



List1: [1, 2, 3, 4]              



List2: [A, B, C, D] 



Copy List to List2,



After copy:                



List1: [A, B, C, D]              



List2: [A, B, C, D]

---------------------------------------------------------------
3)
Define a Teacher class with the following attributes:



teacherId (Integer): The unique identifier of the teacher.

teacherName (String): The name of the teacher.

teacherSalary (Double): The salary of the teacher.

dateOfJoining (Date): The date when the teacher joined the school.

Implement a constructor in the Teacher class to initialize its attributes.



Create a static method getTeacherObject() in the Teacher class to retrieve teacher data. For simplicity, you can hardcode the teacher data within this method.



Override the toString() method in the Teacher class to provide a string representation of the teacher.



Develop a StoreObject class with a main method to store teacher objects into a file named "Teacher.txt". The class should execute the following steps:



Create an ArrayList to hold teacher objects.

Populate the ArrayList with teacher objects obtained from the getTeacherObject() method.

Serialize the ArrayList and write it to the "Teacher.txt" file using ObjectOutputStream.

Implement a RetrieveObject class with a main method to retrieve teacher objects from the "Teacher.txt" file and display them. The class should perform the following tasks:



Read the serialized ArrayList of teachers from the "Teacher.txt" file using ObjectInputStream.

Cast the retrieved object to an ArrayList of Teacher objects.

Display the details of each retrieved teacher.

--------------------------------------------------------
FoodOrderService



FoodCustomer Class:







Create a class named FoodCustomer with the following private attributes:



customerId (int)



customerName (String)



address (String)



phoneNumber (String)



Implement a default constructor and a parameterized constructor that initializes all attributes.



Implement getter and setter methods for all attributes.



FoodOrderService Class:







Create a class named FoodOrderService to handle food orders.



Maintain an ArrayList of FoodCustomer objects to store order details.



Implement a method placeOrder that takes a FoodCustomer object and adds it to the list of customers.



Implement a method isFirstTimeCustomer that takes a FoodCustomer object and returns true if the customer is ordering for the first time based on their phone number, false otherwise.



Implement a method calculateBill that takes a FoodCustomer object and a base delivery charge as parameters. If the customer is ordering for the first time, return a bill of 0; otherwise, return the base delivery charge.



Implement a method printBill that takes a FoodCustomer object and a bill amount as parameters and returns a message confirming the order with the customer's name and the bill amount.



FoodOrderServiceTester Class:







Create a class named FoodOrderServiceTester with a main method.



Inside the main method:



Create an instance of FoodOrderService.



Create two instances of FoodCustomer.



Place orders for both customers using the placeOrder method.



Test the isFirstTimeCustomer method for both customers and print the results.



Test the calculateBill method for both customers with a base delivery charge of 50.0 and print the bills.



Test the printBill method for both customers and print the bills.



Your implementation should demonstrate the functionality of the food ordering system. Make sure to include appropriate messages and output formats for better clarity.





Ouput :-



Yes , Yes , Yes , No , Yes 

=====================================================================

                                     Stream API
=======================================================================================
1)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>();
		list.add(12);
		list.add(13);
		list.add(12);
		list.add(114);
		List<Integer> list2 = list.stream().distinct().toList();
		System.out.println(list2);
	}
}

A)[12,13,114]
B)[13,114]
C)[12,13,12,114]
D)[12,13,0,114]

Answer:A ([12,13,114])

2)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>();
		list.add(10);
		list.add(13);
		list.add(16);
		list.add(18);
		List<Integer> list2 = list.stream().filter(x->x%2!=0).collect(Collectors.toList());
		System.out.println(list2);
	}
}

A)[10,16,18]
B)[13]
C)Compilation Error
D)[10,13,16,18]

Answer:B ([13])

3)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>();
		list.add(12);
		list.add(13);
		list.add(16);
		list.add(14);
		Optional<Integer> max = list.stream().max((x, y) -> x.compareTo(y));
		System.out.println(max);
	}
}

A)IndexOutOfBoundsException
B)Compilation Error
C)Optional[16]
D)Optional[13]

Answer:C (Optional[16])

4)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> arrayList = new ArrayList<Integer>();
		arrayList.add(20);
		arrayList.add(21);
		arrayList.add(22);
		arrayList.add(23);
		List<Integer> collect = arrayList.stream().sorted((x, y) -> y.compareTo(x)).collect(Collectors.toList());
		System.out.println(collect);
	}
}

A)[20,21,22,23]
B)Compilation Error
C)[]
D)[23,22,21,20]

Answer:D ([23, 22, 21, 20])

5)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<String> al = new ArrayList<String>();
		al.add("A");
		al.add("BC");
		al.add("CDE");
		al.add("DEFG");
		List<String> list = al.stream().filter(x -> x.length() >= 2).peek(x -> {}).toList();
		System.out.println(list);
	}
}

A)[BC, CDE, DEFG]
B)[CDE , DEFG]
C)[A ,BC, CDE, DEFG]
D)Compilation Error

Answer:A ([BC, CDE, DEFG])

6)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> al=new ArrayList<Integer>();
		al.add(9);
		al.add(10);
		al.add(11);
		al.add(12);
		List<Integer> list = al.stream().dropWhile(x->x<=10).toList();
		System.out.println(list);
	}
}

A)[9 , 10]
B)[11, 12]
C)[10 ,11 ,12]
D)Compilation Error

Answer:B ([11, 12])

7)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> al=new ArrayList<Integer>();
		al.add(9);
		al.add(10);
		al.add(11);
		al.add(12);
		List<Integer> list = al.stream().takeWhile(x->x<=10).toList();
		System.out.println(list);
	}
}

A)[9 ,10 ,11 ,12]
B)[11, 12]
C)[9 , 10]
D)Compilation Error

Answer:C ([9, 10])

8)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> al=new ArrayList<Integer>();
		al.add(-1);
		al.add(-2);
		al.add(-5);
		al.add(0);
		al.add(1);
		al.add(2);
		List<Integer> list = al.stream().skip(1).filter(y->y<=0).peek(x->{}).toList();
		System.out.println(list);
	}
}

A)[-1, -2, -5 , 0]
B)[0 ,1 ,2]
C)Compilation Error
D)[-2, -5, 0]

Answer:D ([-2, -5, 0])

9)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		TreeSet<Integer> treeSet=new TreeSet<Integer>((x,y)->y.compareTo(x));
		treeSet.add(10); 
		treeSet.add(14);
		treeSet.add(13);
		System.out.println(treeSet);
		treeSet.stream().sorted(new Comparator<Integer>() {
			@Override
			public int compare(Integer o1, Integer o2) {
				return o1 + o2;
			}
		}).forEach(System.out::println);
	}
}

A)[14,13,10]
   14 13 10 
B)[10,13,14]
   10 13 14
C)[10,14,13]
   10 14 13
D)Compilation Error

Answer: A ([14,13,10], 14 13 10 )

10)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		ArrayList<Integer> al = new ArrayList<Integer>();
		al.add(1);
		al.add(2);
		al.add(3);
		al.add(4);
		al.add(5);
		al.add(6);
		List<Integer> list = al.stream().limit(4).toList();
		System.out.println(list);
	}
}

A)[1, 2, 3, 4, 5, 6]
B)[1, 2, 3, 4]
C)Compilation Error
D)[1, 2, 3]

Answer:B ([1, 2, 3, 4])

11)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<Integer> list = Arrays.asList(1,2,3,4,5);
		list.stream().map(k -> k*2+3-k).forEach(k -> System.out.print(k +" "));
	}
}

A)1 2 3 4 5
B)5 6 7 8 9
C)4 5 6 7 8 
D)Compilation Error

Ans:C (4 5 6 7 8)

12)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<List<String>> list= Arrays.asList(Arrays.asList("1","2","3","4","5"));
		list.stream().flatMap(x -> list.stream())
		.forEach(System.out::print);
	}
}

A)Runtime Exception
B)Compilation Error
C)[[1, 2, 3, 4, 5]]
D)[1, 2, 3, 4, 5]

Answer:D ([1, 2, 3, 4, 5])

13)Choose the correct output for following code Snippet?

public class Test {
    public static void main(String[] args) {
        List<String> words = Arrays.asList("apple", "banana", "cherry");
        long count = words.stream()
                          .map(String::toUpperCase)
                          .filter(s -> s.startsWith("A"))
                          .count();
        System.out.println(count);
    }
}

A) 1
B) 2
C) 3
D) 0

Answer:A (1)

14)What is a Stream in the context of the Java 8 Stream API?

A) A data structure for storing elements.
B) A sequence of data elements that can be processed in parallel or sequentially.
C) A container for holding collections.
D) A type of exception thrown during runtime.

Answer: B (A sequence of data elements that can be processed in parallel or sequentially.)

15)Which method is used to create a Stream from a collection in Java 8?

A) getStream()
B) parallelStream()
c) stream()
D) createStream()

Answer:C (stream())

16)What is the purpose of the collect() method in the Stream API?

A) To transform the elements of a Stream.
B) To filter the elements in a Stream based on a predicate.
C) To perform a reduction operation on the Stream elements.
D) To accumulate the elements of a Stream into a collection or a summary result.

Answer:D (To accumulate the elements of a Stream into a collection or a summary result.)

17)What is the purpose of the Optional class in Java?

A) To handle null values more gracefully
B) To create immutable objects
C) To manage thread synchronization
D) To optimize memory usage

Answer:A (To handle null values more gracefully)

18)What is the purpose of the `peek` method in the Stream API?

A) It is used to modify the elements of the stream
B) It is used to perform an action without interfering with the elements
C) It is used to skip elements in the stream
D) It is used to concatenate streams

Answer:B (It is used to perform an action without interfering with the elements)

19)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<String> words = Arrays.asList();
		String result = words.stream().map(String::toUpperCase).reduce((s1, s2) -> s1 + s2).orElse("NULL");
		System.out.println(result);
	}
}

A)No output
B)NullPointer Exception
C)NULL
D)Compilation Error

Answer:C (NULL)

20)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<String> al = Arrays.asList("A", "B", "C", "D");
		List<String> list = al.stream().skip(1).filter(x -> x.startsWith("B")).peek(x -> {}).toList();
		System.out.println(list);

	}
}

A)Compilation Error
B)[A, C, D]
c)B
D)[B]

Answer:D ([B])

21)Choose the correct output for following code Snippet?

public class Test {
	public static void main(String[] args) {
		List<Integer> list = List.of(2, 3, 4, 5, 6);
		list.stream().takeWhile(x -> x >= 0).map(x -> x * 0 + 2 + 3).peek(System.out::print).toList();
	}
}

A)55555
B)23456
C)34567
D)Compilation Error

Answer:A (55555)

22) import java.util.*;
public class Test {
	public static void main(String[] args) {
		List<Integer> list = List.of(54,34,234,23,364,3);
		list.stream().map(k -> k-k+2).filter(k -> k!=0).map(k -> 100)
		.forEach(k -> System.out.print(k - 10 + " "));
	}
}

A)54 34 234 23 364 3
B)-56 -76 124 -87 254 -107
C)90 90 90 90 90 90
D)Compilation Error

Answer: C (90 90 90 90 90 90)

23) What happens when you call get() on an empty Optional object?

a) Returns null
b) Returns a default value
c) An NoSuchElementException is thrown
d) An OptionalException is thrown

Answer : C) An NoSuchElementException is thrown


24) What is the difference between the map() and flatMap() methods in Optional?

a) map() can return null, flatMap() cannot
b) map() returns an Optional, flatMap() returns the value directly
c) flatMap() flattens nested Optionals, map() does not
d) There is no difference

Answer : c) flatMap() flattens nested Optionals, map() does not


25)  Which is the new method introduced in java 8 to iterate over a collection?
a) for (String i : StringList)
b) foreach (String i : StringList)
c) stringList.forEach()
d) List.for()

Answer : c  (stringList.forEach())

26) public class Test {
	public static void main(String[] args) {
		Comparator<Integer> comparator = new Comparator<Integer>() {
			public int compare(Integer o1, Integer o2) {
				return o2.compareTo(o1);
			}
		};
		List<Integer> list = List.of(54,34,234,23,364,3);
		list.stream().sorted(comparator).filter(k -> k%2 == 1).forEach(k -> System.out.print(k + " "));
	}
}

A)34 54 234 364 
B)23 3
C)364 234 54 34
D)Compilation Error

Answer : B)23 3

27) import java.util.*;
public class Test {
	static class Employee
	{
		private Integer id;
		private String name;
		public Integer getId() {
			return id;
		}
		public String getName() {
			return name;
		}
		public Employee(Integer id, String name) {
			super();
			this.id = id;
			this.name = name;
		}
		@Override
		public String toString() {
			return "Employee [id=" + id + ", name=" + name + "]";
		}
	}
	public static void main(String[] args) {
		List<Employee> list = List.of(new Employee(1, "John") , 
									new Employee(5, "Ram") ,
									new Employee(7, "Tear") ,
									new Employee(4, "Jerry") ,
									new Employee(22, "You"));
		list.stream().limit(3).sorted((o1,o2)->o1.getId() - o2.getId()).forEach(System.out::println);
	}
}


A)Employee [id=1, name=John]
  Employee [id=4, name=Jerry]
  Employee [id=5, name=Ram]
  Employee [id=7, name=Tear]   
  Employee [id=22, name=You]

 
B)Employee [id=5, name=Ram]
  Employee [id=7, name=Tear]
  Employee [id=22, name=You]

C)Employee [id=1, name=John]
  Employee [id=5, name=Ram]
  Employee [id=7, name=Tear]

D)ClassCastException

Answer : B) Employee [id=1, name=John]
	    Employee [id=5, name=Ram]
	    Employee [id=7, name=Tear]


28)public class Test {
	public static void main(String[] args) {
		ArrayDeque<String> de = new ArrayDeque<String>();
		de.push("well !!");
		de.push("prepare");
		System.out.println("Hi Everyone All The Best!!!");
		for (Object element : de) {
			System.out.println(element);
		}
	}
}

a) Hi Everyone All The Best!!!
   well !!
   prepare 
   

b) Compile Time Error

c) Hi Everyone All The Best!!!
   prepare
   well !!

d) None Of The Above

Ans - c 


29) public class Capital {
    public static void main(String args[]) {
        List mylist = new ArrayList();
        int[] val = {15, 5565, 646, 233, 100};
        for (int element : val)
            mylist.add(new Integer(element));
        System.out.println(mylist);
        Iterator iterator = mylist.iterator();
        int i = mylist.size();  //i = 
        while (iterator.hasNext()) {
            Integer element = (Integer) iterator.next();
            int value = element.intValue();
            i--;
            if ((value < 100) || mylist.get(i).equals(100))
                iterator.remove();
        }
        System.out.println(mylist);
    }
}

a) [15, 5565, 646, 233, 100]
   [15, 5565, 646, 233, 100]

b) [15, 5565, 646, 233, 100]
   [5565, 646, 233]

c) [15, 5565, 646, 233, 100]
   [15, 5565, 646, 233]

d) [15, 5565, 646, 233, 100]
   []


Ans - d


30) public class Testing 
{	public static void main(String[] args) 
	{		
		class demo
		{  String name;Integer id;
			public demo(String name, Integer id) 
			{	this.name = name;this.id = id;
			}
			public String getName() {return name;}
			public Integer getId() {return id;}
			static void meth()
			{
				TreeMap<demo, Integer> tm 
                                = new TreeMap<>((a,b)->a.getName().compareTo(b.getName()));
				tm.put(new demo("Hello", 01), 1);
				tm.put(new demo("zello", 05), 2);
				tm.put(new demo("Bello", 011), 3);
				tm.put(new demo("Oello", 010), 4);
				WeakHashMap<demo, Integer> wm = new WeakHashMap<>(tm);
				wm.forEach(new BiConsumer<demo, Integer>()
				{
					public void accept(demo t, Integer u) 
					{
						System.out.println(t.getName()+ " " + t.getId() + " " + u);
					}
				});}}
		demo.meth();
	}
}


a) Hello 1  1
   zello 5  2
   Bello 11 3
   Oello 10 4

b)  Oello 10 4
    Hello 1  1
    Bello 11 3
    zello 5  2


c)  Oello 8 4
    Hello 1 1
    Bello 9 3
    zello 5 2

d) Compile Time Error


Ans  - c



==========================================================================================================================

Set - A
--------

1. Given a list of Person objects with name and age properties, write a program to sort the list of persons by age in ascending order using the Stream API.

2. Write a program to convert all the strings in a list to uppercase and print the result using the Stream API.




Set - B
--------

1. Given a list of Employee objects with id and salary properties, write a program to sort the list of Employees by salary in descending order using the Stream API.

2. Write a program to convert all the strings in a list to lowercase and print the result using the Stream API.


Set - C
--------

1. Given a list of Employee objects with id and salary properties, write a program to filter the list of Employees by salary in who are having salary > 30000.


2. Write a program to convert all the lower case strings in a list to first letter Uppercase and print the result using the Stream API.

ex -> input -> "abcd" , "efgh" , "jklm" , "xyz" -----> output -> Abcd , Efgh , Jklm , Xyz

========================================================================


Program 01
----------
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

Input: nums = [1,2,3,1]

Output: true

Input: nums = [1,2,3,4]

Output: false


package labPgms;

public class AppearanceOfDublicates1 {

	public static void main(String[] args) {
		boolean flag=false;
		int []a= {1,2,3,4};
		for(int i=0;i<a.length;i++) {
			for(int j=i+1;j<a.length;j++) {
				if(a[i]==a[j]) {
					flag=true;
					break;
				}
			}
		}
if(flag) 
System.out.println(flag);
else
	System.out.println(flag);
	}

}
-----------------------------------------------------------

Program 02 
----------
Java 8 program to perform cube on list elements and filter numbers greater than 50.

Program 03 
----------
Write a java program where there is a list of employees and each employee have the attributes as age name and salary, requirement is I have to increase the salary of each employee whose age is greater than 25 by 10%?


Program 04 :
------------
Write a java program to identify the highest paid employee from each department which is present in the list which have the employee details as well as the department name also?



Program 05
----------
Given 3 list of String name, each list is containing 5 names. Convert all the list into single list using flatMap() and display the result


==============================================================================================================
















